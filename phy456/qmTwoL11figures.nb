(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     59086,       1108]
NotebookOptionsPosition[     57681,       1079]
NotebookOutlinePosition[     58119,       1096]
CellTagsIndexPosition[     58076,       1093]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This was the input, to use formulas to generate the vector labels\
\>", "Text",
 CellChangeTimes->{{3.527891491994263*^9, 
  3.527891507275137*^9}},ExpressionUUID->"f0d2586d-6c4e-4cd0-a413-\
1b75cc0400e3"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  GraphicsBox[{
    {AbsoluteThickness[1], StrokeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
     EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.33333333333333337`, 0.8277777777777778}, {0.3305555555555556,
       0.1583333333333331}}]}, 
    {AbsoluteThickness[1], StrokeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
     EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.15555555555555559`, 0.475}, {1.1722222222222225`, 0.475}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.020417379446695298`], StrokeForm[{
     RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], 
     Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], FaceForm[Opacity[
     0.34]], ArrowBox[{{0.33333333333333337`, 0.475}, {0.6027777777777779, 
      0.7972222222222223}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.020417379446695298`], StrokeForm[{
     RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], 
     Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], FaceForm[Opacity[
     0.34]], ArrowBox[{{0.602777777777778, 0.7972222222222223}, {
      1.0222222222222226`, 0.8583333333333333}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.020417379446695298`], StrokeForm[{
     RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], 
     Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], FaceForm[Opacity[
     0.34]], ArrowBox[{{0.5722222222222223, 0.06944444444444442}, {
      0.9916666666666669, 0.13055555555555542`}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.020417379446695298`], StrokeForm[{
     RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], 
     Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], FaceForm[Opacity[
     0.34]], ArrowBox[{{0.33333333333333337`, 0.475}, {1.0222222222222226`, 
      0.8583333333333333}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.020417379446695298`], StrokeForm[{
     RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], 
     Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], FaceForm[Opacity[
     0.34]], ArrowBox[{{0.3305555555555556, 0.475}, {0.5722222222222223, 
      0.06944444444444431}}]}, 
    {AbsoluteThickness[1], Arrowheads[0.020417379446695298`], StrokeForm[{
     RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], 
     Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], FaceForm[Opacity[
     0.34]], ArrowBox[{{0.3305555555555556, 0.475}, {0.991666666666667, 
      0.13055555555555542`}}]}, InsetBox[
     StyleBox[
      OverscriptBox["r", "\[RightVector]"],
      FontSize->20,
      Background->GrayLevel[1.]], {0.3916666666666667, 0.6444444444444446}, {
     Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[
      TagBox["",
       HoldForm],
      FontSize->20,
      Background->GrayLevel[1.]], {0.7222222222222224, 0.6305555555555558}, {
     Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[
      TagBox[
       RowBox[{
        RowBox[{"OverVector", "[", "r", "]"}], " ", "+", " ", 
        RowBox[{"OverVector", "[", "a", "]"}]}],
       HoldForm],
      FontSize->20,
      Background->GrayLevel[1.]], {0.5444444444444446, 0.5833333333333335}, {
     Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     RowBox[{"OverVector", "[", "a", "]"}], 
     Scaled[{0.5416666666666667, 0.8583333333333333}], Center], InsetBox[
     RowBox[{"OverVector", "[", "a", "]"}], 
     Scaled[{0.64375, 0.0694444444444442}], Center], InsetBox[
     RowBox[{
      RowBox[{"OverVector", "[", "s", "]"}], " ", "+", " ", 
      RowBox[{"OverVector", "[", "a", "]"}]}], 
     Scaled[{0.5416666666666667, 0.34166666666666656}], Center], InsetBox[
     RowBox[{"OverVector", "[", "s", "]"}], 
     Scaled[{0.3395833333333339, 0.1666666666666663}], 
     Center, {0.18333333333333376, 0.05000000000000001}, {{1., 0.}, {0., 
     1.}}]},
   ContentSelectable->True,
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{480, 360},
   PlotRange->{{0., 1.3333333333333335`}, {0., 1.}},
   PlotRangePadding->Automatic]}]], "Input",
 CellChangeTimes->{{3.5278904557819953`*^9, 3.527890458294139*^9}, {
  3.5278904925780997`*^9, 3.5278907218652143`*^9}, {3.527890753174005*^9, 
  3.5278908978442793`*^9}, {3.5278910691640787`*^9, 3.527891070900178*^9}, {
  3.527891434262961*^9, 
  3.527891443613496*^9}},ExpressionUUID->"a08eace7-4b4c-4010-80ce-\
dc08cedf3b9b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5278909054867167`*^9, 3.5278910155240107`*^9}, 
   3.527891104946125*^9, {3.527891160151283*^9, 
   3.5278911646425395`*^9}},ExpressionUUID->"fdea04a3-0ad2-4fed-8d91-\
aa92203463cf"],

Cell["\<\
How to save this graphic as an image file:  Clicking on the graphic seems to \
allow editing it.  Click on the sidebar for the cell containing it, then \
File->Save Selection As\
\>", "Text",
 CellChangeTimes->{{3.527891203180744*^9, 3.5278912175855675`*^9}, {
  3.5278913784727697`*^9, 
  3.5278914243373933`*^9}},ExpressionUUID->"b985c69a-7cc1-412a-ad87-\
45e25bf03d6e"],

Cell[BoxData[
 GraphicsBox[{
   {AbsoluteThickness[1], StrokeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
    EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    StyleBox[
     LineBox[{{0.33333333333333337`, 0.8277777777777778}, {0.3305555555555556,
       0.1583333333333331}}],
     StripOnInput->False,
     FontSize->23]}, 
   {AbsoluteThickness[1], StrokeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
    EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.15555555555555559`, 0.475}, {1.1722222222222225`, 0.475}}]}, {
    StyleBox[
     {AbsoluteThickness[1], Arrowheads[0.020417379446695298`], StrokeForm[{
      RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], 
      Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], FaceForm[Opacity[
      0.34]], ArrowBox[{{0.33333333333333337`, 0.475}, {0.6027777777777779, 
       0.7972222222222223}}]},
     StripOnInput->False,
     FontSize->23], 
    StyleBox[
     {AbsoluteThickness[1], Arrowheads[0.020417379446695298`], StrokeForm[{
      RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], 
      Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], FaceForm[Opacity[
      0.34]], ArrowBox[{{0.602777777777778, 0.7972222222222223}, {
       1.0222222222222226`, 0.8583333333333333}}]},
     StripOnInput->False,
     FontSize->23], 
    StyleBox[
     {AbsoluteThickness[1], Arrowheads[0.020417379446695298`], StrokeForm[{
      RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], 
      Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], FaceForm[Opacity[
      0.34]], ArrowBox[{{0.5722222222222223, 0.06944444444444442}, {
       0.9916666666666669, 0.13055555555555542`}}]},
     StripOnInput->False,
     FontSize->23], 
    StyleBox[
     {AbsoluteThickness[1], Arrowheads[0.020417379446695298`], StrokeForm[{
      RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], 
      Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], FaceForm[Opacity[
      0.34]], 
      ArrowBox[{{0.33333333333333337`, 0.475}, {1.0222222222222226`, 
       0.8583333333333333}}]},
     StripOnInput->False,
     FontSize->23], 
    StyleBox[
     {AbsoluteThickness[1], Arrowheads[0.020417379446695298`], StrokeForm[{
      RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], 
      Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], FaceForm[Opacity[
      0.34]], ArrowBox[{{0.3305555555555556, 0.475}, {0.5722222222222223, 
       0.06944444444444431}}]},
     StripOnInput->False,
     FontSize->23], 
    StyleBox[
     {AbsoluteThickness[1], Arrowheads[0.020417379446695298`], StrokeForm[{
      RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[0., 0., 0.], 
      Opacity[1.], AbsoluteThickness[1]}], EdgeForm[None], FaceForm[Opacity[
      0.34]], ArrowBox[{{0.3305555555555556, 0.475}, {0.991666666666667, 
       0.13055555555555542`}}]},
     StripOnInput->False,
     FontSize->23], 
    StyleBox[InsetBox[
      OverscriptBox["r", 
       "\[RightVector]"], {0.3916666666666667, 0.6444444444444446}, {
      Left, Baseline},
      Alignment->{Left, Top}],
     StripOnInput->False,
     FontSize->23], 
    StyleBox[InsetBox[
      TagBox[
       RowBox[{
        OverscriptBox["r", "\[RightVector]"], "+", 
        OverscriptBox["a", "\[RightVector]"]}],
       HoldForm], {0.693055555555556, 0.627777777777778}, {Left, Baseline},
      Alignment->{Left, Top}],
     StripOnInput->False,
     FontSize->23], 
    StyleBox[InsetBox[
      OverscriptBox["a", "\[RightVector]"], 
      Scaled[{0.5416666666666667, 0.8583333333333333}], Center],
     StripOnInput->False,
     FontSize->23], 
    StyleBox[InsetBox[
      OverscriptBox["a", "\[RightVector]"], 
      Scaled[{0.64375, 0.0694444444444442}], Center],
     StripOnInput->False,
     FontSize->23], 
    StyleBox[
     InsetBox["", Scaled[{0.5416666666666667, 0.34166666666666656}], Center],
     StripOnInput->False,
     FontSize->23], 
    StyleBox[InsetBox[
      OverscriptBox["s", "\[RightVector]"], 
      Scaled[{0.3395833333333339, 0.1666666666666663}], 
      Center, {0.18333333333333376, 0.05000000000000001}, {{1., 0.}, {0., 
      1.}}],
     StripOnInput->False,
     FontSize->23], 
    StyleBox[InsetBox[
      TagBox[
       RowBox[{
        OverscriptBox["s", "\[RightVector]"], "+", 
        OverscriptBox["a", "\[RightVector]"]}],
       HoldForm], {0.6833333333333336, 0.3138888888888889}, {Left, Baseline},
      Alignment->{Left, Top}],
     StripOnInput->False,
     FontSize->23]}},
  ContentSelectable->True,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{480, 360},
  PlotRange->{{0., 1.3333333333333335`}, {0., 1.}},
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{{3.527891056651363*^9, 3.5278910566783648`*^9}, 
   3.5278911317696595`*^9},ExpressionUUID->"6bdb1b11-026c-4458-842d-\
af9d1395a2cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{"E", "^", 
   RowBox[{"(", 
    RowBox[{"-", " ", 
     RowBox[{"x", "^", "2"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", " ", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", " ", 
       RowBox[{"f", "[", 
        RowBox[{"x", " ", "-", "3"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "r"}], ",", " ", "r"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"r", ",", "  ", "1", ",", " ", "30"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5278929648515053`*^9, 3.5278930175585203`*^9}, {
  3.5278930537895927`*^9, 
  3.527893114725078*^9}},ExpressionUUID->"773248d0-554a-4c91-8afe-\
5aacf189b176"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   SuperscriptBox["x", "2"]}]]], "Output",
 CellChangeTimes->{{3.5278930994722056`*^9, 
  3.527893115759137*^9}},ExpressionUUID->"b9d29b82-a023-4761-a406-\
5e6f8505a25d"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`r$$ = 4.800000000000001, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`r$$], 1, 30}}, Typeset`size$$ = {360., {112., 116.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`r$2935$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`r$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`r$$, $CellContext`r$2935$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`f[$CellContext`x], 
         $CellContext`f[$CellContext`x - 
          3]}, {$CellContext`x, -$CellContext`r$$, $CellContext`r$$}], 
      "Specifications" :> {{$CellContext`r$$, 1, 30}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {157., 163.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",
 CellChangeTimes->{{3.5278931638228865`*^9, 3.527893288532629*^9}, 
   3.5278933225195727`*^9},ExpressionUUID->"4001617a-80a5-4467-9f82-\
fcf36ee80f46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"E", "^", 
  RowBox[{"(", 
   RowBox[{"-", 
    RowBox[{"x", "^", "2"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.5278932990092278`*^9, 
  3.5278933085627747`*^9}},ExpressionUUID->"9f91316a-9f3b-4189-a477-\
54f169a47f61"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   SuperscriptBox["x", "2"]}]]], "Output",
 CellChangeTimes->{
  3.5278933096458364`*^9},ExpressionUUID->"7da5627a-a0c5-4adc-a2fa-\
8ba25d5437a5"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
MzMTQDZ6UvcFGts97pZg6Q==
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
7XklCfz//3vYjcuvz2oeSQL/B2dNd1w=
      "]]}}, 
   {EdgeForm[{GrayLevel[0.3333333333333333], Opacity[0.33]}], FaceForm[{
    GrayLevel[0.49999237048905165`], Opacity[0.33]}], 
    RectangleBox[{-4.431438127090301, 0.8391117560234711}, \
{-4.431438127090301, 0.8391117560234711}]}, InsetBox[
    StyleBox[
     TagBox["",
      HoldForm],
     FontSize->23,
     Background->GrayLevel[1.]], {-4.431438127090301, 2.1356126417905372}, {
    Left, Top}, {19.03567447045708, Automatic},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[
     TagBox[
      RowBox[{
       RowBox[{"\[CapitalPsi]", "(", "x", ")"}], " ", "=", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}]]}],
      HoldForm],
     FontSize->23,
     Background->GrayLevel[1.]], {-3.6718895159791876, 0.2426068463476143}, {
    Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[
     TagBox[
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalPsi]", "'"}], 
        RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
       RowBox[{"\[CapitalPsi]", "(", 
        RowBox[{"x", "-", "3"}], ")"}]}],
      HoldForm],
     FontSize->23,
     Background->GrayLevel[1.]], {1.1774636519881132, 0.878465273480824}, {
    Left, Top}, {3.6293939869007814, 0.14207391009301892}, {{1., 0.}, {0., 
    1.}},
    Alignment->{Left, Top}], 
   InsetBox["\[IndentingNewLine]", Scaled[{0.5, 0.5}], Center]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImagePadding->{{0.1, 1.1}, {11.564988, 1.565104}},
  ImageSize->{462., Automatic},
  PlotRange->{{-5.000000000000001, 
   5.000000000000001}, {-0.020833321960058184`, 1.0208327760428508`}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{{3.5278933880503206`*^9, 
  3.5278934653697433`*^9}},ExpressionUUID->"1261dd4b-9d9a-4266-91c3-\
0706b11f66e2"]
},
WindowSize->{707, 637},
WindowMargins->{{158, Automatic}, {Automatic, 48}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 215, 5, 35, "Text",ExpressionUUID->"f0d2586d-6c4e-4cd0-a413-1b75cc0400e3"],
Cell[775, 27, 4472, 85, 410, "Input",ExpressionUUID->"a08eace7-4b4c-4010-80ce-dc08cedf3b9b"],
Cell[5250, 114, 231, 4, 30, "Input",ExpressionUUID->"fdea04a3-0ad2-4fed-8d91-aa92203463cf"],
Cell[5484, 120, 382, 8, 58, "Text",ExpressionUUID->"b985c69a-7cc1-412a-ad87-45e25bf03d6e"],
Cell[5869, 130, 4907, 114, 373, "Input",ExpressionUUID->"6bdb1b11-026c-4458-842d-af9d1395a2cc"],
Cell[CellGroupData[{
Cell[10801, 248, 907, 25, 73, "Input",ExpressionUUID->"773248d0-554a-4c91-8afe-5aacf189b176"],
Cell[11711, 275, 236, 6, 38, "Output",ExpressionUUID->"b9d29b82-a023-4761-a406-5e6f8505a25d"]
}, Open  ]],
Cell[11962, 284, 1745, 36, 335, "Input",ExpressionUUID->"4001617a-80a5-4467-9f82-fcf36ee80f46"],
Cell[CellGroupData[{
Cell[13732, 324, 246, 7, 30, "Input",ExpressionUUID->"9f91316a-9f3b-4189-a477-54f169a47f61"],
Cell[13981, 333, 212, 6, 38, "Output",ExpressionUUID->"7da5627a-a0c5-4adc-a2fa-8ba25d5437a5"]
}, Open  ]],
Cell[14208, 342, 43469, 735, 311, "Input",ExpressionUUID->"1261dd4b-9d9a-4266-91c3-0706b11f66e2"]
}
]
*)

