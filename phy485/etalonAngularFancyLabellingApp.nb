(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    142884,       2658]
NotebookOptionsPosition[    141595,       2628]
NotebookOutlinePosition[    142055,       2646]
CellTagsIndexPosition[    142012,       2643]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "peeters`"}], ";"}], "\n", 
 RowBox[{"peeters`setGitDir", "[", "\"\<../project/figures/phy485-optics\>\"",
   "]"}]}], "Input",
 CellChangeTimes->{{3.7638884965319757`*^9, 
  3.763888496543354*^9}},ExpressionUUID->"0cbb7a05-2d5f-40aa-b805-\
0f1687c427d4"],

Cell[BoxData["\<\"/Users/pjoot/project/figures/phy485-optics\"\>"], "Output",
 CellChangeTimes->{
  3.763888498425912*^9},ExpressionUUID->"2033cdbf-666d-42b1-b7a1-\
3804be4574ea"]
}, Open  ]],

Cell[BoxData[{
 ButtonBox[
  RowBox[{
   RowBox[{
    RowBox[{"http", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
        "questions"}], "/", "13906"}], "/", "given"}], "-", "a", "-", "table",
      "-", "of", "-", "plots", "-", "with", "-", "some", "-", "parameter", 
     "-", "how", "-", "would", "-", "i", "-", "mark", "-", "each", "-", "of", 
     "-", "the", "-", "plots", "-", "w"}]}], "\[IndentingNewLine]"}],
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/questions/13906/given-a-table-\
of-plots-with-some-parameter-how-would-i-mark-each-of-the-plots-w"], None},
  ButtonNote->
   "http://mathematica.stackexchange.com/questions/13906/given-a-table-of-\
plots-with-some-parameter-how-would-i-mark-each-of-the-plots-w"], "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{"NotebookPut", "@", 
    RowBox[{"ImportString", "[", 
     RowBox[{
      RowBox[{"Uncompress", "@", 
       RowBox[{"FromCharacterCode", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"ImageData", "[", 
          RowBox[{
           RowBox[{
           "Import", "@", "\"\<http://i.stack.imgur.com/qwyrM.png\>\""}], 
           ",", "\"\<Byte\>\""}], "]"}]}]}]}], ",", "\"\<NB\>\""}], "]"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.5612016835527987`*^9, 
  3.5612017378979073`*^9}},ExpressionUUID->"fde72bca-5d2b-4894-ad34-\
b96a0ebd324c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "lblPlot", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "lblPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"maxArrowedLbls", "\[Rule]", "5"}], ",", 
     RowBox[{"maxNonArrowedLbls", "\[Rule]", "5"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lblPlot", "[", 
    RowBox[{"s_Graphics", ",", 
     RowBox[{"myStyle_List:", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "16"}], 
       "}"}]}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Thanks", " ", 
      RowBox[{"to", " ", "@", "WReach"}]}], ",", " ", 
     RowBox[{
      RowBox[{"@", "jVincent"}], " ", 
      RowBox[{"and", " ", "@", "chris"}], " ", "for", " ", "their", " ", 
      "useful", " ", "help", " ", "and", " ", "code"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Errors", ",", " ", 
     RowBox[{
     "bugs", " ", "and", " ", "bad", " ", "coding", " ", "due", " ", "to", 
      " ", "belisarius"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "myLabel", ",", "copyToNewNB", ",", "exportLbls", ",", "printLbls", ",",
        "u", ",", "plotRsrv", ",", 
       RowBox[{"safeGuard", "=", 
        RowBox[{"{", "\"\<FeboAsoma\>\"", "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"myLabel", "[", 
        RowBox[{"{", 
         RowBox[{"str_", ",", 
          RowBox[{"{", 
           RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "}"}]}], "}"}], "]"}], ":=",
        "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"Arrow", "@", 
          RowBox[{"BezierCurve", "[", 
           RowBox[{"{", 
            RowBox[{"p3", ",", "p2", ",", "p1"}], "}"}], "]"}]}], ",", 
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"str", ",", "myStyle"}], "]"}], ",", "p3", ",", 
           RowBox[{"Background", "->", "White"}]}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"myLabel", "[", 
        RowBox[{"{", 
         RowBox[{"str_", ",", 
          RowBox[{"p1", ":", 
           RowBox[{"{", 
            RowBox[{"_", ",", "_"}], "}"}]}]}], "}"}], "]"}], ":=", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"str", ",", "myStyle"}], "]"}], ",", "p1", ",", 
           RowBox[{"Background", "->", "White"}]}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"copyToNewNB", "[", 
        RowBox[{"plot_", ",", "list_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "nb", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"nb", "=", 
           RowBox[{"NotebookCreate", "[", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"NotebookWrite", "[", 
           RowBox[{"nb", ",", 
            RowBox[{"Cell", "[", 
             RowBox[{
              RowBox[{"BoxData", "@", 
               RowBox[{"ToBoxes", "@", "plot"}]}], ",", "\"\<Output\>\""}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"printLbls", "[", 
           RowBox[{"nb", ",", "list"}], "]"}], ";"}]}], "\[IndentingNewLine]",
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"exportLbls", "[", "list_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "nb", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"nb", "=", 
           RowBox[{"NotebookCreate", "[", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"printLbls", "[", 
           RowBox[{"nb", ",", "list"}], "]"}], ";"}]}], "\[IndentingNewLine]",
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"printLbls", "[", 
        RowBox[{"nb_", ",", "list_"}], "]"}], ":=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"NotebookWrite", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"Cell", "[", 
            RowBox[{
            "\"\<Reserve the following expression in your Notebook to restore \
your Labels and Arrows the next time you need to include them in the \
Plot\>\"", ",", "\"\<Subsection\>\"", ",", 
             RowBox[{"CellMargins", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"50", ",", "50"}], "}"}], ",", "Inherited"}], 
               "}"}]}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"NotebookWrite", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"Cell", "[", 
            RowBox[{
             RowBox[{"BoxData", "@", 
              RowBox[{"ToBoxes", "@", 
               RowBox[{"Join", "[", 
                RowBox[{"safeGuard", ",", "list", ",", "safeGuard"}], 
                "]"}]}]}], ",", "\"\<Output\>\""}], "]"}]}], "]"}], ";"}], 
        ")"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"u", "=", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"PlotRange", "/.", " ", 
              RowBox[{"Options", "[", 
               RowBox[{"s", ",", "PlotRange"}], "]"}]}], ")"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "+", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Differences", "/@", 
               RowBox[{"(", 
                RowBox[{"PlotRange", "/.", " ", 
                 RowBox[{"Options", "[", 
                  RowBox[{"s", ",", "PlotRange"}], "]"}]}], ")"}]}], "/", 
              "4"}], "]"}], " ", "#"}]}], "&"}], ",", "3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Panel", "@", 
       RowBox[{"DynamicModule", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"pts1", "=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"pts2", "=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"lbl1", "=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"lbl2", "=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"varRsrv", "=", "\"\<Label Import Area\>\""}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Column", "[", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Dynamic", "@", "\[IndentingNewLine]", 
             RowBox[{"Show", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"plotRsrv", "=", 
                RowBox[{"Show", "[", 
                 RowBox[{"s", ",", 
                  RowBox[{"Epilog", "\[Rule]", 
                   RowBox[{"myLabel", "/@", 
                    RowBox[{"Join", "@@", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lbl1", "[", 
                    RowBox[{"[", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", "#1"}],
                     "}"}], "&"}], ",", 
                    RowBox[{"Partition", "[", 
                    RowBox[{"pts1", ",", "3"}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lbl2", "[", 
                    RowBox[{"[", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", "#1"}],
                     "}"}], "&"}], ",", "pts2"}], "]"}]}], "}"}]}]}]}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", "=", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Locator", "[", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"pts1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}], 
                    "&"}], ",", "pts1"}], "]"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", "=", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Locator", "[", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"pts2", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}], 
                    "&"}], ",", "pts2"}], "]"}]}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], 
              "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"InputField", "[", 
             RowBox[{
              RowBox[{"Dynamic", "@", "varRsrv"}], ",", 
              RowBox[{"FieldSize", "\[Rule]", "55"}], ",", 
              RowBox[{"FieldHint", "\[Rule]", "\"\<Label Import Area\>\""}]}],
              "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Row", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Button", "[", 
                RowBox[{"\"\<Add Labeled Arrow\>\"", ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "@", "pts1"}], "<", 
                    RowBox[{"3", " ", 
                    RowBox[{"OptionValue", "[", "maxArrowedLbls", "]"}]}]}], 
                   ",", 
                   RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"lbl1", ",", "\"\<Arrow\>\""}], "]"}], ";", 
                    RowBox[{"pts1", "=", 
                    RowBox[{"pts1", "~", "Join", "~", 
                    RowBox[{"(", "u", ")"}]}]}]}]}], "]"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<Add Label\>\"", ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "@", "pts2"}], "<", " ", 
                    RowBox[{"OptionValue", "[", "maxNonArrowedLbls", "]"}]}], 
                   ",", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"lbl2", ",", "\"\<Label\>\""}], "]"}], ";", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"pts2", ",", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ")"}]}], 
                  "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<Copy to new .nb\>\"", ",", 
                 RowBox[{"copyToNewNB", "[", 
                  RowBox[{"plotRsrv", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "pts1", ",", "pts2", ",", " ", "lbl1", ",", "lbl2"}], 
                    "}"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<Export Labels\>\"", ",", 
                 RowBox[{"exportLbls", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "pts1", ",", "pts2", ",", " ", "lbl1", ",", "lbl2"}], 
                   "}"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<Import Labels\>\"", ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{
                   "validate", " ", "the", " ", "labels", " ", "set"}], ",", 
                   " ", 
                   RowBox[{"then", " ", "import"}]}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "varRsrv", "]"}], "\[Equal]", 
                    "List"}], "&&", 
                    RowBox[{
                    RowBox[{"Length", "@", "varRsrv"}], "\[Equal]", "6"}], "&&", 
                    RowBox[{
                    RowBox[{"varRsrv", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"varRsrv", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"safeGuard", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pts1", "=", 
                    RowBox[{"varRsrv", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"pts2", "=", 
                    RowBox[{"varRsrv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", 
                    RowBox[{"lbl1", "=", 
                    RowBox[{"varRsrv", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], ",", 
                    RowBox[{"lbl2", "=", 
                    RowBox[{"varRsrv", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{
                    "MessageDialog", "[", 
                    "\"\<You're trying to Import a label set not created by \
\\\"Export Labels\\\"\>\"", "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"MessageDialog", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Head", "[", "varRsrv", "]"}], ",", 
                    RowBox[{
                    RowBox[{"varRsrv", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"varRsrv", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", 
                    "safeGuard"}]}], "}"}], "]"}]}], "]"}], 
                  "\[IndentingNewLine]", ";"}]}], "]"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Dynamic", "@", 
             RowBox[{"Grid", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{"(*", "arrows", "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", "\"\<\>\"", "}"}], "~", "Join", "~", 
                   RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"#", ",", "\[IndentingNewLine]", 
                    RowBox[{"InputField", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"lbl1", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", "String"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"\"\<Delete\>\"", "<>", 
                    RowBox[{"ToString", "@", "#"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"lbl1", "=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"lbl1", ",", 
                    RowBox[{"{", 
                    RowBox[{"#", ",", "#"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"pts1", "=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"pts1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"3", "#"}], "-", "2"}], ",", 
                    RowBox[{"3", "#"}]}], "}"}]}], "]"}]}]}], ")"}]}], 
                    "]"}]}], "}"}], "]"}], "&"}], "/@", 
                    RowBox[{"Range", "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "@", "pts1"}], "/", "3"}], ")"}]}]}], 
                    ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Length", "@", "lbl1"}], ",", 
                    RowBox[{"Length", "@", "lbl2"}]}], "]"}], ",", 
                    "\"\<\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{"non", "-", " ", "arrows"}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", "\"\<\>\"", "}"}], "~", "Join", "~", 
                   RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"#", ",", "\[IndentingNewLine]", 
                    RowBox[{"InputField", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"lbl2", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", "String"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"\"\<Delete\>\"", "<>", 
                    RowBox[{"ToString", "@", "#"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"lbl2", "=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"lbl2", ",", 
                    RowBox[{"{", 
                    RowBox[{"#", ",", "#"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"pts2", "=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"pts2", ",", 
                    RowBox[{"{", "#", "}"}]}], "]"}]}]}], ")"}]}], "]"}]}], 
                    "}"}], "]"}], "&"}], "/@", 
                    RowBox[{"Range", "@", 
                    RowBox[{"(", 
                    RowBox[{"Length", "@", "pts2"}], ")"}]}]}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Length", "@", "lbl1"}], ",", 
                    RowBox[{"Length", "@", "lbl2"}]}], "]"}], ",", 
                    "\"\<\>\""}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
                "]"}], ",", 
               RowBox[{"ItemSize", "\[Rule]", "30"}]}], "]"}]}]}], "}"}], 
          "]"}]}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "f", ",", " ", "r", ",", " ", "i", ",", " ", "delta", ",", " ", "lambda1", 
   ",", " ", "lambda2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "r_", "]"}], " ", ":=", " ", 
  RowBox[{"4", " ", 
   RowBox[{"r", " ", "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "r"}], ")"}], "^", "2"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "[", 
   RowBox[{"r_", ",", " ", "delta_"}], "]"}], " ", ":=", " ", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"1", " ", "+", " ", 
     RowBox[{
      RowBox[{"f", "[", "r", "]"}], " ", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"delta", "/", "2"}], "]"}], "^", "2"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"delta", "[", 
   RowBox[{"theta_", ",", " ", "deltaR_", ",", " ", "lambdaOverL_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{
   RowBox[{"2", " ", "deltaR"}], " ", "+", " ", 
   RowBox[{"4", " ", "Pi", " ", 
    RowBox[{
     RowBox[{"Cos", "[", "theta", "]"}], "/", 
     "lambdaOverL"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"lambda1", " ", ":=", " ", 
  RowBox[{"500", " ", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "9"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda2", " ", ":=", " ", 
   RowBox[{"650", " ", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "9"}], ")"}]}]}]}], " ", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"0.97", ",", " ", 
          RowBox[{"delta", "[", 
           RowBox[{"theta", ",", " ", "0", ",", " ", "lambdaOverL"}], "]"}]}],
          "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"lambdaOverL", ",", " ", 
          RowBox[{"{", 
           RowBox[{"lambda1", ",", " ", "lambda2"}], "}"}]}], "}"}]}], 
       "]"}]}], "\[IndentingNewLine]", ",", " ", 
     RowBox[{"{", 
      RowBox[{"theta", ",", " ", "0.0005", ",", " ", "0.0012"}], "}"}], 
     "\[IndentingNewLine]", ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "Full"}], 
     "\[IndentingNewLine]", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Thick"}], "\[IndentingNewLine]", 
     ",", " ", 
     RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", " ", "\"\<I/I_max\>\""}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], " ", "\[IndentingNewLine]"}], "\n", 
 RowBox[{"lblPlot", "[", 
  RowBox[{"s", ",", 
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", "\"\<xkcd\>\""}], ","}], "*)"}], "16", 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.56105320096875*^9, 3.561053228875*^9}, {
   3.56105365390625*^9, 3.56105367109375*^9}, {3.56105383253125*^9, 
   3.5610538535625*^9}, {3.56105389228125*^9, 3.561053898390625*^9}, {
   3.56105410190625*^9, 3.56105410209375*^9}, {3.561054318375*^9, 
   3.561054347890625*^9}, {3.561054387125*^9, 3.56105443046875*^9}, {
   3.561054835140625*^9, 3.561054891234375*^9}, {3.5610549894375*^9, 
   3.56105503221875*^9}, {3.561055084671875*^9, 3.561055091546875*^9}, 
   3.561057106953125*^9, 3.5610605804375*^9, {3.561060666546875*^9, 
   3.5610608273125*^9}, {3.5610610090625*^9, 3.561061015046875*^9}, {
   3.561061062265625*^9, 3.56106110065625*^9}, {3.561061134453125*^9, 
   3.561061134828125*^9}, {3.56106116690625*^9, 3.5610611885*^9}, {
   3.561061464578125*^9, 3.561061483984375*^9}, {3.561061632390625*^9, 
   3.561061644828125*^9}, {3.561061678546875*^9, 3.561061678984375*^9}, {
   3.5610617261875*^9, 3.561061734171875*^9}, {3.561067125578125*^9, 
   3.5610671574375*^9}, {3.5610672411875*^9, 3.56106726940625*^9}, {
   3.561067315546875*^9, 3.561067327546875*^9}, {3.561072008921875*^9, 
   3.561072015625*^9}, {3.56107207534375*^9, 3.56107207546875*^9}, {
   3.561072204359375*^9, 3.561072241171875*^9}, {3.56107267365625*^9, 
   3.561072676203125*^9}, {3.561104201796875*^9, 3.561104250953125*^9}, {
   3.56110439384375*^9, 3.56110440459375*^9}, {3.5611044423125*^9, 
   3.5611044474375*^9}, {3.561104484921875*^9, 3.561104511359375*^9}, {
   3.5611046686875*^9, 3.561104790046875*^9}, {3.56110482678125*^9, 
   3.56110493390625*^9}, 3.561104987421875*^9, {3.561105028046875*^9, 
   3.561105089078125*^9}, {3.561105209734375*^9, 3.56110521534375*^9}, {
   3.5611052468125*^9, 3.561105246984375*^9}, {3.561105281171875*^9, 
   3.561105428375*^9}, {3.5611055181875*^9, 3.561105521078125*^9}, {
   3.561105591671875*^9, 3.561105677109375*^9}, {3.561105720328125*^9, 
   3.56110572140625*^9}, {3.561105763625*^9, 3.5611058504375*^9}, {
   3.56110786559375*^9, 3.561107944875*^9}, {3.561107981984375*^9, 
   3.561107983109375*^9}, {3.561108021765625*^9, 3.56110803353125*^9}, {
   3.561108063984375*^9, 3.561108067375*^9}, {3.561108547765625*^9, 
   3.5611085614375*^9}, {3.5611086025625*^9, 3.56110865909375*^9}, {
   3.56111111971875*^9, 3.561111122671875*^9}, {3.5611113255625*^9, 
   3.561111391359375*^9}, 3.561112305109375*^9, {3.56111309196875*^9, 
   3.56111310184375*^9}, {3.561113398765625*^9, 3.561113406578125*^9}, {
   3.561113665546875*^9, 3.5611137835625*^9}, {3.561114068*^9, 
   3.561114165703125*^9}, 3.56111421334375*^9, {3.561114298265625*^9, 
   3.561114316859375*^9}, {3.56111436575*^9, 3.56111436634375*^9}, {
   3.5611145041875*^9, 3.561114507234375*^9}, {3.5611145633125*^9, 
   3.56111469753125*^9}, {3.561115582265625*^9, 3.561115608859375*^9}, {
   3.56111584565625*^9, 3.561115854515625*^9}, {3.561116376828125*^9, 
   3.56111640540625*^9}, {3.56111704715625*^9, 3.561117048875*^9}, {
   3.56111714596875*^9, 3.56111714734375*^9}, {3.56111722453125*^9, 
   3.5611172616875*^9}, {3.561117310609375*^9, 3.5611173459375*^9}, {
   3.56111743609375*^9, 3.56111748865625*^9}, {3.561118253484375*^9, 
   3.56111826684375*^9}, {3.561201389575984*^9, 3.5612013896519885`*^9}, {
   3.5612040216875324`*^9, 3.561204131289801*^9}, {3.5612041691089644`*^9, 
   3.561204219408841*^9}, {3.561206380818467*^9, 3.5612064068719573`*^9}, {
   3.763888440151203*^9, 
   3.7638884597915916`*^9}},ExpressionUUID->"82449784-71ee-4da1-b8be-\
d32384065399"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJwUWnk41N8brRTybUMioSgSGfu+nLHMgmFmkJAlimzZs5Y1QrZslZRkTZKk
SGWLFqSISKWNQtlCCy2/z+8vz3nuzL3ve97znvveZ4i7+Fq4rli2bNnCymXL
/v93k3LXkJkLGZxKyif8XEnYEzMxInyQjKnjrjuDCJz9lHv6sysZvtt9VkcR
uFd056/aQ2SMtt6TP0VgXm8KR6wHGQu1j/MrCMxqOLCW6UVG7tR/lp0ETuOO
FRQ5TEbzDM+eOQI/sb4oPu5Dhobi3hIJNxLWlDTK3vIjQ9wxgmpLYJO516px
AWQIrtykfZrASfpLYAWR0XbvafxrAj9K32wiGkzGviTKrl2HSOAcVreaCCG+
b0ySPkZgym5rx7owMp580YwfJPDx8CD34xFkmO0wMNR2J2G54PWjYlFkmHPI
TG7yIIHs+jThSzQZG23rh9MJHHljMqM+lox1hQE6GzxJ+M2UKbFIIOP6dkv6
Ti8StC7Qr21NJGPlwK7f9wgc9tXt9tckMtSEdknbe5PwPbHoSUIqGSG8m+er
DpOgOtAyYJlORrCgZt4BHxKCJN+933aKjCKjqratviTMtoh8b8gmo2p61Y0q
PxK+LuaITZ8jY0JMmrkziAQZ41rpu+fJqAwz8hc6QoLH6V6lpAIyCl7VKPIG
k/BJeT1texEZjxbJ5zaHkvDeO9F3bwUZFnwj/glHSdh2pzRsRyUZxduSP9ce
I8FxdXvc7FUytgg2CX6JJOF1yfIzJ6+TIXBE5JZPDAkvhsObm+rJcLs8Yvk8
gQQBubMdKQ1kbDv5ehU5kQSriLo+27tkOIdlZ9QmkdAjOD8210TGr6YZ3Ewh
oYt1mFf6IRl8tRohAlkktLQ6uWT0k6H6zeOrVSEJPv+pqRwfIPLftu21ZxEJ
wlZrOENfknHTJc4quYTgZ7T+stMbMrhDHi+MXiZBiptvljRKhuEer8INN0hI
NmuLejJPxoUguTmNhySo5eaxW76TsYv2DROPSfg47Lf95k8yVo/7hpZ0kaDj
J/ow/zcZEfxlDzR7SZjKDF7nvVIfd9//Oz30hgSLQenzPBv14fmqS4njBwl/
t/3z+SugD4uAFRHWiyRc8egnfxPUx62/F7bV/iFh5VLMyMst+qiT+3UpbaU8
bom+kr28XR90A7ZTC588hA+kNtCU9bHcJKRxh6I8Pk7ODhy30IfR7/z1W4Pl
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
qHsrHUsXTr/i6fXCaPCvez+k6JgtS+h8YOSJZmEdkVZpOuxO17nc/OSB/MbI
8BQZOn6Nv/IvSPaAFedKdXESHUYWOYKkQXe05ayrNlElzgt7fvxR4iFc1GSv
E1CnI1oqQ1NC8xCOvsnyfqtBR34ztxL/FzcoS27eFaRDh+R96okMSzdcqt1+
6bwhHUNHbo29V3VFzHON7Bk2He+Ewldt1ziADn/lhveWdCgtbY6//tMFGzeQ
3vXuoSOozsU6ssEF5Yztu2/a0uH3x8WuRt8F3e1r28Kc6Xg0vW76qoMzhA5y
T3geoKNhcUJg705nuKzg2GDvSkdyQ1Ulx7f9WND7uU/Pg44Bs28jZsn7IVL/
YW6FPx1/3DsElqU4wc36zeb5ADpcg3enaZKcUD0/gNEgOjbbntgi1usIQ8Un
Jx+G0nHwlG1ns5gjPCvqtqdE08E8PUh267BHfX6KpUAGHWpdCR97D9hhhfaJ
MM5MOp40l40XiNiB8TKm4EcWHY73FadzXtjirUDIl5en6ej+yF340cwWnOnO
cRcK6NDP+cThaGwDlpz95fRCOsrrYice89jgbKf10+giOjiGA2wVnuzFbm7G
lgNldMyNKjkMWu2FZYzajZ3X6FjvuPBxja818rcqvhS6TsdaVzOONnVrfLon
+2/1DTpSjN1nmcutEb64zfTrLTpUO83S+nP34GLgfx+rG4n4j0/YSXdaYcr1
HZ9WNx3e7asdGvdY4qNZ5maeZ3R8j/XaPrLbEoOqRtuGeuioHUt0zFxpidZV
5XLh/XQ81gp9E3nTArklvvSG13Ss6NHqtBW1gN7o32NaX+jomWh3NeFgQ/lJ
9XGeSTr818iP/HzPgvRNl5NDU3SMSlc+Wt/CAl/8gzPh3+jgEuzc5RfNwqcd
aTcaftGhGS0e283BQvpB0XEtbmNYCn0M8lA3x3HG02keHmPENc18O7jMHOEq
Md+H/jOGrnfu/IoOMxxcOcoRsd4YaZlv60WczKBRXCl2Z5MxqPkDFfEZDLz7
qG2lLWmMrQtjgobrTNHfOWn3305jmBXeX2X7zgQdNwqcX0kbY53dDtZ0jQlq
4zh8I3YbY99S94UcWxMkbu9MuqNsjAGHVZZnKo2hcMCuSdvAGEf6JK9xutOR
RWlLVTIyhsnErWBxPYLHnST7XVRj3Cfr3ardSMfdr8t/bTIxxvtdP87p3qeB
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
8pVBqmdIqCichdumcqVaViWQmhSXOU/MVfJxD2Z8HxRBarWH9umjhF9trXzL
73IJUpLVjFPHCBzZQykXL8RO/R8OJyNZ2FGWP5S67CKkHfR846NYmNo9FVq3
cB7SYfHRUdFEfAcV7h0Tzod0TtepsBhCT6YH6c0eeZC+zl8UGEvooaeiumD4
DKSf2NUejiP6KTgneCzoNKTHC9sPHSfWU9cG/JTOhbS4wti+BML/FmjHVYaz
IK0b8mvPCRa+rL98U30oE9K2jTysRBYUzcOas8ZPQfrIKhGTJMLfe19t9+Yh
8CmGnFEy4Ue+L3hFtDMgfTVLT+8kC5taI9Ic5gk/fTzE1EhhwUjVaWtNSiqk
l3sE7E5jwcfvdvPMipOQFq2Ok0pngVcn9eb86yRIa/7I3pbBwp6RoWnG40RI
79ErFT7FglkNr8KxBycg7R9ftzGThV8/x9tIzxMgndr1aF0W4Z8xCjq7p+Ih
fZl/iDubhclFkSKHTQR+X/j7dw7hv1w2skeT4yD9Z2ztj1wWxGLG+a73xUJ6
s8LW2dPE/WX+9U6xNIHZjfqjZ1n4cPGKmuiXaEgfXmX5No+FhboyPz8bAicx
Dr48x0L51EikRl4UpFuGEp6cZ0FujJmglnOMiOMYd90FFrpOzOXW1h5Fn8G2
5IsFLFB9plX4hyMQ1eaaGlhI9O9T2mo1Rjis4rnXO1wi5p9a48/z6WGQoV7J
oBYR/ZSgQ0p8FYoXD2eyNpewiHf1X8fIxBBUJmYJcJQSepU3ERMZD0aMsdrp
rwR+NiX4eQUrGLs7I/Kaylnw2JHKf1D+COK6OQtdK1lY/tk8M3N3IGzSL0sw
rxL1f/Ljj3ddAEgsRrFGFQu1czu+B1MDMNRzquy/ahZ0lxvIWPr5ozpTZdcC
gUO17R0e8/gj3nKgYvg6CyKbrS7dKveDQr9I1fUbRH1mDj2vee0Lztwm+XO1
LKiQk8+flPXFa2uX68dvEv2xeipHLtoHJwbLavfWsfDxj/50j+ZhDL9SuvOn
gehnkYI8vzFP1Ob363y+Q+iphK+a4eSJZIfQxmd3WeDap1VNH/KA6tt7LUWN
LAT8ztm39ModKR/oj4xbWSBvNmxT5jkEl6Ivxsr3WfjNbnv5+bwbNA6mdYq0
EfcNO7HyooobPo4+755uZ4GvvSK22tMVWuOO/TmPiXeQgIja0e8HsKFi+d6o
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
d+S3M/4Ht9kZYw==
       "]]},
     Annotation[#, "Charting`Private`Tag$6003#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJwUmnc4lW8YxysjhEQDSSEkOo69fY1jnWOcc0j2FlGSVUgohOyRkgpRooFk
RhItMhKKJGSlUmlJ4/f+/jrX53rf93nu8b3v+3mu64h5HGR6r1qxYkUU64oV
//9uVOoatvDQQ7ng946ug6rYHfvurbCXHsLvFeec9lFFTg/Hwoy3HkrrCqV8
XFWxbr8Ry/F9eoj12XRMxEoV3KUtsrWBeuBNS/cdIqli5aaqo6LRerDIZklP
WlDB+1+5ogvn9CD/a6miKVQF99pcPTIG9HDS+PxFixxlBKxRVY4b0kNk2P61
/KnKELbhZj/yUg8jbD/XjsYrI2Sq/qrrqB7WTrZVJRxWhhQH/2fSlB7qxiam
pB2VkWzRHv30qx5e7Gm6fl5CGcwXO85zrdfHg9AJPpUGJUx++DwUx9RH6qqF
WMHvitCMiU7eY6OPQ7ura5s/KSKLn0dnp60+eHlP3/SZV4SB2o7iHnt9OKqW
vH78RhHFMS77hd31sX5tzviDTkW4CXSuqDyoj1/7SiYLixXxWr1EZiRFHx06
oy9brRWh2qnw6nqaPlq77r/6aamINOe7aTEZ+hjvqjJToSpC9/jwomQOsb9t
FrNJTxHnO/laAs/p4/f+udfLuxTh5BLFZC/XR35tfqk5pyKGT9hGKjzUB/fk
0YnN9xUQYmTMvvxIH0Pj9rGfWxTAs1o1s/2JPnbY7BXobFSAXvKGK3u69aH4
qWd1crUCSjOeP4sa0EdJ2/ol1WIFBJ5n7nwyqY+WDH9V2nEFsNdZvvRYYYB8
tyPxVkYKKDyi6yW3ygD8N2WuXdRXgIYmaeEbiwHkqiISF3UUsL+Zhy1ptQFq
MrztL6sqoO9+F/kmrwF82FXI6jsUUNBLTVwWMQBDbpvSGm4FKLwzVsvRMEDy
SVN5z0Ey1C9/TIrTMsBC4ou7b56Roedx+lWIjgGO37kd6NFDhuXwVOxufQPM
HrkiF/SIDL8ncV0bzQwQmB8y0tZIRkl5m/tZOwMccT8RL11IhqC/bsqFwwY4
KbTF7MsBMrZKT79OCzdAydc1uZ/8yJCaTFWIjjRA/YJt1xcfMlQcRwddow3Q
6u/4c5UHGUzaUTGxkwZ4dHRgM9OWjBTZxtpLpw0QRwtyKgcZK96rjJfdNsCx
6h+3NDaQUf05Z/2ROgN8zkybHeUnw/vHoolJgwGuWix5xvOR8WRV9Y2pOwYQ
mkqSfb2GjBwh0lHxdgP0m/FM1a4iQ8ZEalPBMwPYb1TO4piQB7N4o0X6ggHU
/77/y18oD9ay0BiXzwbw9r3CurNAHnXXn9/atWiAy9REH5Mz8hBpyBLu+m6A
bX0WBrkZ8pju4Z3l+GuAHrkLMlGx8oj8w37iOLchfCWyOo56yaPE7kd9qIwh
RK8UeCrLy6PdjrfGX9YQpZS8Y89k5TFlJ3nTfZchDt7d+unwDnlI2VuXWigY
Qtt/5/MXYvIos7+ZKalhCPUw36Qv6+VR4eDjN2BqiPCFK7zxv0nocjjm3Uk1
xHHrzbpnlkh475Drds/cECIq+xqqv5Mg53jf9jrdEL8CyrP/fCLhhuNWw3g7
QzhuaH/0boqEaqehzSq+hjA5FfFZvI+EZ04fN8r6Ed8n0e+Ud5Ow6MTGL7bf
EEf9VvVodJGg7KzEwRNoiGZVla4DD0m47Zz+9e1hQ7SN8UruaiGh3sXkac5J
Q9Sp1nlxXifhhYvLo+QkQ9i6Zt5mqyBhySX0fswpQ/isl6RzXiVB0/VSw/50
Qzz8aeYtVUrCHdd/RGgMwX7+0Kb68yTcdas79vWyIU4YreLWzCBhWwaZOV5G
7KfDvq86jYTjd69KdpcbQqmr/LlCKgnGogVdV24Y4tLu4WGjZBK6R2KEHWsN
4TLC09AWRwJ5za8PJvWG4JJaKAw+QUKWZvA95UZifXG+C7LHSbA96+3L22KI
R5u2jVRGk/Dallp7r4PYL607ki+SBL2E+0k3HhoiZoWZ9K9wEopvazufe2wI
eZ+hhXdHSNi7Xp419KkhPFlOvRoPI+GRYdmQew8Rf/e3q2ZDSdgZLFZh2WeI
zrLf1G8hJHzsE2DuGDDED4NBimQwCfSVqZIbhgwxf1V2ySSIyA+ZfWnlS0NU
BPI/P3SIhLD0nxdHXhHxrWJhGTlIwh/z0Q9pbw0xsfeHP8sBElyO2t6LnDZE
V0JgpOt+ElorenJ8Zwl71BvvtPmTEMfVpmXw3hBsG8RGLviRMK2htVb+oyEa
T6g2bSLYdF/NxOZPhlCNDO3P20cC96PLSd8WCRa7W33dl4SAH1udJ74ZYpJV
PMqQ4F6ps+SeH4Ywq7NKeONDgqItP+udJUNwu7L2xhGcE39qqGyZyP9WFicy
wd9rWCty/xjCL3Kt3OReEuzeRh07/s8Qm3JXGZwnuFHgB+PgSgpcrtZcdCFY
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
7k1W3GjaYg7hTtv6SP5ofAntsDwnZg7BqJ4Mt4dR4MIz0VMS5tg8fXs6XiYK
4hxjHyMkzdFDi2+PzzgK6/yfaQ4yhL0yeQuW+yNR0yLbI6RgTvTN8jFR23B0
nVS/yKlkDqNvwvu3DB/BW7rRwSVlc3zNKQq+5H4EGyZd1r5UN8euj9WbWyMO
I2x1ltUZPcK/gUKJmb5QpPVe2JpoYI4nJ3p8WgNCcflsxcJhijn6z3a91+AN
xZBsR/oeU3PIDHyWqLIJgTr9Z89Gujm0g8a+OP0JAl2IrZCdaY6+yJ0po9eC
4DuxLvC7tTkuupSecnIJwtkQWb7BPebYrbrvj8DDQ/h1xoWe62qOqfq1z1uu
B4Lfw39bvLs5lCsiteL8AyEre+RTiCcRj0P2PM93BsKpOTPDxodY/+LSXIfj
QTSPt/cKHDTHjYXNL3iTDmCwvK+Q5ZA5rEISn3cKH8DH4NeBi0HmiFDtebR4
Yz9E2X/y9YcR+X/7pVLntT9idsoyso4R8SkTT5q39YNBcGYfX5o5/Mr1q1lK
fMCesPv4WLo5OhsNLY45+ODxGSGlG5nm+HHjxjCT3wf0lqIcWq45WP4tBM3G
74UrZ/WehAJz7Eif8HoX6Q1xkTCO3RfMkbtmQHOPtjemSZoNEoXmeK554NT4
Hy8E2LQJ37tkDrd2XiPlOC8cvfhsdLncHNvaangkz3tCr/p02pNr5jjoNT/c
7e0Jlg4HnL1hDoHXRgZ75T2J8/xEoWq1ObIm16406/DAWZVFz0MNhP56GX+s
l91R2ynwbvqhOao46yPyUtwQ8Xoo//ZjQk+1Tp4f3N2g8/kcLa7THOf84rrn
1dzQvnH7dbEec/gUbF99tdMV/e7KgU6D5rhrQa78lumCTz9svve9JfZP3TrG
beOEGi6hK4XT5ui2yrn2js8Jh7eM7jk4a46a/Ka/zd2O+Gvg3cD93hxDXu+e
KVo4gjst9KjJItGJTLYmDts4QGb76VXNKy3gPDnuff6UHRwU+COrWSxwf8/N
9z4MO6Topi1eYbPA001BMpyCdvhol/A2i9MCkvJiSXev7EFNatgD33UWsG50
e5feawu9H7bJ68UsYBS66dhlym4Esfav4pKwgL/RbR7JjbtxaZ1V5L/tFpAe
M3YynLUBu5zJ/nc7LBDPmPtlnWaDLjc1y1ayBTw3PFaLGLeG3ZNN/Pv1LPCj
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
       "]]},
     Annotation[#, "Charting`Private`Tag$6003#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\[Theta]", TraditionalForm], 
    FormBox["\"I/I_max\"", TraditionalForm]},
  AxesOrigin->{0.0005, 0.00023190497049653552`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.0005, 0.0012}, {0.00023190497049653552`, 0.9999307239643146}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5612012863900824`*^9, 3.5612013909650636`*^9, {3.561204123840375*^9, 
   3.561204135137021*^9}, {3.5612041896251383`*^9, 3.56120422008488*^9}, 
   3.561206743365204*^9, 3.759322072759555*^9, {3.763888442553481*^9, 
   3.763888461133151*^9}},ExpressionUUID->"d345c755-730c-4040-a425-\
034a4c757ccf"],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{$CellContext`pts1$$ = {}, $CellContext`pts2$$ = {}, \
$CellContext`lbl1$$ = {}, $CellContext`lbl2$$ = {}, $CellContext`varRsrv$$ = 
   "Label Import Area"}, 
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[
         Show[$CellContext`plotRsrv$6034 = Show[
            Graphics[{{{{}, {}, 
                Annotation[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   Thickness[Large]], 
                  Line[CompressedData["
1:eJwUWnk41N8brRTybUMioSgSGfu+nLHMgmFmkJAlimzZs5Y1QrZslZRkTZKk
SGWLFqSISKWNQtlCCy2/z+8vz3nuzL3ve97znvveZ4i7+Fq4rli2bNnCymXL
/v93k3LXkJkLGZxKyif8XEnYEzMxInyQjKnjrjuDCJz9lHv6sysZvtt9VkcR
uFd056/aQ2SMtt6TP0VgXm8KR6wHGQu1j/MrCMxqOLCW6UVG7tR/lp0ETuOO
FRQ5TEbzDM+eOQI/sb4oPu5Dhobi3hIJNxLWlDTK3vIjQ9wxgmpLYJO516px
AWQIrtykfZrASfpLYAWR0XbvafxrAj9K32wiGkzGviTKrl2HSOAcVreaCCG+
b0ySPkZgym5rx7owMp580YwfJPDx8CD34xFkmO0wMNR2J2G54PWjYlFkmHPI
TG7yIIHs+jThSzQZG23rh9MJHHljMqM+lox1hQE6GzxJ+M2UKbFIIOP6dkv6
Ti8StC7Qr21NJGPlwK7f9wgc9tXt9tckMtSEdknbe5PwPbHoSUIqGSG8m+er
DpOgOtAyYJlORrCgZt4BHxKCJN+933aKjCKjqratviTMtoh8b8gmo2p61Y0q
PxK+LuaITZ8jY0JMmrkziAQZ41rpu+fJqAwz8hc6QoLH6V6lpAIyCl7VKPIG
k/BJeT1texEZjxbJ5zaHkvDeO9F3bwUZFnwj/glHSdh2pzRsRyUZxduSP9ce
I8FxdXvc7FUytgg2CX6JJOF1yfIzJ6+TIXBE5JZPDAkvhsObm+rJcLs8Yvk8
gQQBubMdKQ1kbDv5ehU5kQSriLo+27tkOIdlZ9QmkdAjOD8210TGr6YZ3Ewh
oYt1mFf6IRl8tRohAlkktLQ6uWT0k6H6zeOrVSEJPv+pqRwfIPLftu21ZxEJ
wlZrOENfknHTJc4quYTgZ7T+stMbMrhDHi+MXiZBiptvljRKhuEer8INN0hI
NmuLejJPxoUguTmNhySo5eaxW76TsYv2DROPSfg47Lf95k8yVo/7hpZ0kaDj
J/ow/zcZEfxlDzR7SZjKDF7nvVIfd9//Oz30hgSLQenzPBv14fmqS4njBwl/
t/3z+SugD4uAFRHWiyRc8egnfxPUx62/F7bV/iFh5VLMyMst+qiT+3UpbaU8
bom+kr28XR90A7ZTC588hA+kNtCU9bHcJKRxh6I8Pk7ODhy30IfR7/z1W4Pl
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
qHsrHUsXTr/i6fXCaPCvez+k6JgtS+h8YOSJZmEdkVZpOuxO17nc/OSB/MbI
8BQZOn6Nv/IvSPaAFedKdXESHUYWOYKkQXe05ayrNlElzgt7fvxR4iFc1GSv
E1CnI1oqQ1NC8xCOvsnyfqtBR34ztxL/FzcoS27eFaRDh+R96okMSzdcqt1+
6bwhHUNHbo29V3VFzHON7Bk2He+Ewldt1ziADn/lhveWdCgtbY6//tMFGzeQ
3vXuoSOozsU6ssEF5Yztu2/a0uH3x8WuRt8F3e1r28Kc6Xg0vW76qoMzhA5y
T3geoKNhcUJg705nuKzg2GDvSkdyQ1Ulx7f9WND7uU/Pg44Bs28jZsn7IVL/
YW6FPx1/3DsElqU4wc36zeb5ADpcg3enaZKcUD0/gNEgOjbbntgi1usIQ8Un
Jx+G0nHwlG1ns5gjPCvqtqdE08E8PUh267BHfX6KpUAGHWpdCR97D9hhhfaJ
MM5MOp40l40XiNiB8TKm4EcWHY73FadzXtjirUDIl5en6ej+yF340cwWnOnO
cRcK6NDP+cThaGwDlpz95fRCOsrrYice89jgbKf10+giOjiGA2wVnuzFbm7G
lgNldMyNKjkMWu2FZYzajZ3X6FjvuPBxja818rcqvhS6TsdaVzOONnVrfLon
+2/1DTpSjN1nmcutEb64zfTrLTpUO83S+nP34GLgfx+rG4n4j0/YSXdaYcr1
HZ9WNx3e7asdGvdY4qNZ5maeZ3R8j/XaPrLbEoOqRtuGeuioHUt0zFxpidZV
5XLh/XQ81gp9E3nTArklvvSG13Ss6NHqtBW1gN7o32NaX+jomWh3NeFgQ/lJ
9XGeSTr818iP/HzPgvRNl5NDU3SMSlc+Wt/CAl/8gzPh3+jgEuzc5RfNwqcd
aTcaftGhGS0e283BQvpB0XEtbmNYCn0M8lA3x3HG02keHmPENc18O7jMHOEq
Md+H/jOGrnfu/IoOMxxcOcoRsd4YaZlv60WczKBRXCl2Z5MxqPkDFfEZDLz7
qG2lLWmMrQtjgobrTNHfOWn3305jmBXeX2X7zgQdNwqcX0kbY53dDtZ0jQlq
4zh8I3YbY99S94UcWxMkbu9MuqNsjAGHVZZnKo2hcMCuSdvAGEf6JK9xutOR
RWlLVTIyhsnErWBxPYLHnST7XVRj3Cfr3ardSMfdr8t/bTIxxvtdP87p3qeB
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
8pVBqmdIqCichdumcqVaViWQmhSXOU/MVfJxD2Z8HxRBarWH9umjhF9trXzL
73IJUpLVjFPHCBzZQykXL8RO/R8OJyNZ2FGWP5S67CKkHfR846NYmNo9FVq3
cB7SYfHRUdFEfAcV7h0Tzod0TtepsBhCT6YH6c0eeZC+zl8UGEvooaeiumD4
DKSf2NUejiP6KTgneCzoNKTHC9sPHSfWU9cG/JTOhbS4wti+BML/FmjHVYaz
IK0b8mvPCRa+rL98U30oE9K2jTysRBYUzcOas8ZPQfrIKhGTJMLfe19t9+Yh
8CmGnFEy4Ue+L3hFtDMgfTVLT+8kC5taI9Ic5gk/fTzE1EhhwUjVaWtNSiqk
l3sE7E5jwcfvdvPMipOQFq2Ok0pngVcn9eb86yRIa/7I3pbBwp6RoWnG40RI
79ErFT7FglkNr8KxBycg7R9ftzGThV8/x9tIzxMgndr1aF0W4Z8xCjq7p+Ih
fZl/iDubhclFkSKHTQR+X/j7dw7hv1w2skeT4yD9Z2ztj1wWxGLG+a73xUJ6
s8LW2dPE/WX+9U6xNIHZjfqjZ1n4cPGKmuiXaEgfXmX5No+FhboyPz8bAicx
Dr48x0L51EikRl4UpFuGEp6cZ0FujJmglnOMiOMYd90FFrpOzOXW1h5Fn8G2
5IsFLFB9plX4hyMQ1eaaGlhI9O9T2mo1Rjis4rnXO1wi5p9a48/z6WGQoV7J
oBYR/ZSgQ0p8FYoXD2eyNpewiHf1X8fIxBBUJmYJcJQSepU3ERMZD0aMsdrp
rwR+NiX4eQUrGLs7I/Kaylnw2JHKf1D+COK6OQtdK1lY/tk8M3N3IGzSL0sw
rxL1f/Ljj3ddAEgsRrFGFQu1czu+B1MDMNRzquy/ahZ0lxvIWPr5ozpTZdcC
gUO17R0e8/gj3nKgYvg6CyKbrS7dKveDQr9I1fUbRH1mDj2vee0Lztwm+XO1
LKiQk8+flPXFa2uX68dvEv2xeipHLtoHJwbLavfWsfDxj/50j+ZhDL9SuvOn
gehnkYI8vzFP1Ob363y+Q+iphK+a4eSJZIfQxmd3WeDap1VNH/KA6tt7LUWN
LAT8ztm39ModKR/oj4xbWSBvNmxT5jkEl6Ivxsr3WfjNbnv5+bwbNA6mdYq0
EfcNO7HyooobPo4+755uZ4GvvSK22tMVWuOO/TmPiXeQgIja0e8HsKFi+d6o
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
d+S3M/4Ht9kZYw==
                   "]]}, "Charting`Private`Tag$6003#1"], 
                Annotation[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   Thickness[Large]], 
                  Line[CompressedData["
1:eJwUmnc4lW8YxysjhEQDSSEkOo69fY1jnWOcc0j2FlGSVUgohOyRkgpRooFk
RhItMhKKJGSlUmlJ4/f+/jrX53rf93nu8b3v+3mu64h5HGR6r1qxYkUU64oV
//9uVOoatvDQQ7ng946ug6rYHfvurbCXHsLvFeec9lFFTg/Hwoy3HkrrCqV8
XFWxbr8Ry/F9eoj12XRMxEoV3KUtsrWBeuBNS/cdIqli5aaqo6LRerDIZklP
WlDB+1+5ogvn9CD/a6miKVQF99pcPTIG9HDS+PxFixxlBKxRVY4b0kNk2P61
/KnKELbhZj/yUg8jbD/XjsYrI2Sq/qrrqB7WTrZVJRxWhhQH/2fSlB7qxiam
pB2VkWzRHv30qx5e7Gm6fl5CGcwXO85zrdfHg9AJPpUGJUx++DwUx9RH6qqF
WMHvitCMiU7eY6OPQ7ura5s/KSKLn0dnp60+eHlP3/SZV4SB2o7iHnt9OKqW
vH78RhHFMS77hd31sX5tzviDTkW4CXSuqDyoj1/7SiYLixXxWr1EZiRFHx06
oy9brRWh2qnw6nqaPlq77r/6aamINOe7aTEZ+hjvqjJToSpC9/jwomQOsb9t
FrNJTxHnO/laAs/p4/f+udfLuxTh5BLFZC/XR35tfqk5pyKGT9hGKjzUB/fk
0YnN9xUQYmTMvvxIH0Pj9rGfWxTAs1o1s/2JPnbY7BXobFSAXvKGK3u69aH4
qWd1crUCSjOeP4sa0EdJ2/ol1WIFBJ5n7nwyqY+WDH9V2nEFsNdZvvRYYYB8
tyPxVkYKKDyi6yW3ygD8N2WuXdRXgIYmaeEbiwHkqiISF3UUsL+Zhy1ptQFq
MrztL6sqoO9+F/kmrwF82FXI6jsUUNBLTVwWMQBDbpvSGm4FKLwzVsvRMEDy
SVN5z0Ey1C9/TIrTMsBC4ou7b56Roedx+lWIjgGO37kd6NFDhuXwVOxufQPM
HrkiF/SIDL8ncV0bzQwQmB8y0tZIRkl5m/tZOwMccT8RL11IhqC/bsqFwwY4
KbTF7MsBMrZKT79OCzdAydc1uZ/8yJCaTFWIjjRA/YJt1xcfMlQcRwddow3Q
6u/4c5UHGUzaUTGxkwZ4dHRgM9OWjBTZxtpLpw0QRwtyKgcZK96rjJfdNsCx
6h+3NDaQUf05Z/2ROgN8zkybHeUnw/vHoolJgwGuWix5xvOR8WRV9Y2pOwYQ
mkqSfb2GjBwh0lHxdgP0m/FM1a4iQ8ZEalPBMwPYb1TO4piQB7N4o0X6ggHU
/77/y18oD9ay0BiXzwbw9r3CurNAHnXXn9/atWiAy9REH5Mz8hBpyBLu+m6A
bX0WBrkZ8pju4Z3l+GuAHrkLMlGx8oj8w37iOLchfCWyOo56yaPE7kd9qIwh
RK8UeCrLy6PdjrfGX9YQpZS8Y89k5TFlJ3nTfZchDt7d+unwDnlI2VuXWigY
Qtt/5/MXYvIos7+ZKalhCPUw36Qv6+VR4eDjN2BqiPCFK7zxv0nocjjm3Uk1
xHHrzbpnlkh475Drds/cECIq+xqqv5Mg53jf9jrdEL8CyrP/fCLhhuNWw3g7
QzhuaH/0boqEaqehzSq+hjA5FfFZvI+EZ04fN8r6Ed8n0e+Ud5Ow6MTGL7bf
EEf9VvVodJGg7KzEwRNoiGZVla4DD0m47Zz+9e1hQ7SN8UruaiGh3sXkac5J
Q9Sp1nlxXifhhYvLo+QkQ9i6Zt5mqyBhySX0fswpQ/isl6RzXiVB0/VSw/50
Qzz8aeYtVUrCHdd/RGgMwX7+0Kb68yTcdas79vWyIU4YreLWzCBhWwaZOV5G
7KfDvq86jYTjd69KdpcbQqmr/LlCKgnGogVdV24Y4tLu4WGjZBK6R2KEHWsN
4TLC09AWRwJ5za8PJvWG4JJaKAw+QUKWZvA95UZifXG+C7LHSbA96+3L22KI
R5u2jVRGk/Dallp7r4PYL607ki+SBL2E+0k3HhoiZoWZ9K9wEopvazufe2wI
eZ+hhXdHSNi7Xp419KkhPFlOvRoPI+GRYdmQew8Rf/e3q2ZDSdgZLFZh2WeI
zrLf1G8hJHzsE2DuGDDED4NBimQwCfSVqZIbhgwxf1V2ySSIyA+ZfWnlS0NU
BPI/P3SIhLD0nxdHXhHxrWJhGTlIwh/z0Q9pbw0xsfeHP8sBElyO2t6LnDZE
V0JgpOt+ElorenJ8Zwl71BvvtPmTEMfVpmXw3hBsG8RGLviRMK2htVb+oyEa
T6g2bSLYdF/NxOZPhlCNDO3P20cC96PLSd8WCRa7W33dl4SAH1udJ74ZYpJV
PMqQ4F6ps+SeH4Ywq7NKeONDgqItP+udJUNwu7L2xhGcE39qqGyZyP9WFicy
wd9rWCty/xjCL3Kt3OReEuzeRh07/s8Qm3JXGZwnuFHgB+PgSgpcrtZcdCFY
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
7k1W3GjaYg7hTtv6SP5ofAntsDwnZg7BqJ4Mt4dR4MIz0VMS5tg8fXs6XiYK
4hxjHyMkzdFDi2+PzzgK6/yfaQ4yhL0yeQuW+yNR0yLbI6RgTvTN8jFR23B0
nVS/yKlkDqNvwvu3DB/BW7rRwSVlc3zNKQq+5H4EGyZd1r5UN8euj9WbWyMO
I2x1ltUZPcK/gUKJmb5QpPVe2JpoYI4nJ3p8WgNCcflsxcJhijn6z3a91+AN
xZBsR/oeU3PIDHyWqLIJgTr9Z89Gujm0g8a+OP0JAl2IrZCdaY6+yJ0po9eC
4DuxLvC7tTkuupSecnIJwtkQWb7BPebYrbrvj8DDQ/h1xoWe62qOqfq1z1uu
B4Lfw39bvLs5lCsiteL8AyEre+RTiCcRj0P2PM93BsKpOTPDxodY/+LSXIfj
QTSPt/cKHDTHjYXNL3iTDmCwvK+Q5ZA5rEISn3cKH8DH4NeBi0HmiFDtebR4
Yz9E2X/y9YcR+X/7pVLntT9idsoyso4R8SkTT5q39YNBcGYfX5o5/Mr1q1lK
fMCesPv4WLo5OhsNLY45+ODxGSGlG5nm+HHjxjCT3wf0lqIcWq45WP4tBM3G
74UrZ/WehAJz7Eif8HoX6Q1xkTCO3RfMkbtmQHOPtjemSZoNEoXmeK554NT4
Hy8E2LQJ37tkDrd2XiPlOC8cvfhsdLncHNvaangkz3tCr/p02pNr5jjoNT/c
7e0Jlg4HnL1hDoHXRgZ75T2J8/xEoWq1ObIm16406/DAWZVFz0MNhP56GX+s
l91R2ynwbvqhOao46yPyUtwQ8Xoo//ZjQk+1Tp4f3N2g8/kcLa7THOf84rrn
1dzQvnH7dbEec/gUbF99tdMV/e7KgU6D5rhrQa78lumCTz9svve9JfZP3TrG
beOEGi6hK4XT5ui2yrn2js8Jh7eM7jk4a46a/Ka/zd2O+Gvg3cD93hxDXu+e
KVo4gjst9KjJItGJTLYmDts4QGb76VXNKy3gPDnuff6UHRwU+COrWSxwf8/N
9z4MO6Topi1eYbPA001BMpyCdvhol/A2i9MCkvJiSXev7EFNatgD33UWsG50
e5feawu9H7bJ68UsYBS66dhlym4Esfav4pKwgL/RbR7JjbtxaZ1V5L/tFpAe
M3YynLUBu5zJ/nc7LBDPmPtlnWaDLjc1y1ayBTw3PFaLGLeG3ZNN/Pv1LPCj
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
                   "]]}, "Charting`Private`Tag$6003#2"]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0.0005, 0.00023190497049653552`}, 
              FrameTicks -> {{Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 
              GoldenRatio^(-1), Axes -> {True, True}, 
              AxesLabel -> {$CellContext`\[Theta], "I/I_max"}, 
              AxesOrigin -> {0.0005, 0}, DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0.0005, 0.0012}, {0.00023190497049653552`, 
               0.9999307239643146}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], Epilog -> 
            Map[$CellContext`myLabel$6034, 
              Apply[Join, {
                MapIndexed[{
                  Part[$CellContext`lbl1$$, 
                   Part[#2, 1]], #}& , 
                 Partition[$CellContext`pts1$$, 3]], 
                MapIndexed[{
                  Part[$CellContext`lbl2$$, 
                   Part[#2, 1]], #}& , $CellContext`pts2$$]}]], ImageSize -> 
            500], 
          Graphics[{
            Dynamic[
             MapIndexed[With[{$CellContext`i$ = Part[#2, 1]}, 
               Locator[
                Dynamic[
                 
                 Part[$CellContext`pts1$$, $CellContext`i$]]]]& , \
$CellContext`pts1$$]], 
            Dynamic[
             MapIndexed[With[{$CellContext`i$ = Part[#2, 1]}, 
               Locator[
                Dynamic[
                 
                 Part[$CellContext`pts2$$, $CellContext`i$]]]]& , \
$CellContext`pts2$$]]}, PlotRange -> {{0, 1}, {0, 1}}]], StandardForm],
        ImageSizeCache->{500., {156., 160.}}]},
      {
       InputFieldBox[Dynamic[$CellContext`varRsrv$$],
        FieldHint->"Label Import Area",
        FieldSize->55]},
      {
       TemplateBox[{
        ButtonBox[
         "\"Add Labeled Arrow\"", ButtonFunction :> 
          If[Length[$CellContext`pts1$$] < 
            3 OptionValue[$CellContext`lblPlot, {}, \
$CellContext`maxArrowedLbls], 
            AppendTo[$CellContext`lbl1$$, "Arrow"]; $CellContext`pts1$$ = 
             Join[$CellContext`pts1$$, $CellContext`u$6034]], Appearance -> 
          Automatic, Evaluator -> Automatic, Method -> "Preemptive"],
         ButtonBox[
         "\"Add Label\"", ButtonFunction :> 
          If[Length[$CellContext`pts2$$] < 
            OptionValue[$CellContext`lblPlot, {}, \
$CellContext`maxNonArrowedLbls], AppendTo[$CellContext`lbl2$$, "Label"]; 
            AppendTo[$CellContext`pts2$$, 
              Part[$CellContext`u$6034, 2]]], Appearance -> Automatic, 
          Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
         "\"Copy to new .nb\"", 
          ButtonFunction :> \
$CellContext`copyToNewNB$6034[$CellContext`plotRsrv$6034, \
{$CellContext`pts1$$, $CellContext`pts2$$, $CellContext`lbl1$$, \
$CellContext`lbl2$$}], Appearance -> Automatic, Evaluator -> Automatic, 
          Method -> "Preemptive"],ButtonBox[
         "\"Export Labels\"", 
          ButtonFunction :> \
$CellContext`exportLbls$6034[{$CellContext`pts1$$, $CellContext`pts2$$, \
$CellContext`lbl1$$, $CellContext`lbl2$$}], Appearance -> Automatic, 
          Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
         "\"Import Labels\"", ButtonFunction :> (If[
             And[
             Head[$CellContext`varRsrv$$] == List, 
              Length[$CellContext`varRsrv$$] == 6, 
              Part[$CellContext`varRsrv$$, 1] == 
              Part[$CellContext`varRsrv$$, -1] == 
              Part[$CellContext`safeGuard$6034, 1]], {$CellContext`pts1$$ = 
              Part[$CellContext`varRsrv$$, 2], $CellContext`pts2$$ = 
              Part[$CellContext`varRsrv$$, 3], $CellContext`lbl1$$ = 
              Part[$CellContext`varRsrv$$, 4], $CellContext`lbl2$$ = 
              Part[$CellContext`varRsrv$$, 5]}, 
             MessageDialog[
             "You're trying to Import a label set not created by \"Export \
Labels\""], 
             MessageDialog[{
               Head[$CellContext`varRsrv$$], Part[$CellContext`varRsrv$$, 1] == 
               Part[$CellContext`varRsrv$$, -1] == \
$CellContext`safeGuard$6034}]]; Null), Appearance -> Automatic, Evaluator -> 
          Automatic, Method -> "Preemptive"]},
        "RowDefault"]},
      {
       DynamicBox[ToBoxes[
         Grid[
          Transpose[{
            Join[{""}, 
             PadRight[
              Map[Row[{#, 
                 InputField[
                  Dynamic[
                   Part[$CellContext`lbl1$$, #]], String], 
                 Button[
                  StringJoin["Delete", 
                   ToString[#]], $CellContext`lbl1$$ = 
                   Drop[$CellContext`lbl1$$, {#, #}]; $CellContext`pts1$$ = 
                   Drop[$CellContext`pts1$$, {3 # - 2, 3 #}]]}]& , 
               Range[Length[$CellContext`pts1$$]/3]], 
              Max[
               Length[$CellContext`lbl1$$], 
               Length[$CellContext`lbl2$$]], ""]], 
            Join[{""}, 
             PadRight[
              Map[Row[{#, 
                 InputField[
                  Dynamic[
                   Part[$CellContext`lbl2$$, #]], String], 
                 Button[
                  StringJoin["Delete", 
                   ToString[#]], $CellContext`lbl2$$ = 
                   Drop[$CellContext`lbl2$$, {#, #}]; $CellContext`pts2$$ = 
                   Drop[$CellContext`pts2$$, {#}]]}]& , 
               Range[
                Length[$CellContext`pts2$$]]], 
              Max[
               Length[$CellContext`lbl1$$], 
               Length[$CellContext`lbl2$$]], ""]]}], ItemSize -> 30], 
         StandardForm],
        ImageSizeCache->{533., {2.4169921875, 7.5830078125}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   DynamicModuleValues:>{}]]], "Output",
 CellChangeTimes->{
  3.5612012863900824`*^9, 3.5612013909650636`*^9, {3.561204123840375*^9, 
   3.561204135137021*^9}, {3.5612041896251383`*^9, 3.56120422008488*^9}, 
   3.561206743365204*^9, 3.759322072759555*^9, {3.763888442553481*^9, 
   3.763888461160492*^9}},ExpressionUUID->"973ec87a-0fea-4d73-b287-\
d052db8e0317"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"0.97", ",", " ", 
          RowBox[{"delta", "[", 
           RowBox[{"theta", ",", " ", "0", ",", " ", 
            RowBox[{"lambda1", "/", "d"}]}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"i", "[", 
         RowBox[{"0.97", ",", " ", 
          RowBox[{"delta", "[", 
           RowBox[{"theta", ",", " ", "0", ",", " ", 
            RowBox[{"lambda", "/", "d"}]}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", ",", " ", 
      RowBox[{"{", 
       RowBox[{"theta", ",", " ", "thetamin", ",", " ", 
        RowBox[{"thetamin", " ", "*", " ", "10"}]}], "}"}], 
      "\[IndentingNewLine]", ",", " ", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", "Full"}], 
      "\[IndentingNewLine]", ",", " ", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "\"\<I/I_max\>\""}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lambda", ",", " ", "lambda2"}], "}"}], ",", " ", "lambda1", 
      ",", " ", 
      RowBox[{"lambda1", "*", "2"}]}], "}"}], "\[IndentingNewLine]", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d", ",", " ", "0.1"}], "}"}], ",", " ", "0.05", ",", " ", 
      "1"}], "}"}], " ", "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"thetamin", ",", " ", "0.0005"}], "}"}], ",", " ", "0.0001", 
      ",", " ", "0.005"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.5612064181216006`*^9, 3.5612067119924088`*^9}, {
   3.5612067503346024`*^9, 3.5612067816973963`*^9}, 
   3.56120683177326*^9},ExpressionUUID->"56c9ff63-1d2f-40d4-a8bf-\
c029802b4b59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"peeters`exportForLatex", "[", 
  RowBox[{
  "\"\<etalonAngularDependencyForTwoWavelengthsFig11b\>\"", ",", "s"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.763888508040326*^9, 
  3.7638885254691563`*^9}},ExpressionUUID->"12ebc723-6954-43a5-a538-\
198e1895bea9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"etalonAngularDependencyForTwoWavelengthsFig11b.eps\"\>", 
   ",", "\<\"etalonAngularDependencyForTwoWavelengthsFig11bpn.png\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.763888532323024*^9},ExpressionUUID->"88ecab58-725a-4a39-bba9-\
fd4900cc39a7"]
}, Open  ]]
},
WindowSize->{850, 1145},
WindowMargins->{{293, Automatic}, {26, Automatic}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 296, 7, 52, "Input",ExpressionUUID->"0cbb7a05-2d5f-40aa-b805-0f1687c427d4"],
Cell[878, 31, 179, 3, 34, "Output",ExpressionUUID->"2033cdbf-666d-42b1-b7a1-3804be4574ea"]
}, Open  ]],
Cell[1072, 37, 1518, 38, 206, "Input",ExpressionUUID->"fde72bca-5d2b-4894-ad34-b96a0ebd324c"],
Cell[CellGroupData[{
Cell[2615, 79, 26955, 606, 2215, "Input",ExpressionUUID->"82449784-71ee-4da1-b8be-d32384065399"],
Cell[29573, 687, 51324, 862, 250, "Output",ExpressionUUID->"d345c755-730c-4040-a425-034a4c757ccf"],
Cell[80900, 1551, 58011, 1001, 425, "Output",ExpressionUUID->"973ec87a-0fea-4d73-b287-d052db8e0317"]
}, Open  ]],
Cell[138926, 2555, 2042, 50, 283, "Input",ExpressionUUID->"56c9ff63-1d2f-40d4-a8bf-c029802b4b59"],
Cell[CellGroupData[{
Cell[140993, 2609, 285, 7, 30, "Input",ExpressionUUID->"12ebc723-6954-43a5-a538-198e1895bea9"],
Cell[141281, 2618, 298, 7, 56, "Output",ExpressionUUID->"88ecab58-725a-4a39-bba9-fd4900cc39a7"]
}, Open  ]]
}
]
*)

