(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    460608,       9509]
NotebookOptionsPosition[    448262,       9302]
NotebookOutlinePosition[    448620,       9318]
CellTagsIndexPosition[    448577,       9315]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "peeters`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "peeters`setGitDir", "[", "\"\<../project/figures/phy452-basicstatmech\>\"",
    "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fs", "=", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"#", ",", 
      RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], "&"}]}], 
  ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.7595001334824*^9, 
  3.75950013349479*^9}},ExpressionUUID->"9c907d45-e80f-43c5-aace-\
563c2a5b2dd8"],

Cell[CellGroupData[{

Cell["Huang, problem 9.3.  Relativisitic gas.", "Section",
 CellChangeTimes->{{3.574120490307891*^9, 
  3.5741204991443963`*^9}},ExpressionUUID->"50fd0a9e-9430-4cec-a120-\
9b47e0575427"],

Cell[CellGroupData[{

Cell["Problem a.", "Subsection",
 CellChangeTimes->{{3.574120475588049*^9, 
  3.574120477143138*^9}},ExpressionUUID->"7fb01a1a-6f90-4c2a-b17e-\
e11da3570a4f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "i", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"m", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"e", " ", ">", " ", "0"}]}]}], " ", ";", 
  RowBox[{
   RowBox[{"i", "[", 
    RowBox[{"x_", ",", " ", "m_", ",", " ", "e_"}], "]"}], " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"x", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"x", "^", "2"}], " ", "-", " ", 
        RowBox[{"m", "^", "2"}]}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "m", ",", " ", "e"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i2", "[", 
   RowBox[{"x_", ",", " ", "m_", ",", " ", "e_"}], "]"}], " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"x", "^", "2"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "e"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"x", "^", "2"}], " ", "-", " ", 
      RowBox[{"m", "^", "2"}]}], "]"}]}], ",", " ", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.574115936092405*^9, 3.574115993518689*^9}, {
  3.574116060584525*^9, 3.574116085363942*^9}, {3.574116323660572*^9, 
  3.5741163311309996`*^9}, {3.5741172617512283`*^9, 
  3.5741172625962763`*^9}},ExpressionUUID->"a94de182-dd78-4e0e-bb80-\
a58b5f3d250a"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"e", "-", "m"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"e", "+", "m"}], ")"}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}], ",", 
   RowBox[{"e", ">", "m"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.574116084989921*^9, 3.574116094625472*^9}, 
   3.5741163399505043`*^9, 
   3.5741173003444357`*^9},ExpressionUUID->"c7cb2a51-1294-4be1-aaaa-\
f8ad9fd15989"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["e", "3"], "3"]], "Output",
 CellChangeTimes->{{3.574116084989921*^9, 3.574116094625472*^9}, 
   3.5741163399505043`*^9, 
   3.574117300527446*^9},ExpressionUUID->"f9d83fd7-b9da-4d0f-acbf-\
640632ceab5e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["m", "2"]}], "+", 
     SuperscriptBox["x", "2"]}], ")"}], 
   RowBox[{"3", "/", "2"}]]}]], "Output",
 CellChangeTimes->{{3.574116084989921*^9, 3.574116094625472*^9}, 
   3.5741163399505043`*^9, 
   3.5741173005384464`*^9},ExpressionUUID->"f5c2de2e-9c9c-4d7e-8e48-\
cc31b84797a3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem e.", "Subsection",
 CellChangeTimes->{{3.5741204670275593`*^9, 3.5741204684336395`*^9}, {
  3.5745554811164293`*^9, 
  3.5745554811784325`*^9}},ExpressionUUID->"5069df9d-0c88-404e-a587-\
ebda0afbade3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"ef", ",", " ", "d"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ef", "[", 
   RowBox[{"c_", ",", " ", "h_", ",", " ", "rho_", ",", " ", "m_"}], "]"}], 
  " ", "=", " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"c", " ", "h"}], ")"}], "^", "3"}], " ", 
      RowBox[{"rho", "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "Pi"}], ")"}]}]}], ")"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", " ", 
       RowBox[{"c", "^", "2"}]}], ")"}], "^", "2"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"d", " ", "=", " ", 
  RowBox[{"ef", "[", 
   RowBox[{
    RowBox[{"3", " ", 
     RowBox[{"10", "^", "8"}]}], ",", " ", 
    RowBox[{"6.62606957", " ", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "34"}], ")"}]}]}], ",", " ", 
    RowBox[{"1", "/", 
     RowBox[{
      RowBox[{"(", "0.01", ")"}], "^", "3"}]}], ",", " ", "0"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"d", " ", "6.24150934", " ", 
  RowBox[{"10", "^", 
   RowBox[{"(", "18", ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.5741199962136307`*^9, 3.5741201368546743`*^9}, {
  3.574120301670101*^9, 3.574120312612727*^9}, {3.5741205050177326`*^9, 
  3.574120505189742*^9}},ExpressionUUID->"62682970-0d19-4555-a168-\
941c8e19a054"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["c", "4"], " ", 
    SuperscriptBox["m", "2"]}], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["c", "3"], " ", 
     SuperscriptBox["h", "3"], " ", "rho"}], 
    RowBox[{"2", " ", "\[Pi]"}]]}]]], "Output",
 CellChangeTimes->{{3.574120131965395*^9, 3.574120140604889*^9}, 
   3.5741203164839487`*^9},ExpressionUUID->"c9d06b1e-e399-4a0a-aba7-\
28a3d84e401a"],

Cell[BoxData["6.124019464532921`*^-35"], "Output",
 CellChangeTimes->{{3.574120131965395*^9, 3.574120140604889*^9}, 
   3.574120316488949*^9},ExpressionUUID->"29680134-26cf-41a2-93ee-\
cd686a941454"],

Cell[BoxData["3.8223124686224025`*^-16"], "Output",
 CellChangeTimes->{{3.574120131965395*^9, 3.574120140604889*^9}, 
   3.574120316491949*^9},ExpressionUUID->"618f541a-6c27-4a95-b436-\
f38d0093fbe9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem b.  volume element change of vars", "Subsection",
 CellChangeTimes->{{3.574254319812049*^9, 
  3.5742543355009465`*^9}},ExpressionUUID->"6c6e0dbf-b48d-4503-90cb-\
ea65314d49c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "p", ",", " ", "px", ",", " ", "py", ",", " ", "pz", ",", " ", "v", ",", 
   " ", "npSq", ",", " ", "j", ",", " ", "jm"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", "0"}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"px", ",", " ", "py", ",", " ", "pz"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"npSq", " ", "=", " ", 
    RowBox[{
     RowBox[{"px", "^", "2"}], " ", "+", " ", 
     RowBox[{"py", "^", "2"}], " ", "+", " ", 
     RowBox[{"pz", "^", "2"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Norm", "[", "p", "]"}], "^", "2"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"v", " ", "=", " ", 
  RowBox[{"p", "/", 
   RowBox[{"Sqrt", "[", " ", 
    RowBox[{
     RowBox[{"m", "^", "2"}], " ", "+", " ", 
     RowBox[{"npSq", "/", 
      RowBox[{"c", "^", "2"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jm", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{"v", ",", " ", 
     RowBox[{"{", "p", "}"}]}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"jm", " ", "//", " ", "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", " ", "=", " ", 
   RowBox[{"Det", "[", " ", "jm", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"j", " ", "//", " ", "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{"j", "//", " ", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.5742543385831227`*^9, 3.574254585284233*^9}, {
  3.5742547261822925`*^9, 3.574254766283586*^9}, {3.5742548059438543`*^9, 
  3.574254873682729*^9}},ExpressionUUID->"d9bfb6e3-34fb-4516-a729-\
27e21b5bca78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"px", ",", "py", ",", "pz"}], "}"}]], "Output",
 CellChangeTimes->{{3.5742544066260147`*^9, 3.5742544693696036`*^9}, {
   3.5742545160892754`*^9, 3.574254542670796*^9}, {3.574254576575735*^9, 
   3.574254582288062*^9}, 3.5742547687727284`*^9, {3.5742548071979265`*^9, 
   3.574254836659611*^9}, 
   3.5742548759918613`*^9},ExpressionUUID->"3f12afa5-c01a-454a-b631-\
5b681a0d7c64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["px", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["m", "2"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["px", "2"], "+", 
        SuperscriptBox["py", "2"], "+", 
        SuperscriptBox["pz", "2"]}], 
       SuperscriptBox["c", "2"]]}]]], ",", 
   FractionBox["py", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["m", "2"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["px", "2"], "+", 
        SuperscriptBox["py", "2"], "+", 
        SuperscriptBox["pz", "2"]}], 
       SuperscriptBox["c", "2"]]}]]], ",", 
   FractionBox["pz", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["m", "2"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["px", "2"], "+", 
        SuperscriptBox["py", "2"], "+", 
        SuperscriptBox["pz", "2"]}], 
       SuperscriptBox["c", "2"]]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.5742544066260147`*^9, 3.5742544693696036`*^9}, {
   3.5742545160892754`*^9, 3.574254542670796*^9}, {3.574254576575735*^9, 
   3.574254582288062*^9}, 3.5742547687727284`*^9, {3.5742548071979265`*^9, 
   3.574254836659611*^9}, 
   3.574254876027863*^9},ExpressionUUID->"9ecc0774-7bc9-4e44-81fc-\
aed5666e8e5a"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["m", "2"], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["px", "2"], "+", 
            SuperscriptBox["py", "2"], "+", 
            SuperscriptBox["pz", "2"]}], 
           SuperscriptBox["c", "2"]]}]]], "-", 
       FractionBox[
        SuperscriptBox["px", "2"], 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["px", "2"], "+", 
              SuperscriptBox["py", "2"], "+", 
              SuperscriptBox["pz", "2"]}], 
             SuperscriptBox["c", "2"]]}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"px", " ", "py"}], 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["px", "2"], "+", 
              SuperscriptBox["py", "2"], "+", 
              SuperscriptBox["pz", "2"]}], 
             SuperscriptBox["c", "2"]]}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"px", " ", "pz"}], 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["px", "2"], "+", 
              SuperscriptBox["py", "2"], "+", 
              SuperscriptBox["pz", "2"]}], 
             SuperscriptBox["c", "2"]]}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"px", " ", "py"}], 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["px", "2"], "+", 
              SuperscriptBox["py", "2"], "+", 
              SuperscriptBox["pz", "2"]}], 
             SuperscriptBox["c", "2"]]}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}], 
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["m", "2"], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["px", "2"], "+", 
            SuperscriptBox["py", "2"], "+", 
            SuperscriptBox["pz", "2"]}], 
           SuperscriptBox["c", "2"]]}]]], "-", 
       FractionBox[
        SuperscriptBox["py", "2"], 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["px", "2"], "+", 
              SuperscriptBox["py", "2"], "+", 
              SuperscriptBox["pz", "2"]}], 
             SuperscriptBox["c", "2"]]}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"py", " ", "pz"}], 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["px", "2"], "+", 
              SuperscriptBox["py", "2"], "+", 
              SuperscriptBox["pz", "2"]}], 
             SuperscriptBox["c", "2"]]}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"px", " ", "pz"}], 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["px", "2"], "+", 
              SuperscriptBox["py", "2"], "+", 
              SuperscriptBox["pz", "2"]}], 
             SuperscriptBox["c", "2"]]}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"py", " ", "pz"}], 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["px", "2"], "+", 
              SuperscriptBox["py", "2"], "+", 
              SuperscriptBox["pz", "2"]}], 
             SuperscriptBox["c", "2"]]}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}], 
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["m", "2"], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["px", "2"], "+", 
            SuperscriptBox["py", "2"], "+", 
            SuperscriptBox["pz", "2"]}], 
           SuperscriptBox["c", "2"]]}]]], "-", 
       FractionBox[
        SuperscriptBox["pz", "2"], 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["m", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["px", "2"], "+", 
              SuperscriptBox["py", "2"], "+", 
              SuperscriptBox["pz", "2"]}], 
             SuperscriptBox["c", "2"]]}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.5742544066260147`*^9, 3.5742544693696036`*^9}, {
   3.5742545160892754`*^9, 3.574254542670796*^9}, {3.574254576575735*^9, 
   3.574254582288062*^9}, 3.5742547687727284`*^9, {3.5742548071979265`*^9, 
   3.574254836659611*^9}, 
   3.574254876063865*^9},ExpressionUUID->"a98d07aa-f138-494f-8eec-\
7241c12f6e6b"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["c", "6"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", 
          SuperscriptBox["m", "2"]}], "+", 
         SuperscriptBox["px", "2"], "+", 
         SuperscriptBox["py", "2"], "+", 
         SuperscriptBox["pz", "2"]}], 
        SuperscriptBox["c", "2"]], ")"}], 
      RowBox[{"9", "/", "2"}]]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["c", "6"], " ", 
      SuperscriptBox["m", "6"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["c", "4"], " ", 
      SuperscriptBox["m", "4"], " ", 
      SuperscriptBox["px", "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["c", "4"], " ", 
      SuperscriptBox["m", "4"], " ", 
      SuperscriptBox["py", "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["c", "4"], " ", 
      SuperscriptBox["m", "4"], " ", 
      SuperscriptBox["pz", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["c", "2"], " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["px", "4"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["c", "2"], " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["px", "2"], " ", 
      SuperscriptBox["py", "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["c", "2"], " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["px", "2"], " ", 
      SuperscriptBox["pz", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["c", "2"], " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["py", "4"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["c", "2"], " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["py", "2"], " ", 
      SuperscriptBox["pz", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["c", "2"], " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["pz", "4"]}]}], ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.5742544066260147`*^9, 3.5742544693696036`*^9}, {
   3.5742545160892754`*^9, 3.574254542670796*^9}, {3.574254576575735*^9, 
   3.574254582288062*^9}, 3.5742547687727284`*^9, {3.5742548071979265`*^9, 
   3.574254836659611*^9}, 
   3.57425487614887*^9},ExpressionUUID->"130d7e96-28af-44ee-ac1b-\
470444cd2a4a"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["c", "6"], " ", 
   SuperscriptBox["m", "2"], " ", 
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["c", "2"], " ", 
       SuperscriptBox["m", "2"]}], "+", 
      SuperscriptBox["px", "2"], "+", 
      SuperscriptBox["py", "2"], "+", 
      SuperscriptBox["pz", "2"]}], 
     SuperscriptBox["c", "2"]]]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["c", "2"], " ", 
      SuperscriptBox["m", "2"]}], "+", 
     SuperscriptBox["px", "2"], "+", 
     SuperscriptBox["py", "2"], "+", 
     SuperscriptBox["pz", "2"]}], ")"}], "3"]]], "Output",
 CellChangeTimes->{{3.5742544066260147`*^9, 3.5742544693696036`*^9}, {
   3.5742545160892754`*^9, 3.574254542670796*^9}, {3.574254576575735*^9, 
   3.574254582288062*^9}, 3.5742547687727284`*^9, {3.5742548071979265`*^9, 
   3.574254836659611*^9}, 
   3.5742548761708713`*^9},ExpressionUUID->"581d3002-c46c-49d0-8f34-\
3c03fb86e56e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["problem b.  attempt the integrals", "Subsection",
 CellChangeTimes->{{3.5743421089921784`*^9, 
  3.574342113999465*^9}},ExpressionUUID->"a2629c5d-c124-4fd9-bb47-\
c0b68801bd1d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"i", "[", 
    RowBox[{"x_", ",", " ", "beta_", ",", " ", "mu_", ",", " ", "e0_"}], 
    "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "2"}], " ", "-", " ", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"3", "/", "2"}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "5"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"beta", " ", "e0", " ", "x"}], " ", "-", " ", 
           RowBox[{"beta", " ", "mu"}]}], ")"}]}], " ", "+", " ", "1"}], 
       ")"}]}], ")"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"i2", "[", 
    RowBox[{"x_", ",", " ", "beta_", ",", " ", "mu_", ",", " ", "e0_"}], 
    "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "2"}], " ", "-", " ", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "4"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"beta", " ", "e0", " ", "x"}], " ", "-", " ", 
           RowBox[{"beta", " ", "mu"}]}], ")"}]}], " ", "+", " ", "1"}], 
       ")"}]}], ")"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "[", 
   RowBox[{"x", ",", " ", "\[Beta]", ",", " ", "\[Mu]", ",", " ", 
    SubscriptBox["e", "0"]}], "]"}], " ", "//", " ", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i2", "[", 
   RowBox[{"x", ",", " ", "\[Beta]", ",", " ", "\[Mu]", ",", " ", 
    SubscriptBox["e", "0"]}], "]"}], " ", "//", " ", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Beta]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Mu]", " ", "<", " ", "1"}], " ", "&&", "  ", 
    RowBox[{
     SubscriptBox["e", "0"], " ", ">", " ", "0"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{"i", "[", 
    RowBox[{"x", ",", " ", "\[Beta]", ",", " ", "\[Mu]", ",", " ", 
     SubscriptBox["e", "0"]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "Infinity"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{"i2", "[", 
    RowBox[{"x", ",", " ", "\[Beta]", ",", " ", "\[Mu]", ",", " ", 
     SubscriptBox["e", "0"]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "Infinity"}], "}"}]}], 
  "]"}]}], "Input",ExpressionUUID->"69029a0f-05d4-4cc2-bdbf-f59fe1b90824"],

Cell[BoxData[
 FormBox[
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "-", "1"}], ")"}], 
    RowBox[{"3", "/", "2"}]], 
   RowBox[{
    SuperscriptBox["x", "5"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[Beta]", " ", 
         SubscriptBox["e", "0"], " ", "x"}], "-", 
        RowBox[{"\[Beta]", " ", "\[Mu]"}]}]], "+", "1"}], ")"}]}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5743421200658116`*^9},ExpressionUUID->"88aaff3a-d985-4463-a80c-\
a6d76bc9486e"],

Cell[BoxData[
 FormBox[
  FractionBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "-", "1"}]], 
   RowBox[{
    SuperscriptBox["x", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[Beta]", " ", 
         SubscriptBox["e", "0"], " ", "x"}], "-", 
        RowBox[{"\[Beta]", " ", "\[Mu]"}]}]], "+", "1"}], ")"}]}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5743421201518164`*^9},ExpressionUUID->"a0dd753b-eaa3-410a-8a11-\
f6b482497b2e"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "1", "\[Infinity]"], 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Beta]"}], " ", "\[Mu]"}], "+", 
         RowBox[{"x", " ", "\[Beta]", " ", 
          SubscriptBox["e", "0"]}]}]]}], ")"}], " ", 
     SuperscriptBox["x", "5"]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{
  3.57434214731137*^9},ExpressionUUID->"79d26a70-d875-4bb7-bda7-d9271d2488e6"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "1", "\[Infinity]"], 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["x", "2"]}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Beta]"}], " ", "\[Mu]"}], "+", 
         RowBox[{"x", " ", "\[Beta]", " ", 
          SubscriptBox["e", "0"]}]}]]}], ")"}], " ", 
     SuperscriptBox["x", "4"]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{
  3.574342156693907*^9},ExpressionUUID->"2e2be755-7e3a-4ce4-bf62-\
8517c55c0c93"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem b.  second round of the integrals.", "Subsection",
 CellChangeTimes->{{3.5743494989284425`*^9, 
  3.57434951182218*^9}},ExpressionUUID->"84778787-2764-4c72-9440-\
f1506763573c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"f1", ",", " ", "f2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", 
    RowBox[{"a_", ",", " ", "b_", ",", " ", "y_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "+", "1"}], ")"}], "^", "2"}], " ", "-", "1"}], ")"}], 
     "^", 
     RowBox[{"(", 
      RowBox[{"3", "/", "2"}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"b", " ", "y"}], ")"}]}]}], " ", "+", " ", "1"}], ")"}]}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f2", "[", 
    RowBox[{"a_", ",", " ", "b_", ",", " ", "y_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"y", " ", "+", " ", "1"}], ")"}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "+", "1"}], ")"}], "^", "2"}], " ", "-", "1"}], ")"}], 
      "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"b", " ", "y"}], ")"}]}]}], " ", "+", " ", "1"}], 
      ")"}]}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{"\[Beta]", " ", 
        SubscriptBox["\[Epsilon]", "0"]}], ")"}]}], "/", "z"}], ",", " ", 
    RowBox[{"\[Beta]", " ", 
     SubscriptBox["\[Epsilon]", "0"]}], ",", " ", "y"}], "]"}], " ", "//", 
  " ", "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{"\[Beta]", " ", 
        SubscriptBox["\[Epsilon]", "0"]}], ")"}]}], "/", "z"}], ",", " ", 
    RowBox[{"\[Beta]", " ", 
     SubscriptBox["\[Epsilon]", "0"]}], ",", " ", "y"}], "]"}], " ", "//", 
  " ", "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", "  ", "=", " ", 
   RowBox[{
    RowBox[{"\[Beta]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Log", "[", "z", "]"}], " ", "<", " ", "\[Beta]"}], " ", "&&", 
    " ", 
    RowBox[{
     SubscriptBox["\[Epsilon]", "0"], " ", ">", " ", "0"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"f1", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", " ", 
          SubscriptBox["\[Epsilon]", "0"]}], ")"}]}], "/", "z"}], ",", " ", 
      RowBox[{"\[Beta]", " ", 
       SubscriptBox["\[Epsilon]", "0"]}], ",", " ", "y"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"y", ",", " ", "0", ",", " ", "Infinity"}], "}"}]}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"f2", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", " ", 
          SubscriptBox["\[Epsilon]", "0"]}], ")"}]}], "/", "z"}], ",", " ", 
      RowBox[{"\[Beta]", " ", 
       SubscriptBox["\[Epsilon]", "0"]}], ",", " ", "y"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"y", ",", " ", "0", ",", " ", "Infinity"}], "}"}]}], "]"}], 
  " "}]}], "Input",ExpressionUUID->"4253a277-24d3-4213-8567-9278e9033f5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["problem d", "Subsection",
 CellChangeTimes->{{3.5745554937541523`*^9, 
  3.5745554951312313`*^9}},ExpressionUUID->"5ce00282-6938-4bf6-a0c8-\
af6a9574aa59"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"efe", " ", ">", " ", "1"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"i1", " ", "=", " ", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "2"}], " ", "-", " ", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"3", "/", "2"}], ")"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "1", ",", " ", "efe"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"i2", " ", "=", " ", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "x", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "2"}], " ", "-", " ", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "1", ",", " ", "efe"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"i1", "/", "i2"}], " ", "/.", " ", 
   RowBox[{"efe", " ", "\[Rule]", " ", 
    RowBox[{"Sqrt", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "/", 
         SubscriptBox["n", 
          RowBox[{"0", " "}]]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"2", "/", "3"}], ")"}]}], " ", "+", " ", "1"}], "]"}]}]}], 
  " ", "//", " ", "FullSimplify"}]}], "Input",ExpressionUUID->"3c2d3501-0839-\
4934-9add-5968cdeda9b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
problem d.  attempt to sum the series in the expansion of n(zbar)\
\>", "Subsection",
 CellChangeTimes->{{3.574643164871252*^9, 
  3.574643189301649*^9}},ExpressionUUID->"bff91f1d-37ba-42ee-91b4-\
27db5901ee8c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"k", ",", " ", "theta"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$Assumptions", " ", "=", " ", 
    RowBox[{
     RowBox[{"k", " ", "\[Element]", " ", "Integers"}], " ", "&&", " ", 
     RowBox[{"theta", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"k", " ", "\[GreaterEqual]", " ", "0"}]}]}], " ", ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"doesn", "'"}], "t", " ", 
    RowBox[{"converge", "?"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"k", "+", "1"}], ")"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"k", " ", "+", " ", "s", " ", "+", " ", 
       RowBox[{"3", "/", "2"}]}], ")"}]}], " ", 
    RowBox[{"Gamma", "[", " ", 
     RowBox[{"k", " ", "+", " ", "s", " ", "+", " ", 
      RowBox[{"3", "/", "2"}]}], "]"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"theta", "/", "2"}], ")"}], "^", "s"}], " ", 
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{"3", "/", "2"}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{"s", "+", "1"}], "]"}], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"3", "/", "2"}], "-", "s"}], "]"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", "/", "2"}], " ", "+", " ", "s"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", "/", "2"}], " ", "-", "s"}], ")"}]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"s", ",", " ", "0", ",", " ", "Infinity"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.574643328863632*^9, 
  3.5746433384031773`*^9}},ExpressionUUID->"5ae84ac8-bc72-4912-934c-\
2f35167f9f77"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pressure integrals for problem d.", "Subsection",
 CellChangeTimes->{{3.574721415126012*^9, 3.5747214193862553`*^9}, {
  3.5751210817093596`*^9, 
  3.5751210838404813`*^9}},ExpressionUUID->"40f23624-d12c-4557-8b97-\
34ef6102c911"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "theta", ",", " ", "s", ",", " ", "j", ",", " ", "k", ",", " ", "m", ",", 
   " ", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$Assumptions", " ", "=", " ", 
    RowBox[{
     RowBox[{"theta", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"s", " ", "\[Element]", " ", "Integers"}], " ", "&&", " ", 
     RowBox[{"m", " ", "\[Element]", " ", "Integers"}], " ", "&&", " ", 
     RowBox[{"s", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
     RowBox[{"m", " ", "\[GreaterEqual]", " ", "0"}]}]}], " ", ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"i", " ", "=", " ", 
    RowBox[{"Integrate", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{"m", " ", "+", " ", 
          RowBox[{"1", "/", "2"}]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"theta", " ", "x"}]}], ")"}], " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"theta", " ", 
          RowBox[{"x", "/", "2"}]}]}], "]"}], " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "x"}], 
         RowBox[{"(", 
          RowBox[{"1", " ", "+", " ", "s"}], ")"}]}], "]"}]}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"j", "[", 
     RowBox[{"theta_", ",", " ", "s_"}], "]"}], " ", "=", " ", 
    RowBox[{"Integrate", "[", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"theta", " ", "x"}], " ", "+", " ", "1"}], ")"}], "^", 
           "2"}], "-", "1"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"3", "/", "2"}], ")"}]}], " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "x"}], 
         RowBox[{"(", 
          RowBox[{"1", " ", "+", " ", "s"}], ")"}]}], "]"}]}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
   " ", ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "[", " ", 
   RowBox[{"\[Theta]", ",", " ", "s"}], "]"}], " ", "//", " ", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Theta]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"s", " ", "\[Element]", " ", "Integers"}], " ", "&&", " ", 
    RowBox[{"s", " ", "\[GreaterEqual]", " ", "0"}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"j", "[", " ", 
      RowBox[{"\[Theta]", ",", " ", "s"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "5"}], "}"}]}], "]"}], " ",
    "//", " ", "FullSimplify"}], "//", " ", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"huang93Fig2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"BesselK", "[", 
        RowBox[{"2", ",", " ", "x"}], "]"}], ",", " ", 
       RowBox[{"BesselK", "[", 
        RowBox[{"2", ",", " ", 
         RowBox[{"1", "/", "x"}]}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0.3", ",", " ", "3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "z", "}"}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{",", " ", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", "Full"}]}], "*)"}], " ", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"TraditionalForm", "[", 
            RowBox[{"BesselK", "[", 
             RowBox[{"2", ",", " ", "z"}], "]"}], "]"}], " ", "//", "fs"}], 
          ",", " ", 
          RowBox[{
           RowBox[{"TraditionalForm", "[", 
            RowBox[{"BesselK", "[", 
             RowBox[{"2", ",", " ", 
              RowBox[{"1", "/", "z"}]}], "]"}], "]"}], " ", "//", "fs"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", " ", "Right"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.5747688472686543`*^9, 3.5747689271162214`*^9}, {
  3.5747692115364895`*^9, 3.5747692122925324`*^9}, {3.5751206192029057`*^9, 
  3.5751206195199237`*^9}, {3.5751206618813467`*^9, 3.5751206950762453`*^9}, {
  3.5751207387667446`*^9, 3.57512077523783*^9}, {3.575120824435644*^9, 
  3.5751208306469994`*^9}, {3.575120953292014*^9, 3.5751209701489787`*^9}, {
  3.5751213163407793`*^9, 3.575121336266919*^9}, {3.575122873480843*^9, 
  3.575122876316005*^9}, {3.575122944163886*^9, 3.5751229454759607`*^9}, {
  3.575279245977562*^9, 3.5752793547397823`*^9}, {3.5752798215344815`*^9, 
  3.575279838557455*^9}, {3.759500025694628*^9, 
  3.75950006347441*^9}},ExpressionUUID->"f66a8a57-6c17-4707-b255-\
f98291186445"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"3", " ", "\[Theta]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"s", "+", "1"}], "\[Theta]"]], " ", 
    TemplateBox[{"2",FractionBox[
       RowBox[{"s", "+", "1"}], "\[Theta]"]},
     "BesselK"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"s", "+", "1"}], ")"}], "2"]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.575120792677828*^9, 3.575120837695403*^9, {3.575120957988283*^9, 
   3.575120971470054*^9}, 3.5751228832113996`*^9, 3.575122952439359*^9, 
   3.5752414248996744`*^9, 3.5752792936552887`*^9, 3.57527932514209*^9, 
   3.575279357722953*^9, 3.5753304027294645`*^9, 3.5754774491380625`*^9, 
   3.575478469973451*^9, {3.759500037202621*^9, 
   3.759500064632614*^9}},ExpressionUUID->"b4507b71-5380-4373-ae3b-\
ed197905593a"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    FractionBox[
     RowBox[{"3", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "2"]], " ", 
      SuperscriptBox["\[Theta]", 
       RowBox[{"3", "/", "2"}]]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"s", "+", "1"}], ")"}], 
      RowBox[{"5", "/", "2"}]]], "+", 
    FractionBox[
     RowBox[{"45", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "2"]], " ", 
      SuperscriptBox["\[Theta]", 
       RowBox[{"5", "/", "2"}]]}], 
     RowBox[{"8", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"s", "+", "1"}], ")"}], 
       RowBox[{"7", "/", "2"}]]}]], "+", 
    FractionBox[
     RowBox[{"315", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "2"]], " ", 
      SuperscriptBox["\[Theta]", 
       RowBox[{"7", "/", "2"}]]}], 
     RowBox[{"128", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"s", "+", "1"}], ")"}], 
       RowBox[{"9", "/", "2"}]]}]], "-", 
    FractionBox[
     RowBox[{"945", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "2"]], " ", 
      SuperscriptBox["\[Theta]", 
       RowBox[{"9", "/", "2"}]]}], 
     RowBox[{"1024", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"s", "+", "1"}], ")"}], 
       RowBox[{"11", "/", "2"}]]}]], "+", 
    FractionBox[
     RowBox[{"31185", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "2"]], " ", 
      SuperscriptBox["\[Theta]", 
       RowBox[{"11", "/", "2"}]]}], 
     RowBox[{"32768", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"s", "+", "1"}], ")"}], 
       RowBox[{"13", "/", "2"}]]}]], "+", 
    InterpretationBox[
     RowBox[{"O", "(", 
      SuperscriptBox["\[Theta]", "6"], ")"}],
     SeriesData[$CellContext`\[Theta], 0, {}, 3, 12, 2],
     Editable->False]}],
   SeriesData[$CellContext`\[Theta], 0, {
    3 (Rational[1, 2] Pi)^Rational[1, 2] (1 + $CellContext`s)^Rational[-5, 2],
      0, Rational[45, 8] (Rational[1, 2] Pi)^
      Rational[1, 2] (1 + $CellContext`s)^Rational[-7, 2], 0, 
     Rational[315, 128] (Rational[1, 2] Pi)^
      Rational[1, 2] (1 + $CellContext`s)^Rational[-9, 2], 0, 
     Rational[-945, 1024] (Rational[1, 2] Pi)^
      Rational[1, 2] (1 + $CellContext`s)^Rational[-11, 2], 0, 
     Rational[31185, 32768] (Rational[1, 2] Pi)^
      Rational[1, 2] (1 + $CellContext`s)^Rational[-13, 2]}, 3, 12, 2],
   Editable->False], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.575120792677828*^9, 3.575120837695403*^9, {3.575120957988283*^9, 
   3.575120971470054*^9}, 3.5751228832113996`*^9, 3.575122952439359*^9, 
   3.5752414248996744`*^9, 3.5752792936552887`*^9, 3.57527932514209*^9, 
   3.575279357722953*^9, 3.5753304027294645`*^9, 3.5754774491380625`*^9, 
   3.575478469973451*^9, {3.759500037202621*^9, 
   3.75950006467104*^9}},ExpressionUUID->"1f8b5570-ed5b-4d08-ae4a-\
46f0113df281"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[
           1.], LineBox[CompressedData["
1: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
87l3pnUoFf4HFj6bfQ==
            "]]},
          Annotation[#, "Charting`Private`Tag$76240#1"]& ], 
         TagBox[
          {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[
           1.], LineBox[CompressedData["
1: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
oWrnSfwTQFb8Zg==
            "]]},
          Annotation[#, "Charting`Private`Tag$76240#2"]& ]}, {}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["z", TraditionalForm], None},
      AxesOrigin->{0.3, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->None,
      PlotRange->{{0.3, 3}, {0., 21.745732126972857`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{StyleBox[
        TemplateBox[{"2", "z"}, "BesselK"], FontSize -> 14, StripOnInput -> 
        False],StyleBox[
        TemplateBox[{"2", 
          FractionBox["1", "z"]}, "BesselK"], FontSize -> 14, StripOnInput -> 
        False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1.01, 0.5}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["z", TraditionalForm], None},
   AxesOrigin->{0.3, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->None,
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
87l3pnUoFf4HFj6bfQ==
           "]]}, "Charting`Private`Tag$76240#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
oWrnSfwTQFb8Zg==
           "]]}, "Charting`Private`Tag$76240#2"]}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0.3, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {$CellContext`z, None}, 
      AxesOrigin -> {0.3, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0.3, 3}, {0., 21.745732126972857`}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Style[
         TraditionalForm[
          BesselK[2, $CellContext`z]], FontSize -> 14], 
        Style[
         TraditionalForm[
          BesselK[2, $CellContext`z^(-1)]], FontSize -> 14]}, LegendMarkers -> 
       None, LabelStyle -> {}, LegendLayout -> "Column"]], {Right, Right}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.575120792677828*^9, 3.575120837695403*^9, {3.575120957988283*^9, 
   3.575120971470054*^9}, 3.5751228832113996`*^9, 3.575122952439359*^9, 
   3.5752414248996744`*^9, 3.5752792936552887`*^9, 3.57527932514209*^9, 
   3.575279357722953*^9, 3.5753304027294645`*^9, 3.5754774491380625`*^9, 
   3.575478469973451*^9, {3.759500037202621*^9, 
   3.7595000647635117`*^9}},ExpressionUUID->"41733006-c438-41ba-aecf-\
cda42ffb9ba7"]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", 
       SqrtBox[
        FractionBox["\[Pi]", "2"]], " ", 
       SuperscriptBox["\[Theta]", 
        RowBox[{"3", "/", "2"}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"s", "+", "1"}], ")"}], 
       RowBox[{"5", "/", "2"}]]], "+", 
     FractionBox[
      RowBox[{"45", " ", 
       SqrtBox[
        FractionBox["\[Pi]", "2"]], " ", 
       SuperscriptBox["\[Theta]", 
        RowBox[{"5", "/", "2"}]]}], 
      RowBox[{"8", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"s", "+", "1"}], ")"}], 
        RowBox[{"7", "/", "2"}]]}]], "+", 
     FractionBox[
      RowBox[{"315", " ", 
       SqrtBox[
        FractionBox["\[Pi]", "2"]], " ", 
       SuperscriptBox["\[Theta]", 
        RowBox[{"7", "/", "2"}]]}], 
      RowBox[{"128", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"s", "+", "1"}], ")"}], 
        RowBox[{"9", "/", "2"}]]}]], "-", 
     FractionBox[
      RowBox[{"945", " ", 
       SqrtBox[
        FractionBox["\[Pi]", "2"]], " ", 
       SuperscriptBox["\[Theta]", 
        RowBox[{"9", "/", "2"}]]}], 
      RowBox[{"1024", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"s", "+", "1"}], ")"}], 
        RowBox[{"11", "/", "2"}]]}]], "+", 
     FractionBox[
      RowBox[{"31185", " ", 
       SqrtBox[
        FractionBox["\[Pi]", "2"]], " ", 
       SuperscriptBox["\[Theta]", 
        RowBox[{"11", "/", "2"}]]}], 
      RowBox[{"32768", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"s", "+", "1"}], ")"}], 
        RowBox[{"13", "/", "2"}]]}]], "+", 
     InterpretationBox[
      RowBox[{"O", "(", 
       SuperscriptBox["\[Theta]", "6"], ")"}],
      SeriesData[$CellContext`\[Theta], 0, {}, 3, 12, 2],
      Editable->False]}],
    SeriesData[$CellContext`\[Theta], 
     0, {(3 (Rational[1, 2] Pi)^Rational[1, 2]) (1 + $CellContext`s)^
       Rational[-5, 2], 
      0, (Rational[45, 8] (Rational[1, 2] Pi)^Rational[1, 2]) (
        1 + $CellContext`s)^Rational[-7, 2], 
      0, (Rational[315, 128] (Rational[1, 2] Pi)^Rational[1, 2]) (
        1 + $CellContext`s)^Rational[-9, 2], 
      0, (Rational[-945, 1024] (Rational[1, 2] Pi)^Rational[1, 2]) (
        1 + $CellContext`s)^Rational[-11, 2], 
      0, (Rational[31185, 32768] (Rational[1, 2] Pi)^Rational[1, 2]) (
        1 + $CellContext`s)^Rational[-13, 2]}, 3, 12, 2],
    Editable->False], " "}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.575279396052145*^9, 
  3.575279407827819*^9}},ExpressionUUID->"9270645a-1d8e-4320-bf07-\
ce1a1a1ea597"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5747689440661907`*^9, 3.574768986309607*^9}, 
   3.5747692074262543`*^9},ExpressionUUID->"db762742-c59e-4c87-b7d2-\
a109a8f0a9d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["problem d.  pressure Bessel exponential plot", "Subsection",
 CellChangeTimes->{{3.5747234395868044`*^9, 
  3.574723449041345*^9}},ExpressionUUID->"bdee956b-1f3f-41f3-b3a1-\
34943c70b994"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "f", ",", " ", "theta", ",", " ", "s", ",", " ", "z", ",", " ", "n", ",", 
   " ", "\[Theta]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"theta_", ",", " ", "s_", ",", " ", "z_"}], "]"}], " ", "=", " ", 
   RowBox[{"theta", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "s"}], " ", 
    RowBox[{"z", "^", 
     RowBox[{"(", 
      RowBox[{"s", "+", "1"}], ")"}]}], 
    RowBox[{"j", "[", " ", 
     RowBox[{"theta", ",", " ", "s"}], "]"}]}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"\[Theta]", ",", "s", ",", " ", "z"}], "]"}], " ", "//", " ", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fn", "[", 
    RowBox[{"theta_", ",", " ", "n_", ",", " ", "z_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"theta", ",", " ", "s", ",", " ", "z"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"s", ",", " ", "0", ",", " ", "n"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"tau", ",", " ", "s", ",", " ", "z"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"tau", ",", " ", "0.1", ",", " ", "10"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "0", ",", "10", ",", "1"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"z", ",", " ", "0.1"}], "}"}], ",", "0", ",", "5"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fn", "[", 
       RowBox[{"tau", ",", " ", "n", ",", " ", "z"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"tau", ",", " ", "0.01", ",", " ", "3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "4"}], "}"}]}]}], "\[IndentingNewLine]", "]"}],
     "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10", ",", "1"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"z", ",", " ", "0.02"}], "}"}], ",", "0", ",", "5"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "q", "]"}], "\[IndentingNewLine]", 
 RowBox[{"q", " ", "=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "w", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"w", " ", "=", " ", 
      RowBox[{"{", "10", "}"}]}], " ", ";", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Map", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"fn", "[", 
            RowBox[{"theta", ",", " ", "#", ",", " ", "1"}], "]"}], " ", 
           "&"}], ",", " ", "w"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"theta", ",", " ", "0.1", ",", " ", "100"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
        RowBox[{"{", " ", "\[Theta]", "}"}]}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"PlotRange", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "1.5"}], "}"}]}], ","}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fn", "[", 
      RowBox[{"theta", ",", " ", "10", ",", " ", "z"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"theta", ",", " ", "0", ",", " ", "r"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "r"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", " ", "z"}], "}"}]}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], "*)"}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"r", ",", " ", "5", ",", " ", "100"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "r", "]"}], "\[IndentingNewLine]", 
 RowBox[{"r", " ", "=", " ", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"fn", "[", 
     RowBox[{"theta", ",", "10", ",", "z"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"theta", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "z"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.57472348076616*^9, {3.574759874286429*^9, 3.5747599255523615`*^9}, {
   3.574767614292132*^9, 3.574767701775136*^9}, {3.5747677658578014`*^9, 
   3.574767798309657*^9}, {3.574767841702139*^9, 3.574767939676743*^9}, {
   3.574767972123599*^9, 3.5747680188982744`*^9}, 3.5748517810907297`*^9, 
   3.574851937364668*^9, {3.5751214709266214`*^9, 3.575121474103803*^9}, {
   3.575122684747048*^9, 3.575122707369342*^9}, {3.575122738992151*^9, 
   3.575122773265111*^9}, {3.5751228977252293`*^9, 3.575122939900642*^9}, {
   3.575124400889206*^9, 3.5751244275997334`*^9}, {3.5751244691771116`*^9, 
   3.5751244692431154`*^9}, 3.575124561441389*^9, {3.5751248390942698`*^9, 
   3.57512489417142*^9}, 3.575126565575019*^9, {3.5751270515588155`*^9, 
   3.57512705198484*^9}},ExpressionUUID->"191b008c-d96b-451b-8c0d-\
b9415931c419"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "s"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"1", "+", "s"}], "theta"]], " ", 
   SuperscriptBox["theta", "2"], " ", 
   SuperscriptBox["z", 
    RowBox[{"1", "+", "s"}]], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     FractionBox[
      RowBox[{"1", "+", "s"}], "theta"]}], "]"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "s"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.5751248948974614`*^9, 3.57512705583206*^9, 
  3.575330370763636*^9, 3.5753304157222075`*^9, 3.5754774560004554`*^9, 
  3.5754784764638224`*^9, 
  3.759500237516613*^9},ExpressionUUID->"76d4743f-3bd3-4ca0-8801-\
b1d4d1fa68f8"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["\[Theta]", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "s"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"s", "+", "1"}], "\[Theta]"]], " ", 
    SuperscriptBox["z", 
     RowBox[{"s", "+", "1"}]], " ", 
    TemplateBox[{"2",FractionBox[
       RowBox[{"s", "+", "1"}], "\[Theta]"]},
     "BesselK"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"s", "+", "1"}], ")"}], "2"]], TraditionalForm]], "Output",
 CellChangeTimes->{3.5751248948974614`*^9, 3.57512705583206*^9, 
  3.575330370763636*^9, 3.5753304157222075`*^9, 3.5754774560004554`*^9, 
  3.5754784764638224`*^9, 
  3.7595002375246983`*^9},ExpressionUUID->"e68c2f96-65bc-4fd3-a6a8-\
00e183084b0d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`s$$ = 0, $CellContext`z$$ = 0.1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`s$$], 0, 10, 1}, {{
       Hold[$CellContext`z$$], 0.1}, 0, 5}}, Typeset`size$$ = {
    360., {113., 118.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`s$76844$$ = 
    0, $CellContext`z$76845$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`s$$ = 0, $CellContext`z$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$76844$$, 0], 
        Hold[$CellContext`z$$, $CellContext`z$76845$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`f[$CellContext`tau, $CellContext`s$$, $CellContext`z$$], \
{$CellContext`tau, 0.1, 10}, PlotRange -> {-4, 4}], 
      "Specifications" :> {{$CellContext`s$$, 0, 10, 
         1}, {{$CellContext`z$$, 0.1}, 0, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {172., 178.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5751248948974614`*^9, 3.57512705583206*^9, 
  3.575330370763636*^9, 3.5753304157222075`*^9, 3.5754774560004554`*^9, 
  3.5754784764638224`*^9, 
  3.759500237817915*^9},ExpressionUUID->"7437c52e-0b6f-43a5-b480-\
6170df4d465a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 0, $CellContext`z$$ = 0.02, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 0, 10, 1}, {{
       Hold[$CellContext`z$$], 0.02}, 0, 5}}, Typeset`size$$ = {
    360., {120., 124.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$76873$$ = 
    0, $CellContext`z$76874$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 0, $CellContext`z$$ = 0.02}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$76873$$, 0], 
        Hold[$CellContext`z$$, $CellContext`z$76874$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`fn[$CellContext`tau, $CellContext`n$$, \
$CellContext`z$$], {$CellContext`tau, 0.01, 3}, PlotRange -> {0, 4}], 
      "Specifications" :> {{$CellContext`n$$, 0, 10, 
         1}, {{$CellContext`z$$, 0.02}, 0, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {179., 185.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5751248948974614`*^9, 3.57512705583206*^9, 
  3.575330370763636*^9, 3.5753304157222075`*^9, 3.5754774560004554`*^9, 
  3.5754784764638224`*^9, 
  3.759500237876759*^9},ExpressionUUID->"fb5f9cc6-81ac-4aa9-bd3d-\
9d2bfb1adb36"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$76971#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\[Theta]", TraditionalForm], None},
  AxesOrigin->{0.1, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 100}, {0., 5.736600541176447*^8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5751248948974614`*^9, 3.57512705583206*^9, 
  3.575330370763636*^9, 3.5753304157222075`*^9, 3.5754774560004554`*^9, 
  3.5754784764638224`*^9, 
  3.759500237907752*^9},ExpressionUUID->"9fa6d517-f7bd-4cf4-8c33-\
45df2e44534d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`r$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`r$$], 5, 100}}, Typeset`size$$ = {360., {134., 138.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`r$77044$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`r$$ = 5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`r$$, $CellContext`r$77044$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        $CellContext`fn[$CellContext`theta, 
         10, $CellContext`z], {$CellContext`theta, 
         0, $CellContext`r$$}, {$CellContext`z, 0, $CellContext`r$$}, 
        AxesLabel -> {$CellContext`\[Theta], $CellContext`z}], 
      "Specifications" :> {{$CellContext`r$$, 5, 100}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {179., 185.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5751248948974614`*^9, 3.57512705583206*^9, 
  3.575330370763636*^9, 3.5753304157222075`*^9, 3.5754774560004554`*^9, 
  3.5754784764638224`*^9, 
  3.759500237942246*^9},ExpressionUUID->"25775ee4-d7c9-42a6-927b-\
620b928c62e7"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyEvXlcTd0b9988iAYqDZRSKJQxUzon0iQiQ4SEZMzUIIoGRSnRpKgkTSSk
SUqmaFCaS2RoIJEhqRDV736+974+53cfT6+nf87rvM/VWtf6XNdea+21195b
ZfNei618PDw8GsN4ePj/+XyidfZd8o9wPfp8ubo5+cZX63l8OacG9jTUsYhf
Mm2VaZvrq1e3uYK1p6EVXKXjUGSMYo7eqq5P7sFq38BrrR0OL5B6rse69e2N
fUMPeHBOv3fi+w49jcM9LJPgP+BrQgPv34zmY5280GcerMbLJt7G6lP/8F2K
NfC/P35wdsjwvIU+yizHTXyp9g1C4EGFN36fL9FgfXgoYNOQJQoe3n7HL6Bv
OstaTVjSJHgoeOJ5PdGMK/NZ1T6i97PsJcC/Bklm3NZdxIr/Ljg7WE0K3Dr4
QzGvzxLWxv+VMxxcYF7t/Su8K1kKq0TaBgZGgI+MV92redIK7SRdd8T27Suv
j9Sl7+BVNhsa5ApYpDPxDFnWn56eHyzSmfhrTW3PIrmRbNKZ+In7J9z3zNVm
k87ETbdeP2wxR59NOhN3NL/4NDB2GZt0Jm4wbeDdmrkb2KQz8Utr1/1p/bqN
TToTdx62cmXR6QNs0pn42FMXGt0CXdmkM/HniTkrn9w5xiadiVs/3Lbs2X5/
NulMvNPvkqlKZDCbdCau2q3hOy81ArqTfj8F8wo+eyRDZ+LR8nJhvQtq8Z0+
o2SdPAq0hNmkM/G0VoPDV3eMg87EP6zsEzfaoAedifdmlvOsebwMOhMf/85o
f/VMG+hMfKBBZ0Su127oTDyg+9cGnQ0HoTPx6qWT5q0Z4wWdiX8yTC59034S
OhPXePy6hN80BDoT3/RYIYxdcx46E1ecNs/Neeol6Iz2vnlVZq1+GTqTTjt3
TfWJk06HzsQNFv/0CHz9GroQ9831jRBvlYTO9KlR9jFih80U6Ew8rGXTkYuz
DaEz8WzXOP5bwWugM/HoGpcG48fboDPx9sWzP1//6AidiQ8pTz83c5wndCb+
q2fo9hsXTkJn4gJu90vnF4RAZ+KJtRWOqmuioDPxD/69vjtvxUFn4qLibSfL
7yZDZ+Im3WN5lt+/CZ1Jj+A4y2Mri29DZ+LG+V21eSFvoTPxY6nVyQ/sZFEu
8X45h+eHEmZCZ/oMKHw9395iCXQmzg6O3t071QY6E59UHhG22HwvdCZunnhS
YrGfK3QmPrNU5+i6oOPQGfVn/cm74BUEnYnH7XihrMt3HjoTv54uME047hJ0
Jn7vyYXRvp+uQGfimXsa46+G3oTOxK11pkxIW3ULOlO7zX1usLojC6Ez8dUh
3q4xph3Qmfj7tc9ctI6Ogc7E82Pnbhkdoof6iN/d7dPjP3EldKbPDvNVL6ua
t0Jn4moHDpZ0NTtCZ+LbT876XDrVCzoTtxXr/Hrj/CnoTNz5U7fs8Lqz0Jl4
Wb6Am2nTRehMXKL22uUOucvQmbj/Sx29Cxmp0Jn4ETufqvCILOgM+9zl6wva
86Azte9ztfu21zyt0Jm4yJLFHz/mC6PfIb59fEjsteUzoDPxivB8pbDby6Az
8Ycsy3ef59vCD+JhCbKWA2GO0BnzjoRSlx83vKAz8agf1gfCF5+GzsSXXZdx
GXMlAjoTbzCfFv/+xCXoTLz1wrmga0+ToTPx+wuEr+kVpUFn+FnnOnbbpdvQ
mfj1t2aG8xUeQGfisl3ipiabCqAztaOyWLTKOnPIfNKZeHPPe7a3gCZnHGJ4
adXTlP1TV0Jn4om2W7/IeOyBzsQnTQ9VzVLyhM7EpdMCw43Nz8A/4h31gQ51
vyLxnT7PGI9+1WuaCJ2JH06WTuetSoXOxM/3OYeeXJkNnYnbbhkbEsj3ADoT
l+1UGohVKYTOxIuWXD03JLcMOhPfPU4lZRh/DXQmnl0rb/XzwnPoTP7O+OCu
0zRvMnQmPnv5+MJrjxZDZ+JvlSe48P92hM7E1d+bTuqtD4TOxPtnnbrT++oi
dCbeVyyRFmx5AzoTF+6KfPqZlQO/iZuE67054PgI3+kz6/H05+1zyqAz8VGp
novd9tZCZ+LZTdu0J9i/gs7EA0NfnLuV3AKdiRdO3fT8e+YH6Ew8UWrUzhFH
O6AzcZdHCqGxlV3Qmfyq4uU73rR9MXQm3rytUEe7cQdnvsLwlTey7cV3hXDG
Y7JXUtHyXpsCnYkb2kpK7Sm6C52JW82JSzazK4XOxJNHZ081i3kGnYkb6K64
/M24Ge0hvm6fc0J4/Ud8x/xORePltfZO6Ew8/nzZljeVv6Az8Tm2O1d4T+DV
J52J21QcFxljLqRPOqO9nz12F7oM1Sedia/XO6xwpElKH+c5TP0GsrHPXHfa
QWfilRnhA1vG+EBn4k+XLO+ySLwBnYk/7vsq1ideyBl3Gf5WrHPphz/10Jl4
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
d/qUdrbM853cBD2JS3579+3ui/fQk7jUPjf17zId0JP4AiWduK2Tu6En8Z8j
739bYfEbulE9loG+L3MXL4Nu4D/uNtQ/OwPdiIvLhusf+nMDuhEfPrdw9tfI
fOhGfMXc6NmpdtXQjXj29CezWpoboRvxNrfLMmP+fIRuxO/te9y4yagL7SGe
bDu+bJhCH77T59VtTYLVYwX0STfipgf8dlqPENMn3Yi/Tck8f+eRlD7pRjzw
yYQHrAZZnL9QeXrjn8ZUKuyAbsT3FXbEbP90BboR99bc80wgvAi6EV/msMle
Ruk1dMM8l73ksdSjz9CNOOtr3+QpTb+gG/Gvif3mApcF9Ek3+NmxfqoHv4Q+
6Ubc8NdXXpV5svrUTuIp4/6UWeYpQTf6vBQtcSQmXg26EXdSXJVyU2oidCNO
5310/HJz0pPKK5U5ferMfk/oSdz0o9no37wPoSfx0dk9wf4jmqAn8a4FF7ac
buvizCcYbtNte9zmH31IT+ITW18o7e+S0ic9iWfXmcUoJY2CnsR75XXzizzU
oSdxo3t+y9dUakFP4tReaj83x/9zcdKTm5Oe3Jz0pP/jCTD9kqV7FnoSH/Kq
YoRnVx30JP5syllz7Ufd0JO4eIRe8qjEIfqkJ+atlfUmD1YoQE/i3x1cJ+9u
Ggc9iZOfGJ+4OOnJzUlPbk56cnPShZvTd25OenJz0pN+n7Ezo3iUVTL0JB5h
LflVYEY79CSu9GXR3j0lovqkJ3GBDK+wtFBl6EncUeTxIenp2tCTOPlDenJz
0pObk57cnPTk5qQnNyc9uTnpxc3pOzfH+SCz3pYpNcb33Q4r7N+i37WzQ+45
hGThO/3uaRr9wbAnHP9Pv3cXPw2KuRigS+tyxJPrHMuvbm/DfBX7mjR3DB8z
pgX7Xci+Z8Y4p0hXYc5xwdjr1pVkv/otgnVpss9jXzFNyFLmHC+MvfTwX+ft
IsfiugDZTzhr8XbO4anol8i+ozHgrfiVWbguQ/Z253+Fpbxic84TaP9gwnYW
y8AY12uQp4cz7YIvLsH1GuK3BXa17NBfw7lOxvCOMZM3RT7djOsoxFcaz5UO
a9uFdX/iaQ12F5f+ccA6NdpVdSmip8gV66rEC6Orh7vXenHOZ5m4nTiRXJsl
b4l1T7LftHGMYOMfX+w/o7jFzfmxt0evAjpSnGe/y1QM70rEd7Lv2FVto3SV
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
+sGun3Lb//c6vtRfeUW/C48sWG875T7yis4bymzj/ggsjEVekX3ZjT9B+3Xb
kFdkf0LsYkl6ZRPyCvtP5WefeR/Pq095RfamRlryB9/xYH842StYO8YMUxyB
64Zk37Fc8G3mDWnkFdkfWLl1/MsQFeQV2ZvHvem4u1cNeUX25SM+Gs7SmIy8
Gmw/P/f1UMqrwfb5D3add7D9/4Nd/x3svoDBrgsPdr/AYNeLB7uPYLDryNz2
ZPcXZ/KK5vVLL+59tkK7GnmFffEdU8wTnqbjehjZi5amaghZZ8ynfCO+a33W
tuvZf5BXxENOlMU1tEkjf4g/VB95mRU/DnnCfR2W8oGbU9y5OcWXm1McuTnF
i5tTXP7v16P/vo5Meg12fZn7/gJcR2f83S21qS3oTCf0J/3ejHMsqIhMRd5T
ng6pdgtILGpCXLH/NzlBpqW6H5x7Hwtx7n4Jz9ngyivif11//+EbE6JWyaLP
jHJfw/K7KaxNvGWneXjegn+ecSAvI/w9a+aJZ+a37L+Ch+3foLCIfwjb+3iH
8C37bvA7SX/8dWpV2XtMurcFq/0Gl1z/zWdl8kz2JKG+lix7HjbxhmXxIYbH
F+E71b/16O0TM6Tv4zt9fpYy/Wwa1At/iI8stnl33W40/CFu4Zcd/GHVTPhD
XDLC5+POMGP4Q3xITOjsPIc18IfqMehfsmq5dRHaQ+UdmxLwIndWPTiVZ8eq
vOtvw/GP+Mutww3mJKqxqVziVvltm3KqFsJ/4s4FIllLxlvBf+KdB8w12jV3
w3/6/GOz1dw16TD8v7RtIETN5J/zjCPC4UWfJNFO4o0ZSzfknVsIf4iftNpS
tbDRBv4Qt/CRTJiwwhH+ELcdmPcly8gbfhCfYvsuKLg/CP6MLOY1CFYTYnfV
HlmmlTWNzYnfv9zxWJlf5Stb+ENcU2yG8PUlnvCHeGjiznvX5UPhD/EN3cnG
hpvj4A/xZR7j9L5dToU/AZoCXQMDImzT0T7FqxUs4A9x1S/yBgUDx+AP8deV
CjLquy/CH+J31vjtS2lJgz/E5+rUxPENeQh/iEvFnXn/MqsM/vD+7/gVY+cO
P2OT4r0H/hBPm3b0w8OKi/CH+PhdA5dH+OfCH+LeV9bfM4sohz/EvwRbhhmM
fA1/iMulhxzcEvAB/jh/FlnZkCXO3rTTZMD61XH4QzyhNrD/6eTb8Id43vwd
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
+hLqxX1ySz3z9zicR700Hq4dMyWCb3IA2ktc3O2KZ2bVKuhD44/TE63zVdfm
wp64F09ZbLT6FvhP58uar1W9a5TPgZP9ZZf+WQeOXIP/VG/XSVHz3e6Pwamc
/ve8kmVS9+E/jasz8vd8maOQAH+If5/rXrfSah/nvJUZx7y2r5By6LOAPfGc
ReP41ui7cspnxs/A+W8i4pPucMqndU2FSFHrmcdRPo2fE4V1xnanb+fs62b4
iBMbekfnBKF8Gic7nowX7PhQCXtcV1SctCXxUSTsKd+vbr4WFdb0FscF93od
+UPn0dIWmUcnjpmC54fQ79tirI3jajnPhSDuGVqSkpdQj/N/4hmry5etVz+E
dUjKr7xtQ4/vzHyG81PcRyl2fLNJ0UT0J3hPTryT0e7HJhiPiLvXxnj3B9hg
HCHee2OHXJHDfowLxF0s9NuLdD3QX+N+LCkPKesb/pjfEreM05qpqMSZf+L+
0F3XJU2fcuaHxAWv1K+t9+bM64jHGr459WUpZ95FfG5one6kx7cw/yGe8kXn
5YiWe4gXzYsydz7le3HhAeJH7asvNx120uoh7GncEfZ7sMyhoRz2NO4VTOr1
35pQBI56JxVFPeh+hOOOxmsbMYnPRxeYIS6433Drq3TVP9sQF+JB75eofXV3
Q1yIx1wqMHkjEwC/iR9NeXvfIi4C9VL/f/nZ9NILp+1RL/FxT0Rq03f5ol7i
w7+vGcheEAV76scsfohrX3dNhD1xs6avjz1rb0MH7n2PlMfUrzgcNFffEO+D
vKe4WBzTFRhnEc9Z12b0bwrevbZFvwCcxqlGaTe7qiLO+jX1w5svBSb2Cw7B
8UP9WNkDvgP308dxrdeJsc9He/tcbx3F9fxzMbagVcChzPvy+thnw4wLsiXn
7qvID0e7aL3xbrxgbMIRfcyrKX+5dcB+eFsfo5Klazj2TF5z29P64fvVdgYf
/+xBv0TtsDLpmzKKp4nTrzLrZMtDzAQHtILRH9G8w+7s3nHu6+KxDkzl3U7d
O76L5wDm58Snl52Ynx4djf6Kyl83dcXWJtVOXPck+6flMUL7brzH84AoH6dp
tc7dVVCFeKHfujZpoeclF9RL/PT94BnxpvEoh/JxkebdpFseL2FP+dgj3pU4
60IG2kvXGW5Om349Sv0+2kvzncWv84OHpZxCOcQTTWZu4zXPRr10/AXzFu1V
rWqH/8QXHhK1OLU1BOVgX9iG6WUbJ9+DPjTvPu6wtm7obM55I63jyebzPFvR
twP9C/FjBj5OWpNd0P/TcW9dIpEyaxTn+gT1P5cnmwy7552BeJH95Vy5O6ZH
tDAPp+NudGOF7bATfpjP4TkJ8YYjHuiGwp7KH+s4fvyEmCAcD2T/QuLh9czQ
CyiH7M/dP/Fwwc5InEeT/Q11TXmXOYkoB+NUYVh5zJZ4nP+Sfe+NcgN14xso
B++HkuKXNtK7hvNosh9TmROaa5+JcvCenMmNydJrM3Dckb2wmIlrWOodzvsO
mfHtbNSo8Nx6FehM/a2/bhHPpEX1yBMa9xb+tBMQDVgIe+pX0wR9rjZt68Vx
S/2npJ3mmbYfEvrkD42T8zOXvJ+zUAj7DYgbWPkJznq9GecRpN+HtF9f5H5x
nk9F42ryC4/U38XusCf9wo/7bppYwLm+Sf3VnvOBhyUqwjmc6ZdaX271kJuY
Ck794tgIRanZsx6B0zjArx35dP+ZZ9CZ/LxurthRaiWtT8c52bfyeEmf+PAT
fmJfYjd/y+uMDuhJv6+prG/OsnLC8UjHe1nO78qAq2ewf37uJMWvx3YN+2vf
/laekK5JRUP/ul9gA9s8QEFX8q/7BWbI/ZabEinx1/0IPDwz/cSXc677yG87
LOOxafD3Kdg9ctRNqOHsJ3Ee52Bm0CTOpk/iI59dv9gdJsm+bbYu6MgyDl9R
vGjr6xlC7NCkpGDTSo6fegofx1hsFGGbx7hEPHXh8OLIHW3q+/6ZJ6jOfzl8
NqdemfTMsJkXelgSKw/V3uzg+Dn2+djjerW/WPUpIXPylnF4XO/ql6wxkmwb
2a2Fn89z/BnV4/+84KEU20xjxIq0Mo7Ohnzy0iP7pdint7cIX8vh8K2Hm2+4
tA5n76zIM788l8MLGl48uF8xgi04cvP6wg5OXM5cK+86JCnCPrskRmboSU67
SuznP3bdN4RtJRcbfHUEh3tr6ZfELx7KvuZaLrAugxOvaRcNJrakDWUn8Ro1
LAvk8DMNS4Q0zPjYE4ZrhWzI5sRRxDKiP9OYnz2m6PbsWR4cHuwzXPDLLAH2
Hp3Tc/3YHD6d3Smft/Un69U0X/nd0X8/h/CkbN60JwWc9uI8rerg6Zh+jj90
PbIq4rdQbgFH5z3HfJc9Mf/7fkaafxhL9GY5T//7PkeFCUMdtylxyjnY53L5
qcPfz0Glecnc/ojV7rs49jQPS3u4M7MmntNe6tc6p45eujSHo/+Y8xqu4l8E
/roeSvM2z6T2e2FCHJ5vcGKNbLbIoPfxpRksrR5+lMOpH1fO49m7iZeTzzMf
mC34+YT3r/tZvPK1p6Rs6v/rPjKsRw+b9jvejsPpfiWr+5Yjj7znxHHqjLYr
SsN7/7pfqUtWS/PZFh52qfkXnZJ5nHISsiqcJOb2sY6mH4mee+fv97xw9z+D
5f9gx8tg/dtgx91geTjY8TtYngyWV4P1V4Pl1WD9yWD5P1g/OVj+D3a8DNYP
DNbPD9afDHb8DtYvDTa+DJb/g/Xngx0Xg/WTgx2ng40jgx2ngx3Xg/WHg42P
g/Wrg/Uzg/XPgx3vg/UPg42Dgx2/g/UPg/Ungx3vg437g/Ung42/g40vg/VX
g81DBhv3T63xN+flqcF8dqzvqrzVFg9YNsw8jXhj7W2vY/kdrMOr6w7y8HwB
V3Ce4m9qIs629Pg+loeHs7+r+eeYpIxdP/TofIe44f1vvI92CLGyP/YJ8nhw
3v8usENgQqbLCHAqv2RiiuTlGRbsfrr/l+Fs5n3lBjJ8vQPunPeVBzZpXz39
2I59kpk3U/kxV/ILomZNYxEnexOnJ0rVH/axK/53HiEG+18/7eeoi85lEcdz
d6P5Jv3ScmHL0ntVGPvIr5Yvi0UWsIiTfWqP92aBhx5srZmC3wZYkrCX7NS/
U2NpzCIO/YMUp9+4eJxdyZzXYP/Xu0+Ki4cvYxHnvC8+RqWz+RTb0VS4feAe
Z/+UYuAQoWuFK1nEyX7pwRXBjzaEsCnudL5o8/DG5cYrFYg78cPLgw4UzeBh
U9zx3vM494LFG0azKV54r2y+z9Z99zYhXrBn3ntO8SJ+Vm3Pwtw5zogX8dJD
Y362HfNAXIi/FFXsCYg5Af2Jm3bJP/+18Qx0Jq6zaFX4i9FnoSfxIde+XWuf
FQ3diJecOH38+9dL0Ifuz206rPI5aUo99CH+YpL6xg3RwtCH+KK2drGJ+9Vx
vo/3sAkfTL22zBq6Eed5aum6WHgndCPexrzHnHQj/vb5slr5ZR7QjfiPFOeu
M2xf6Ea8NPfwsaS1QdCNeNnlojFTJCKgG3GdWW9uWbAvQjfi2z85FS88lADd
iAeIhj4XfXYVulH/5DtnbXXDmEboRlwnMCV8xgoJ6EbcZvnoB8M3TIIOxE2Z
94yTDsRnfX/+7NUGH+iA55DlR3v9TjwNHYjP5k84pXr2LNpLfImb9clw6wS0
F+8vNU9qy52XgvYSj91m6lRqlob24vmWbRn9fec/oL3En52a25hlMBLtxfvA
p6gWrlwwA+0lvpV53ze1l3jYuTPHjwwNQHuJF01p916eHIr2ovwdLaVWG6Lh
J42TG34Zq98r4EO9xMOZ919TvXju4oRLddFbwlEOjfP5t82W20SpoRzip5j3
O1M5xI81XF8rLpEK/4nPdbTc+3pFFvwnvjpodqqu5l3Ui/voyx2eLOc3RL3E
DZn3HVO9xNdvvRom9KkU9RJfMGbSYYmH1aiXuNRuh9kyC1+gXjzfrEKwXN3b
lk3xJW6+9/TkCecD4A/xBcx7gckf4myHq4FhGR/gD55r6Gco1e78Df4Q7y1M
j44a+QP+4L20TiFSNvc94A+egxTZLsazPAn5Rvxl3MTZHvb34SfxTua9uuQn
8Z93eQVPZgrok594f+5OPjM9uaH65Cfxoieym0/7D9en44X4Q5vRxV1O4zHf
oPn525WRGg4HIuA/8cQp3zJCeR/Af+KKjV+ul39/Bv+Jr2DeV0v+E08Tlxfd
q6AE//F8F1sFjfrtavCfuIfGh8XHv2jCT5r3nh+p/3pANxV+Ejd+FF1afLYO
fhKPcywZfaf8K/wk/oh53yv5yT2vJj+5OfnJzclPmpcuuJizu+lzPvwkvmEt
y1Ppdjv8xPuit+3i0fPh1yc/uee35Cc3Jz+5Ofn51/NYmHzg5uQ/zVfT0uv2
qL6qg//Ej38MzFpfNgD/ie/7plV1InWkPs0/uee9NP5ycxp/uTnpwM1Jh7/e
i8rowM1JB25O4y83p/GIm9N4xM1JN/pcLcSvfdo4j0X+997+d743m2ue7MHY
ZwQkhU+0tEX/M5S5vnNy//z6fRN2ov8ZPXHYm8XBpawLsx9cGCe2F/3PqGnl
227Zv2NV1HfVSy95inqrmHlUD9d8T5axv1zbfH0BvxPqXcfEWWcZq4mlewT1
RlWU3jIJbmZZ1E6rPLD+GOr9ue7TiFv2HazpCeVhDcdrMc7OYK4TmfQF/Vob
IoQ8oc9e/9ReC5uxOB5XMPOWVq75VTdT/rvA1QuGb3eHn9pM+XpxOW7D1h+H
n/uY8q+OSji+81Ag/GxW+uYQrNbDCp0QHyP+8CX8pOtWWadbvdo0xOHn+C9f
IxuyuliT5j6KilPThJ/zmfmGMdf85w1TftuBjEf11d7w04sp30pzonJ6xyn4
qcqUL3PQ+mNBfCj8LG3qrrZv+M1yjhl/IHBNK/yk61mNY44dMsqXgZ9SN7t+
Z9n3so4m33pQ/Gwq/BzPzDdsueYtxUz5966emFum5w8/dzPlDynUTWnYEwI/
hzLlD/UXPhqRcB5+rrPoO6dWzMNujhp4PixqAPnmR89n5pq3WDH2i3/O7pgQ
F4ZyKtIHTILj+dkvXsw0dJyvAv/p05dr3lLO2Af59undVb4G/y8y14lW5jZa
qQqmcfJBceBV1mc+tneQWN6baZmo15ApT14p/WDz6QWoz4GZb+hzzVvoU0+6
75pdezHqlWWuN22MCrrs+r4M9ba68QaqFQuyeYd0r+tYUYl6c5wFku3X/TOv
+P1oyTVnznlZGzOvmM81P7nN2M9eVer2YfR71Ivz6Zc1cw94taNeq9f8esHx
IuwvD1a87y/9gnr/vU40lO1xO3fk6QduqHcDMx9o55pvaDH2o0TLJK/d50O/
ysNczxK7eE6j3k0I/Sra/abr3LqDopzxeo7oEJPh/8wf4vaaP1EJQ71VzPi+
lGueEMfYP0k/8EjdQRH1OjLXxa4FH73iGjkG9RrEilywXyfO9vCYahU3dCyn
H34quKGhR5Jtvdze5tX8lL/G/btc434AY889jjhx7Qegejd4CibZR0r+1f8b
9wvNDLYdzj5bucj3yK4HXPO6v8dxI8aeu166rsddr1yakLua6N/jNZ+2yDCT
qhHsu4ply/qH13Dmac3Clg3OI9gBtaO9r52Q+n+Op1QOtz8fufZZkT9VTPnE
qb+SZa4HZjH3P5I/Dgn8ymFqD1gfhJfmSft1s2iesJ/hIp53o+d2jcH61UIa
7xw9DH9VauD8XZbu+146oDHRdz505uGRa/0/6y08PGfyFvooY/0qiNHJVfbu
PbvwpcjzmqNtrocaEln9Ow+4/5GfjuNKj/F/XbqIRNLmpcjvc4yfWcH3FD8s
3ITz93nMvoNw5v3dxF0ZfpfhNK+Yz5RjqeKm35i7H/wQ0163pO8PDM674vw3
8BFzH9XqNBm+OfvAZzM6xPS/LdhV64Pz4hVH/m1X07AMp9P3toLfZHTY7BjV
Y5JyBvO6r8y+kRTmfjSKl+3rUIls+zes9DLdKwLnRyAumxn+w8XI7PiR+eCJ
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
7mS7vRpfcvgdRS12uadbEMjnovwwU/MF5Vy1flzgozPGH3Xfp90Xo57qVZfb
DN36k/WXEr+Xt3c6FPTL3aiNa5P12m79XuUCvKO1+wUpP+SQne/4oT9Yv67w
jNvNAvoVGHH9iXr+im6efMTHVLseFr+IRnEWoSumHdL+XvHHsJw+tnzU6EQ+
F+U7RN/WseltzPpPCb9sa5yzTtOQHH4sb19/b11xa1M+1xtxAE1t388oe4nP
hR/FwOb79XftvsbnovzoxYNscss1YP3eKj8B+nGp/BPYr2Rdt7Tg4dJmn45x
nQOeJes9lIfebI3n5awNAi+SB0tcQ6negUODxt8iR7xJ89J9xuypd5f1M8+w
ym8Z7+vn+66FrpEzz7Wi5J7CQO5HwFfKfUSUxJ+CO8r5eX+5L6AOhqzHHBfs
7uY9Yr32/Fmee7DG9oAHnzaRV5H5bcyevusSxkfxfMwSee0k7yTPOYVbqPgr
+b2WKj/qf+V9lg/4evzF++3kI2R9eCTAO/zEoZ3kiTifuP6kdYvCWPYT2PNC
ypO5t9PLFPNn/qzyZ8a8+m3GtLqzB3myHpT33/UubH5W02J+uTNUfrmYx55l
3a4wOXQF60F5r4ItoRHve7I85p8zkeMHeuho/fbhr9Ktmd7wX13iO4GXlri8
g6q4QpQvs3r65qSZtzuBT5Lvu7VLysFuu57z+4jvfp0f4XW/X9HGG6Oev0JM
/hM/2F/KbwtzGPktwZzzyVxZJ6w+V+uPncc7aO9/Uc/Uh4fKTWlM3Sf1eRe4
+vwEv/e9jK+9EpcHeyJ+J+1XQ7s/DR6RR8g9ZqcleR+yLTPIGcfQYLjV0BrP
Oe6wL+8t8REohzj0bXXnd508VRvPBb7GL3+uVfBsciPZN9lEf//woqw23gfr
ECuzdp9NbvuQO8i6pehkUUVfv3lsd9w/Hpf8Yur5YYRqfkD99qUjo332tCan
fnLN2F1Ze/7i78I+K32drvlbnwnkKJ+zs8eDzt9H8T3dpHypSo//XtjCjxz7
OJO7nkez7y9i/2kq98LjJe4ePELqL2r9e75CPcyPtmPe0qbll2l1fuR31bh2
pfv/rDa08ediN/skd7uY7sGcT55JO76SOBRw/K6ukmcK84af1D87rt32vL2R
5Cg/KfrFkCZx2nicQHnPU3K/DG4tvzdTdV8/WOx2u4rTrIupR8hXyXMv1jh7
5b7XftazSup/oLq/biHzZ13J0wTeWLiOiqeLHQp3/s7fRL8g5COVvE4855F2
8LDY8PWKxTGu99zR7rpNHL3WnCPPl3afnj0oyGVkEvkC+V2XozsYeI8/Tu4s
7fU1qcfYNJ+T7M+4z60j+ZXU8/NX1fyM8jvaZkWcbziA/Rb6CfP6V9lauc9S
cpQ3slkw/3Ev7bjDft9x1uo76Rs3kc+Q84HLXde1OekYwvdhnlXJv6Oe/2ep
5n+Ub1b1x4iOkbP5PtjvR200WmOSor1fRvmqyT+7fP0QxvpxDmYh+WXU8QhL
JB4BHPdEjSTfitp/fof4z2M+hF71mdoFU2f3i+I8ibwexr3P7CzM1urvYZw6
SF4P/F6OX5fsLh83ddHqMwiPkfwaGF/gkU5+3WbO3M33xH29m+SnQP3gvT3G
fZncYSzL41wxRvJKoDx4nRahTyYe8CfHPeasy+veGRVo409bybnERP/Oo7ft
tVB9j8orzzxXnG65wox8r5wnqL9fDnL+oObBKl0FcDeV3zh+1wdVHDraBTrl
Hh8uLPK/fY0c+QiOhto2yRmk1d+BXkpWheXNdL5nlvi9Q/+HP0/fYYuijAO9
2U9wjteu5qUtQ7/mU0+S+d1U8XrgM24m65n30u4XcC43YVjUizou2nNInJvZ
Ze60qvumI9sF7fXCeVLC2sEVabdzOL/q+yZWZ0RZ8sFy3lWvs9GJsLRSXM/j
fOzdW2fP0e+HFRtHvjKOUB7nWvozPHIaB/gUG0cxqnGE86hbu2ssHLltnZbL
eVHHgBTTwR+1foDM76N3emfu+yRy5r/dHDffzesO7WAi68MGmdb9Nzob8/fO
k/3pr/v3Wp2vWE27XpJ6XoiOvZq/LIFnCoe/Hc7z/cal7fZ62pjn/8fEDqGn
Ap2t+lryfQJlP3vm9IgJh8tZaf57/26s3BS9EdSjPs9Hv8S9zEMb51U3xzfn
PUV3la4y+ltdu8f5C5Zrxx3jIN68y/trYfF7kM2hGUsi3hS/h7Xu5bt/dH7x
+4WxW3xqFvapWOz+xVFndt/s5OJ6KYWVPfISRhoV22+amUT/sTzbuNjvdVrU
465FlEmxex+1XnFJ71PS+5dkn5LsWZJ9SvpdJdmhpPf//7VDSe2IfQXGTe/P
3wMOem9kXnJ+P3uHe7eZursj+jH4+l1NVxna7uT+BN+Hzwva+DXPPsTy4Osb
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
F3VOTcpt/lgZL+Oa8ZGHI5vOa5hL3WHwgLUGezz++kp9W/CsSd+69YjT00Af
FvzJ49gFy7obanRFHxb88tEW80/lGGmgrwp+tunp1VWGVtdAXxX8ltdnn5RH
Zhroe4L3nh/bz+VWfQ30PcHHZ89ZPtLQQgM9SvCejVvaXi/XVAM9SvCwTXty
h+2w0kA/UX3OBv0+NYfenJpDH03NoY+m5tDnUnPoc6k59J2pu/A4t/ztCWU1
0BkBr++c8MqxW3UN/JaoH1Cp56y0WAsN9E/V52PQP1Vz6HWqOXQk1Rz6hmoO
3T01hx6cmkOPTM2hR6bm0LOmbv3297/aW9TWQD+FeiFdq+R1c7LSwL9Kfa6V
Jv5Jat5E1iFqDj0FNa8s6xA1j5V9rpqvlX2umkP/Ts2hs6bm0PlinrqPs75v
NwmjDhd43uk1D96lPqMOFPjlhoG3yjpUoY4S8zdmbrg9OsuA58bgC/N/BO4e
3ZT3qeA9XddvM7Stx/N28Ll2ZjYrWnWi/g741TPNrgw924r3FOApTz4OOd+k
F/1awPcljt7yqktnbX5B4eVMBxbc3zaE903M85N5eK5ZoQfvm8DbxHnsC+rs
xfsm8Fe2P3vkNJrD+ybwTQ83htTr5cvzGfAKVqNdlhgG8r6JcSfDXB+VcQnm
+Qz33Usv7krZEcZ7PewrbZq97jAp+a42D6vwzpoYr8+T9akjBp4//vCOgM45
bEdw6zJGZcqeNmc7glcxb1XhcT9TtiPr7xI+cM2JDmxHnluON7/jfakF25H+
aGnrR/dY2ovtCJ7+1+u0gw5ObEfwT64DB7bwd2M7gufomUzdcsOV7QjuPNIt
J6byRLYj+MdxfXItVs1iO4KffzouTO/5YrYj+Ik1p2tl7lvOdgSv6bK+wYZv
wWxH+ne//xTcP3wD2xF86I+EhI+F29he2OfW0fW5f9rlsTY/rvA+7uOuZT3W
6sdRn6PN8Xctzn5ne4G3q/a1drMsK7YXeM42s/TWbeqwvRhP2bf9jAVbHNle
4LFJi+oPD2/H9gLfEWPTPG3/ALYX4+cqrI38eKYX2wt8/9+jyjvlebBdmDct
ya2c8fQZbBfwjX166tl1XMR2AT/UKHL9Nu/lbBfqN/cwfL90yjq2C/iFvRsW
+/7YyHahf/2dBtVPjYxmu4CPO/3u9Jfg3bQzdT0vTpuzrLM+7Qk+IWdr9Rud
LGk3+nscj7cas9iJ9mH5JZYGD2IHs9+Cn3Vzmr7MfiJ1kej/0KpytTYWPoyv
Br/l+KZCu3VLtfovyC9UEOa0q9Zara4KdDvy3p2fu26DVndDeHiDGO8vTaL5
u7Dv7vBq/J2XNq34u8B9/frc+ZanHaf0c2hp1W3QxFH8XeCGHc6bOo+Zzt8F
/m3dnbP3eyzm7wLfkTfTzLPqCv4u+ks0H/Oj6tJQ/i7wr35JLZZdj+TvAr/x
NNO2tOMuxpODTwiuEtTf9iDPnZgnofy8xjmGh3iPQPv0+llxRZvDjD9HPX0r
2Fed0iOB51QoP3lzA8ueIQm8d6A+4qqCa6v1jjFeHfVUuFB78q+Jp6mniXOM
wfszw9MOvuB3FnxMQJsh4VEN2F7gtivNYs6e6sr2YhxDN4PKlmXc2V7gtxOn
fmk2cDrbi7plWS3skt2WsL3AE0wDghc0WMX2Ak/616BUp8hwthfjzxL3lfFX
otle4A0bxzvn2MeyvcDzc+4ZlHlymO0FHrGrZeiX9cdpf/CHsZE7Wvqeoz3p
j/G339mtxy/TnjgvCi2bXfbuWm0ecfDLcr8DO4N7uVycE3HFgfe2jHuQex/Y
H9xtzCfbY3NGc14Fbyj3QWgX8Pm5424EzPLhvApeSe6J0F7U8wiKHx5SKpDz
KvPsyf0R2hH866hZKfM3hHG+ZT5D5B+U9gUvU9T8TqUb0ZyHmTdA7qHQ7uA9
n/zYPGHVPs7PvBeTczn0B/D0rLY9bPsf5bxNXXa5t0I/AW9lGdSy6/PTnM/B
jeQ+C/0H/Lbo0anvuc7JPRf6FXU4hlSzOnDqGud/8PFy/4X+xnzp+rqzR4Xc
YX8Df7V93PMeh9LY33BO+LDZvu+jLOuyv4F7O7RIfzVghlYfFvm3g8aEv+88
iv1Nmwejpf6YnyvY38DX22y+eGPNEvY3nk++W1z2nzVb2d/AB96JbHd1cSj7
G3iqz+ycNov3sb+BOzdedGbFvBj2N/Ce5ptmJxseY38DD6nktnvlz8Psb4wb
q5eR1KDoPPsb+J1+gydmGCSxvzEvdOSQO1cirrG/gXf5MiYzUTdZm8ca+VSj
h9TZ9fIu+xv4hZtX9315dIv9jXGQtZU9a/P+YX+jrptFr64HOqSxv1E/zLPo
Y9CI5+xvvK8c0Gx3UJ0M9jfw5Ig+W2adfM3+Bj4h8+K26e8z2a/Ax6/o+yz2
1jtlrexPmQ82odeb9o6l6WcC3npokEHbjNHsV+CDlxW03HJgNfsVeM9hrnrX
Ki1gvwKvMsAmPz5uJ/sV+M1azd70O7KZ/Qr89q/HLVsHH2O/Ar9RTXHtNf4Q
+xW48t47/9H5y+xXzMt62KP0bsdz7FfgYbG1zp3+8y77FfVlHXu1dxp5g/0K
/PuMJkuLKqWzX4GnR28qCj6Wxn4FXinxkO2nrS/Zr8CL7Fc1bFvzOfsVeIS+
U5lOph/Yr8Dj91Xamb3xLfsV+DLTH2cuPP7CfgU+c31BaC3DXPYr5vHo3P3h
gok/2K/4/joH2i3Lz2O/An/gv2FDRDNdDfoV43KWLT+c3fIn+xXP+c+vDvWe
rcf+g/PqlW3/2Prx4nz2H/Dj7omdnRx2sv+AB1ivb3OiTij7D/ijvg28Rxad
Yf8BTzUdM32p2RFynE96y7k0+hXP59PK6M+9cZv9ivm9TV3eHvW8Qo56Osl5
Nfob3/9bm12nP2ewv4G3ztgeGdrkATn9FeUcm/FOUr5917WlXh95x34I7pqx
OCq60UtynqvL+Tb6J/MRlX1isP7JF/ZPcPN3RUfDauSQo55MOfdGv0X55PaT
7lyoU8R+C+6cbnW1pk0+OfPtyHk49S6lfIVaj152XKyvQX9m3GS1bvknhuqS
o572ck6Ofs489n7Ptlz8WF6Dfg7uWRB55oxeGXLmB5Pzc/R/lM8PKvd4b5CJ
Bv0f3MF44t7F5kbkPJ+X83aMC5S3O/XNdqJJdY4Lxn06/DNgirUpOeoZK+fw
GC8o33P+3NODO9bUoP/jvDR95sWx+nbn2J/BG49L79ToRgb7J/hGz5glqY8+
s7+Bl9mZFKAXXUqD/gPeenBdvz9tjDToD/Q7rVuzvs6DGhrGHwp/VCmt7UwP
c7YXz6Xbttxa5XpT2k193gs7FPP/FDuoOdYzOBf9GTD8R62T6zg/MJ71cas2
8afv0j7My7T835qul3JpH+pV6zp13nHOQAP7gPfc6DTWZ6Ep7cP8Kg8Dazkf
qE/7gH9cZ907MNWa9lGf38I+/2//z/LFOOym5rBbMf9PsZuaw244R7UZ9sLN
oO8O2o26aHUXVOlm+ZJ2A89scfTj19p6GtiN+W/3ehh9m1CNdgP3LqzeP7Ru
I9pNfX4Lu6k57KbmsNv/28+zfDEOu6k57KbmsJuaw+8dvGP+xq22tnF2WG9j
veT25NbcW1NzuN7GuY1p93VrHDwPMN6M/mYu3S90af6B63x8H8Ofx853yzXQ
wG+EOmon9w0vcIthvdQPE503+HuQp88L6d3OnP4e4Etq2yccjm1Dvw76o84P
eOfwqosCHTqcB45adGJ5qyrnqEMH7ikcOnE85xS9OOSpBa981f1V3LhaShsV
ry4ceU/B+wQdX/9uQOtivL9wxJ2CG270z/IM61aMGwlHfCl4mW2h7ZJmDi7G
ywmHvh7sff2k6YlL48/aT1Lt34/I/v2Gah+9WPbRiar9soHsl6NU++I82ReP
kOeinzT2bFEQ28pK8UN8uvCtoudmKe0ObvFXq4Cx58OUKtLu9Hu8E6/3aMRO
6rBQr/3ynsEtQ+OVMtK+6IcWtfyvDjTrpzRWcQ/hE3E+LtxcdOGspX25Tr5j
ZtpgcpRip+KPhC+R9gXfPTjIa39mvBKo4gnCPaV9wRu1ub+jVLkLygwVtxUO
vRjwz9uD36Qn3qReDPVEd/zmtcX++P7utPJs1HnAGKWh+JeCf7rx962mvaOV
IvEvBf+WvXXWtTMnlfrSLuDRucaFtTZfVV7L/R344ktnetx6kqpUkPYCnz/u
x7gfZx4qt+VeD1z/5bgljUqlU78GvMeXuEE72r6ifg3XIVW/muWteKNAHw3j
PaPL1FoWvteppwb+vXpK9/lDH9t3Ejvg/OpIh12atfu+2COPOLgyOKV0eD9T
ZZzUA95v7uerlkfrMi81uEmVI8khe+yUMuKHA55u1zCyqo+jAj9Pniteeux4
0n+gMhV5iBFv5bi/yCpwmAIdFvA0/8w2a0p7Ug8F3OJHwtfru+dSDwW8QULW
qRZjF9KfDTxoyI+RN7YGMa8VxssQ0SuLkfNVcBNNUXonj0+KiSruqYXEPWWo
4p6+S9zTEFXc00KJe3JUxT1lS9yTtSruabHEPU3BPRz8B0SnK1jaC7ztoupl
t3SLUyKkXcAdmiT1qxF5Tzku9gePCDYYYdXxvbJd7AzuNXtR95qphdQZAV85
raB8pbrlNND7AG8qel/tZD7B+uTlhIUnP6bsUfLz/ssbCkced+rvDhm0s+vT
ZKXiwv/yycKRFxzcqkZNi+89s5RhKj5dOPJMc123bMqVBZ66muoqvlE48qCA
98nMWdLqm7Gm1Nv/ck/h0EkBV3Qz78eWqavJVvH+wpFnl/nlThg0yDSy1LxX
8ffCWy78rZeE9Um5s+lJX69MUc6Lvw14QNGIUL3CUCXP8ve4Bj+YF71prOaI
0kf6CfjqdhnXDU3uKytkXDN/nffSdrZbnioLpP+Af0+8XOuAQ4FiJuMafKpl
5Fcddx3NHulX4OOPpUduH2ys8ZFxDV47bmDm4AdVNOulvzFvYew530l29TUL
pb+p12nQfykW1yPjuth6T8YpdQRvXP+j6eSL1F+jP6R872rL/M+4zgqper1u
tFQKZP4Hf5BqV7V52b6MAwKPavDzi2mhh9JQvgvgNvve70xaNYrxQbxfeO38
vuPS2dR7AjfcHlJ609oZ1EsCd10wdPv8zUupl8R4zxaudeK7+FKPhnpLQ/61
Sp0eTD0a6gJ22L7czGs1/XLBz7esNcJ70Qbm5eU86ajnFLJoB+OPwA/urZL5
y2Y/42iYd07006CXSv08o8YO188dUbqIPxL4Fde+by/3i2e8EvN3jdjou+TL
Sfrrcp4fnn9/sfkJxjGB12nsYbSq4Dzv0ahHcqRrT9+H5xTolzEvwakudXuF
zaDeGe7FzlcLee8/5zZ1AFDPjlUDUuvvzO6oo1P99f8dp/y/6aWjKto5q9aN
AbJuvC/PxXdk1rcLNjYrXtgPkfELPjxgq49db1P6V4A7vG7Xdf20z8rNS//1
+x2Y/Nvv957MD1gPPEguO2nb+NqM/+X5VcWrmbvHzeS+Rr3vRnnwhKiwGmP6
BLK8er+J8swTZfij8W3DCDvowWHc3VxkYLDeYiB1YOmH88PO8p+TK6hvCF7m
qNnqBJcCxhdQj3NxZmb5xnrKe1X8xQSJv/CW+Q3t6/5eJ+ZGyP/sJ+R90I4v
u14z+mkWZw+9OfCJDvVquujco24O+Mer7fZ4dDFToGdEndHAgHK2mQrjO8AH
nDK+63pnsPJDviPgbwaW31Gh0WTev4K3cq1Tofek+YwH4fpnV0vlUO1A6rRy
fbW8c67PyfXUaQWfebJl4/PXQhn/wvEefMAwxWwr/e3BN5ceWGtK/jbqlnKc
us3++DJyJ3VLweMsPrfNX7mbeqPUAd2Qe3VlQRz1RsEXdLdfOOvsIeqEgpdO
Lxx7dHmCUu7kf+PgsiQO7q3qPnS83Ic+Ut2fXpf709Oq+9CBch+KdgS3H9TP
rMChrTJIda8aLfeqKar93WzZ36HdGac2JiHxddIwRaO6b20s963oD+BXretv
rGU4k3p2vE+U+9YI1T4xR/aJjqp7UgO5J0U+e/AVcq96QnVP2lXuSWer7lW9
5V7VWnVP+o/cky6TccT8nxON6x51cFEGyjoBPOfF0WrtfNyUcBm/4NPrRB+u
sXWWoiPjl/ePO/c/Pma4kO0C/v1Os4zv+gOURFk/cJ602m9+Sm+14inrB3CN
k4O19ZL1bBeet6xbOrqO1xwlStYVjKc4/aVGvMk2pT/03IQHiH4a5lvMqx1G
7IstF1pe80QVT3Fb4ilw/gPu9ixhUaln7ZVRqv2yieyXHVXxFxYSf+Gs4s2F
V1DFZcRJXIaRih8X7iHthfn/z9nz4woMlmnzqgqvY1DjYLtK/f+n/2x8/X9/
F/63OxnNsRumihewlngB/C7UExu9tukB963KTdV+57bsd+KkHVHe6HmIz8CO
5/n+4ONO+DffmnJBabX49/yM786Pif2NZxY58P3Bg9ptX9PRZLGyRr6D+O5E
l25j/u3IBGXN5f/y6mV/c7w/5p+f/8asDAxroUDvjPlM0mbYLP6rN8+jOI95
bXeMNB/Dcyfqd0765lzv80yeL4HvvRs67KW7nwKdMvBL9stjF5quVaBTxvVJ
aLNXrns3KtAXA5/aVzPPKXo746yZ36N5q65hFfcp0AujfrhJqK25/hEFemHg
65I6G2bqn2ScNXUKpzt72I49XyzeNl7ibZEHGuUnB+tPGrT0Cv2LwBv3m7R8
Q91kxk9Rj8VqVGhIajLtj/pdRZcP9ge3HfvkSP3C8bQ/11Fvell8WryA9qdf
zfbk7k9NV9H+nLf3vzzXb8dGPpfxtta6TY+3mcjngm/yrP3xUPoyPpf3+DdG
PW3ZbKNiqIq3mi/rLnCewzgFfDy42pJ5r8HtEzduv+Rfl7oE4Ffbt11geLC2
BvVgHMXHGETvXKhh/ej/k8dNtqqzawDvT7lesrjaIrvCN+r5Yl3kJ/GqGEfg
a86tbxXTI4brXsYJHq3f8NzeMx2xfgPv9fTi+or7F7Ie8NGfYl8fP3qC+o8c
LyfLrs1wOUH9TfBOSzWNGx4LYRwr/cQ2v245ZH6kAh09rouqN9I/v2qXAr08
8PqNQzpnVz8k8bzafj6q7zuPOn0S6deK/pAm6wq8J/iSjik6Vp0fMh822n2/
xZWxw/Z0ZXnw14U7ppadm8e8O7yvrzBQ035nGc1qlR+FpfhRZKviqkZKXJWh
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

   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxNnWfYFMXT9Wd3ZnfiLSrmiIoYQAwY/2YwAipiDiiCIgYwgRlFQAUTomDC
LCIC5pzFnMWcc8KEKAYw8Z7ffdrreT/s1bW9PT09Mz3dVadO1a7U76jeg+tR
FF2fR1GsctEsim6oRdHPzSj6oBFFu6vuNJUDiihaWfWPqt0hkleS/LDkD/Xb
Hmpzusr9dUw3yWukUbSxOvtDbQ5T20P1WUXy42q/iernSz5cdR/pmD3VfrjK
Oar/WwMp9Plax7+kNjurzcWqX0F16+h7rLK9yr10TCJ5Vcl7S/5MbT7VZ66+
P5RE0UaSf5PcX+PZQb+foP7v1HVdr99eUflbGUUXqc04lbP1OVvyTqqvqVxM
/XbUseM11q907Noaw/eq/0d1R0peVu3/VX1nlT/qmD/V52c6z/tq854+D6rd
Wmp3s8qpatNWv9fU51GqO7mKonn6vqrKBapbWJ811O58HbeU5LUkL6Xf65KP
VnseyKKS11T9QqqPJA9W/bmqX0JyJ9X/KHmBykGqL/V5SmNZoyWKXtXYPtQx
r6mcoDbt1H5dtbu39LmGq+2tpe/3SZJXU9um5KGSe6m+knyy5LUlryr5bMmv
6Z7spT6ek/y65L0lvyD5UvW/stqsp+/nqZ9VJHeRvHzm8Q9Tm3XUT0fJ5xe+
lyvq01uX9L6ezW4qhzHXSt+TU9Wmt+SFJJ9C//psIPkV1R2qe7eG5HNVN0Dy
apLHSL5fvy0j+QzJnTSGTPKJkt/QOPfRuV6S/ILkHpLvkvyc5B0l3yb5ecnd
Jd8h+UH1s5yOHSH5c43pGI3tTJXvqM2BavO26vcuff9Pl7yu5LUkj5V8lT5b
qs0wtb1J8naqf0u/71V6Xp2mumUkfy15X5U36vs2kl+XvJ4+a0sep7ob9Okq
eabqhlZ+dqNUN1GfLdT/qer/TN3zhyUv0Pge4HnompdT24/127Wq+yZc43DJ
0yU/K3mk5sbXarO/3q/tdewZ+r6LjttZn611jh1VbqmyG/NE7U7R78/ouHsq
v0tPSL5abZ7UuZ/QZ3fJu+nTjTmkPvfTcVeo3Yo8M8ltNP52ki+TvDD3QW33
1GdbtZ+mPl/SfV1X5VOaJ9+q7h318abOcaX6+EH1t+jzitp0UXmTPo9LXkvl
02pznK7rEvV9Z+V150HVtZF8r/pfsfKzHqE2t6vNZPU7jPVH7W7Xb3uoXFrf
f9d5e0SWB6jNTirP0W+3qc1uKpfS991S3/Pj9f03te8euZ45c4bkW9X/HWq/
n36/X3W7p54DJ+r7r2q/o9osqe97qn4rlSerfm/JW/McJd+qY3dtus3czOvV
EpJvUF//SD5cZVNtntf9vk738BIdezRzmPVZv92g8if9fp8+3+j+bKDyfdVf
p/rZkqfr87Lq11M5hXsnuXPl+Xy5+n+DtUrfn1H92irfY/7o2B8lfyn5CN5j
yak+d2h8HbS2fKT6a3Tslzr2HI3nULWZomM+ZH6wHqv+U8nTVfcz59dxH4S1
9xPVT1X9HNUfrs+xzH/mi8pj1M8tOn6WrvNItf9G5WCV59Y9jsVZ+1QmrKuS
x0iu824xDvYHyZer7bGSb1U/F2tsgyXfrvONl3wU77jksWozSPLNajNJ/b+o
e/uCPhNVfxxrguqnsPZIvl/y+ZKP5BolH6v2k5jv+n6V+hxCG/U5metTHy/r
c6PqT1X9Y6qfylzUvV1H5WTWVNXfF3ktHavyadYMteso+SC1u0X1udoczXsQ
+13ZlrVS/U+M/a4NYv1Q3Sgds5Pqr4j9/o7U/V2S91fnHy55ccldJa+U+b3e
T/ISar+4Pkvr+wmp18ZLdP6hqdf28ZJP1m8HsS+p/xvV94n63pd3IPWaP0Ft
9lEfe/Nhb6v73T9T7Y9Tmz0lX6Q2u8V+r/fX99NTr59Xq74d76g+y+u3lH1H
n7bscyrX0GclyctpzO1VdtdxM3K/FzWV49XnxnW/k5dI/l/d79sFOu78xO9V
bx2zucohOteyqltGn2XRF1S259yS5+rYL/QpJdfZo/VZRPI/6CH6tJE8Dx1G
nxbJq+WeB19rjp1QeN1IVLe0xpkzBuZC4fUhVv1lOm6zut/5tTPP89PUpr/K
PbgfardQ7nExPvadFVQupnlSqN0f+r29xt8m933ifsWq/0X1y6v+TPpSP9dL
LiXPU/2qkrfR8dtLjphHqv9d4sqqn6G2v0peXJ8emfWrRfR725Qbq/mpNk+q
/I31Bz0w9d6ytuqfV/2fkpfVp1L9fJUdVP+C6v+SvBzrlMbXT58hGuuTude9
uso96l5Xj9f3fqn33FE69iHdq/3020e67qt1r3ase0/qqzY7qByhNgepbnfJ
p+nYR9S+j75/ovbXq/2BknfTbztKniV5Z8kHp97fz9Kx/VPv6WdKflptntJn
F31/S/0cX/facpXqtpe8neoP0NivjT2mQTq2N3OKOazvPSUP1RjW1H3bh7VA
v1+la5uruq7qb1d930xtjlP7XmqzDuNR3aM139uVVLzIXqfykEZYDyQfrPJx
/V7TZ+XIe0hXlaul3vc24r6iFxVuc0TuvY+5fTm6h9qvojZNte8iub3kTPLr
7L01n+91Hb8V6xa6to6po8eqjw3UflXV79vwPryB5IEN7xUbSj5M5RRsAnRL
lV+GPrfWb3frXn2oe/Wxvr+iTwtzXPU35R4n452c+9p7S95a5+rE81eft6q+
UP0xrG+55/NWarO52qwpua/abIoOK/lAyRPZB3Q/q5p1R3TIp/TsJkjuIvkl
yTPRj2u+p6/pmC1VHtOwLoVO9bza3KZzlWpzbG7dER1yhuov5j5KfqG0Hok+
+Zjk3fQc15PcS/dzW41nPd4Lyfcl1jG49h1Ubp+43Vs633ZqM5QSHSfxPEDv
baCjq1wk99rGGvd2w+/p8Sp3Uf8bSz5S8s817/+sd1dqDJ2ZfzpvVx1zTuzv
6Iqp5Jre9fVUf5bkDtwX9b8v767KjRLbNaurflPJoyWvyToleYzkTnXrrk2M
PvXzoOr/qtuGelPj2FbVQ1S+oc82rOsq92n6+a+q8fTVvVpObe/Wuf5SuYI+
u+q3d9VuZ5WnqDwQe0n1d+bWuTZV/VHMNZ231HkTnXfh3Osx6zJ24fL69GIv
LCzfo9+/Rn+s+d3YXv10UTlA/bzHvZN8qsodVb++5EMb1qc2kTyoYT3uf5IH
S57FmlezjTpT/V6s375DBylsTzIG7JoL9fuzqltEus76egaD1OYSjXmg6tvp
90sz77nDdPw5ie0ffhuT2NY6VPL40uWKufcd6rG/1gztsZXYy9nTB7HW61w9
2Scq77fsu+epfiXVz9P9PqzyHs95j2RNV/0/qj9C9W11jv1Vtwu2mur3VD9D
VH+Qykmx99y+oU/28f0zn/e0pt+nVj2j5rWPNfCUyDYN6yNr4+Pqq6/k73Ov
06zXR6tNN5XX6HMEeozaHMozDe8cbVjPtw39D468fl8n+VTe7cwya+z24VxH
RV7XWd+HSb5I1zNA5Qq5bSnqWfMf07lu03Hf5l7LucZz0YVU3qDPyZIfwsbW
/TlS5V2qu0OfJn3p/lyucx+v+ltVdxtjVv1k9Ttd8pfofjXXY/9Pi13Pa9Jf
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
t+Z9GT/ZX02/k4s2PXfurxm3Rz9GB2Zdxx/BfviXxrVm6vWnZ9N6KroomHCv
4M/FrwsHrCs+n8q+ZHRnOKBnp8YZJvEO140ZgRe1+nYTc6VWSr2mdWua/49v
9+7ScQdLq03byvo0+jB6FvEL+KDxRRNzsRhrNNzO3Gsv+1j71Hs/egL2Bus9
fkDiBfAR4yvumHq93Ultlsy8trZLrQswt+FCPVoZQ/mfykcqYyibqFxG7ZrM
aR37MOu/6jdWuSzcCN4B1a8e1uTukt+vef1fU32unHrd3kb1H9bM2YPD90HN
/OSOkeNHfsImUZ/vVtaJj2dtUNlQm42b1lNYb+HP/ZL5fYGD905le+C4wroP
9wH+Fr6eJ7BnVXZtGGuHF7FG6bm4tdq/qXu0R2zM7U19P6BmHtTMgBWer/73
jI2zwTn+sDC+uYP6eK8wB2o71oPMfoR7Usd10Ba+0MSm9djDVd8HvCUxfrd9
wIzxuz+s9rvWzMt6rTDH+YLcmCEYCPzRXQJeCGfpUOyY2PhbRzDKzHE6G5bW
h29WH3sFfJTxvVJYfz1Pffaum6eNntqrbg72GZJnN4ylXQTnrm7sdXhkf+s0
lRvq2GNL41dw5lkbwM/Gqby8ab34sNS+y+mSN1L7pwrr31ur/aVN6/aHqs0T
hXX3LUuvc2By+JPBctHVOaa35J51878fL3zdm6v9bwE3+yIxLxNdgDVxo9LH
TlPbHWLzMOH+EuuDvo6uPqZpjGovjWHN2Hsc/pt7CmNY2AK/6nMvPg7d143q
tpewlc5uGrPaA95mYTwL2+STwu9499I+fnz9NZW/Febns1nOC/5c+Gy8N8Q1
XAo+qePvwc7WuVaJjftx/LW5/ek7qH171d9St8/7m4DhgOWc2zR+tY/Gs5/u
xUIBFx5YGfsi7mfDxH4E/CXgfvgF4GZ0YU2QfF1h/iTzihijVJ8Z6vevgLPh
B4DXcX9h3/cY9EDJT6rN3/i1YuPhXP+uiXFmzt1TcvfE54BXCy4PJt89tu8A
7jQ+6BtUt25ufIo5iF1LTBO/n5ObOzFV9RtInqP+Jkn+lPMUXj/gDOxV+F2H
V7wgs15JbCD8WtYJ9D30euyFLmEtebtmHf3fmu0NbA3Wtndqvu9DMuv8G9BH
sDf2bXrteT2sP0c3rJMehXKTG5OBG8M6+mZYS/crzMXFl71H4Tr40v9m1nmJ
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
1k0=
           "]], Polygon3DBox[CompressedData["
1:eJw1nHfgV+P7xs95j7Pep0RlJqHs7LJCIkkDDbLapbRFKUmUNmkoO+sbKntk
b7KyZZMtGWkQod/16nr//jifz3Of5znPOe8znue+r+u6n517DukwuBAEwbxy
EJT0f7ckCH7UjpEqN1I51LZ9MQjODYPgqjgIyrLryb5L9TfpmIF5EHRT3SWq
e0LlQyO1kb2b6s9S/UlpELyqci2V91H9sEoQPC77LrX/W/b+6q+L+puufUO1
ryh7B9l3yr5RxwSyt5Z9nYpzZU+TvYsu9DTZh6r9qTrfdjpfG9mjVN9L59tR
5U4qX6b+P1D7J2V/q2N+UrmT2m+r9idq34Vqc7b2zVf/R+s376zyJm2dVfeZ
6h7S8a/qHJ+obrn2lXXs3qo/We0vln226g6UfYbsXupzvOxE9s6yl6j+dvUx
XNczQOUJKn+h/haqzX0FX9NG7aul9vuo/Rwdv1R1q9R+iMpzVH5W7Yupr7WZ
7I9kZ/x+tX9U+/6n4w+X3Vf2QtlXq01J9/de9f+E7LpZEKzU8YPV32zVPaPj
m6h9N7W/XvWXad8vqh+q+rkqP6f6M3R8G9WfpH3bq1xD7XeX/bLaL9L5itp3
d8HPsI76L+j41iofpuM/1PGHyF4s+wgdV7uGrkH/D9LxdbTvD92/7jq+p+xD
tX+D2odqf4LqeqnuYdnfqZ8/1P8u2ne6zreF2u2h9ktlL5Y9T3ZTPcvd1eZM
lT9Rf6erfIqu9w319Y2OX8+zVPsuav+i6g9V+0NUf4Wu9xrZT6q/fVX/e+L3
/cTq712uY6fI3lHtT1X9IbI76Lq2Cf0bR6q//rnPdSvPWb/vL7XZQsdPVf2M
sn/v3apfJ7u+jv1B9Rt1Pdtr334q/6etrtpfy/NS+4Zqf4LsE1TfVXXH6vrO
Vnmsyo/rXO3URx3ZTdX+XL5R/YaLZS9Q/UuqH6zjP9PxufY10L72al9X5UPU
foDaD1CbrrJv573R9TbW/w5qf6r2DVP7tmpfW+Umat9f7Zur/zV8L6rL1X4X
tT9e7QdrXxvtq3DPZE/UMQ9zDbrew3W/Bqr+WZUH6Pi9VHeO+q2l45/XviYl
fwNPqzxM9furfgDfrerXqr/DVHeK7Ht0retlHyG7s+z7ZP+p9nN0/xZpX1Hl
63TOa2XfI/tPXW93PfPtVW6v8iVq/4fazCr4eyiovFjnfEPn28T3orZ91f/9
uv7vZec6x9uqb63rO1ZtblP7rmqzrepOVH8X535fnlD7//ieVXeDzn+j+r9P
9l98v6p/ueAxroGO30p9/qRyyv1SfTcVtlO5rcpj1d+3ajNf9hrZT8kepfrz
ZE+U/bXsgvpbpP4e077aaruC5y37Rtk/q21t9b9KZe0O2umYm9V+qa5vsuxd
+Zb0+0bL/kb257rW89TwAP22QTpue93vr2TfxLuvY5/U+V7T8cfq9x/OGKG6
sbJfUf3jOjZQ+5Zq00rFfWW/r/Ibqm+p9keo/dVqv1T2UbIHqc0LKk/SNrno
722M6i/ScUN0/Zer/npdw0zVz1L9+Spfr/46M7+ofl+176Tyz2pfU/Yeslep
PEhtphU892yp65mi46cwfqj+YvU/TfZU2Yfxzcjuwvyk9vvJPk3lV7Svn+wZ
Ov87uj9LZV+l8i/6/Y8xvuv45iUfP1N1ozin2k9Qm2t1jRfKHiB7PHOk7DfU
ZqDsmbLfU3/XqH6e7LsZ39Rna51zvK7nMfVXR+Ur1f+VRd+vcTr2J74rtd9d
9kqVf9S+8QW/E5+rvzfVvpWup5nq56nuCtnTi34+l8h+Tdu5Bf+Gd9V+g+y5
BY+5ZZVHa99wlSfpWr7R72usfd/K/pJvV/fvev2/Xu3v1b4NavOM+m+s8zVR
/1PU9tay3+312veDrn9/9Xer7Mf0259nftC+a3U9DdVHPZXv0/Ebi35mHVQ+
R+33Uvtu6mei2g9J/X0PlD1F9n/MwbI/lf2g7M95R3TsDdr3E9+ntj1V7qr6
y1X/Cc+k4PnqR9XN0zmu0fma63ovV90Wsl8s+J3dSfZzsg/StTdV/TTZ3XW+
24qeI/ZSebD6OLQ6Nk5W/6fL3kr2sbJflX2/jscRqqX2nfgWK36Wv/P+qu1n
un+/qu5rviHdk3tVv77oZ3qyyv3UZm/VdVd/k9RfQ7X5U/Y21TFlo/qeqra3
y16t8ofqb6XsiVyTylerj7n4IzrnBF3/YTo+Unl3/A3me9mx7D2q96hP6jJ1
E3S+W3T8qzp+nvY1VN1v6mNSwc9wvewfZN+s8lq1f1rtx8s+Sv1doH53YHzQ
8ecVPGcsV/srdE2TZc9h/leb2aqfU/QxHIv/M0b1V6r+AJWPTe17NFe5rvq7
SPb5sifrfN/qfCdoO0f2Cer3c+Z79XFpwWPSZ2r7oPrPdF/qaN9pFY/XD+h8
uIIt9WeV2l9e8G/4Qu130zX9FXiMZQ6Ypn4nqn42PqbqpsqeIHuW7DtkL9fx
Iwuefz/U8T211VO5g469FP9M5/yg6G+Gb2eNtilqfxvzjdo2Uh8bAs8RjOn9
dX2Pqv2P1Kuuh9rsoPLJqhun/h5Sf1vo92ytPrqovE7tD1d9R94d1R+jfZ11
L3upvoXKF+p8icpnqM2L6qu32jVSfalgf/cM2fVlb9R2nvo6Uvvigo85SuWe
qm+oumLB/svb6m+oymN4t3S+LSJf6xJd8zk6/k3VEwCMVv0c1R+Ojy870naE
ysczj6u/77U1kn2C7C1V/pF3UvbzOr5nwb77bB2/RPapsvvLnin7UdmnyT5X
9izZAyPP//W1b7LO3y+yv7CV7ItkVyLf+0W6vj6y28jeSvU/adtTfZwse2u+
x9Bz0sPqv5OOPUflq/CPI899d+KT6/iH9Bw+kD03tP/+kfb9V/IY96js+yP7
24yh8/CRZY8J7ePeIfvByP7xNbwzjNc69gLZtxA0qe8fZJ8ve77sf1VerDYP
qFzC39e5no3sr+GTE/PcF9kfx6fBX/+1+n1OV3murn9L1a9kvCXmwheN7I/d
pWOOU58dtdWU/SvvoOpOkp3jG+CPyz6lvHnaDn7RtrXseTruZ11Xc+1/V/09
r31jte9+fCreD76R0D4Mc/4iXc+JKndTeYY6vp4xSHZn2VNl3yj7CL5N2dMY
3/XODtK1vqB9x+h9raOTvxV539CK473BKr/E+636C2QPlf2R7O1Urlnxszlf
+y5SeXTF5Y9V3zb1+M5vuICYq+L4ZlroPs9TeUzFdcRo7VL7LyNkfyq7vezP
ZZ+pcnfdgy8qnoOZi+vIfoRr1zZQ7Z9Tm+Zqn8u+pOhrHEHsoO1kfAvZ4/k+
tQ1Xebnat1H7y2SPIp7Q1lblbfT7OySe89fK3lp2C9nDZI8kntJ2deg+Rqlc
O/V8yry6g7Y6sp/leojRVH+j7mVPXeu5Jfvwt2g7rWSf/BLepcj+XQNdz1TV
3aXfdwLjI9eg57OL+nue56PtRvU3X/VHqv50Pb/pqr+Z8Z/xRvYVud8V7jf3
r4bemaGJ4xbil/vVV0f10TXwHMlcWV/1lyYe4xjrRqm/33Wu37TdQ6xYcZnf
dJ3KJ2k7K/Ccydw5Wu3/ULlZ0fNnZ23d+LTU3wMqn6qte+A5gbnhFOKjwD4H
vgffGd/bOF3fWrVZV7Jvc5P2/aPy28RHJY8BD+KT6H61IT4qeE66XPaJxD8F
+0xXyu7At8Y3oGPnyD5NdnvZ01Q/V/bpsjvIvkL27bJ7h/YxZ8q+WnYX2Sfz
TcueFTnWasvzkb1Adt/QPuTssv0k/KVE+46I7DfgP6Syj4w8LzE/bdS2Z2Rc
A3zjH217R55nmG/+1ra77P0ixzpPho5//ye7T2ifcZbs/WUHsp8OHV+fqq2+
dv3LfKe6WyNjGX3xMVV3U2R8p6vsHrofE2S3ln1QwTHLL3wvJT+TCTxrbZeW
/Awnqrxa22UlP8PJ+Ir4w7KPUR8T9ez/kT1Ddn9+g8q/8o2W/I5drvIe+n5e
0nlr4uPL3kT8oPq9df79Ve4BrsT7of6O1rXdobZjS4752qj8BhiB7Pd5ZVV/
WeRY+wBiEmIy2ccxt8g+S23765r+lD1K5WvwVWSvlj0C7IHxTnZIfIAfLHuB
/l+k/m9jDlN5KJgI90bl61R/WeZ45PTE8c6XvL+ye+uYFWAh6rexrq2i44+J
7CfjLzPHnST75tT+xtKqf3eQ+rtXdRuYp/D3Uvs/r1T95QMy4w9gLRfJnpc6
Hn2+Gn8ep/rnVR/pmx4ve27q+ea5aryblz2+7q37vYXKi1P7m29V/eVVJdct
1W9Ite9N/a5Pte8WvleV39H2eclj3Fsq19cxX8herXNcp77KZWNfl3ANZc/B
zJ+bSp6br0kd375Qjed34p6p7mFtW6j8eOT5t6D6j9W+xJwdGmMCb2mc27/5
i3dB5XX6vzC0D0m8v19ufzzTcXeBP+b+XraSvVDlvur34MA+TiveDW01VX5b
Wx/VHSu7hspvaust+wAdU1J5W+ZO8Jiy8QswRny8IbKbBcYowTQGle3/gSmB
eRyYGy/dTscvVnlfMAy+f9l3qrxWbe5U/eqCY7g1shfI/q3g+H498WzBWOwN
uefT5wvGym4DX5N9V8FY4Xzen9zxxPY69m4cB9XfUTBWeVPu+enZgrG+W2Vv
IL7Wve+HD6Xy18R4JccYH6TGT1oQ+2jfeyo3TY3VnIP/VnH/kxh/8Gcqxq+o
w98idu1fcd1T+K+pMUOww37a11d1B2rfHeqml+wesqPMdfhjf6ncJDXWAwba
m/NpX++i7wn35qDUWDL7eqr+vcy+PxjccRXPZ0epvIfab50aQwALaF50/PFE
ZmwPjO/w6nxE3T5qv63a/5f62q6UvY6xQVufojEosKiDU2Pl7OtVMb5Xp+h7
yL0E0wDbAF//Wm2/03Z20THKhzp+gNoMkP2M7KNVd5a2NTxftd8/s3/C2Him
+vu04viLb5NvGPwXH4i5nDmd+Hiq7Em6nu8LxndxFvH78P+G6nk/Baai3bWY
kxl/U2PvXWWfLfuH1GVicmJzMAmwiWOKjm92AxNR+7O4Jtm7p77f/KazKsab
e+C76PhvMuPd3YvGuMC6vkl97HL9nh11PXumjv3BrLvq+L1SYwUc041YLfP1
wRG0lH08Plj1+j5W3UeZj2dfK9W9oz53jD2/3q2+3pJdF95B9p28z7K3if1N
3yX7Pcag2OPzvbLflV0/9nxzT2pMnhjs9MBY/Zuya8WeT28DL5B9fGz/7AKV
z8uNFdypd7yh7v1PuXFYfIS31f4N2XHsMeAm2cuI2WLP97fK/kr2yYkxoen6
PStk3514/jqHsVLb4sT4eN/cmDwxXZfAWP1K5rDYMedbvG+y70n8DfeDL2FM
VP0Oqn9Q9ctlN+X6ZT9B/KtrXqj2E/G1dP4jeYd1Ld11/LPgL2BWjKdgNKp7
JjO3Q5ujZL+QGSuoXXS8e3TFbYkhiSVPkL1t0ZjQZ7I/zfy82de64niZY3ur
/kXVpbqe3RPjJ/VU90VmrHQ7tWlT9TfxLfGx8bXB04jFJ+j611Sq4wexZ2i8
GP/zaLXdS/u2Se1vHil7N9l1U2OaYJuMGeBDJ1Z8Lt7fL/neZGcqX1q2P39R
ZiyKPsDHwOAYxxnPdyI2UZ+/FzxH7au2Z6SuY8zfR3b9Gsbdwd9frpjPwPcB
cwV73Un17cBY8QFkP8U3q7pD1aa++nq44lhnf7532Uu4XtkHyt5B9qWZsUb2
Paq6BmCEiTFhsGHwNN4tMH6wfvBC3i0wfbD9ljq+EfOt9jVm/JHdUPYG2Xvz
vVZcxufA92A+mhx6TBtYMd49JXQMNpjxVtuu4Hc6ZkfGKvgC2QXV71cx3gs2
NF77fq8YswK74pgnK/a3jgRfkP247McqLh+sY+qpv02qv4CYXdvPFX+DfIv4
sPiy32rrr/KZRY/Ht1aMpfXTvm9U/ip1mTa0bUfMldhnxXdlDGYsBpN/nfGi
4liis/YtV3lfbX/L/oH7XzGeDfaBj4yvvKria3tbxy9Q+RZdbxvZieyDZP8D
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

           "]], Polygon3DBox[CompressedData["
1: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
O91Psa8+w3qpKYn/Nx4r5f8BWYGEMw==
           "]], 
          Polygon3DBox[{{3117, 1472, 1353, 1352, 1552, 2453}, {3121, 1484, 
           1384, 1383, 1591, 2473}, {3118, 1477, 1371, 1370, 1571, 2462}}]},
         Annotation[#, "Charting`Private`Tag$77126#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1lkmQFUUQhuv1THe/191PBZVNMAQVBJcIdwTUIEJwOSkKrhEqetPQ8CJ6
Ulxu7p5EEQjE0YMIzCj7LjDADMMM+zAIsimbHt0Ywu/nbw8VmZ2dVZXLn5k1
dOrLk16KQghHWA2sehbCQuiYWgjdaQifVkI4kIQwhe/tyJ8vQni9MYQmlI+y
cSc6h5D/gU6NNRP97cjWsj6C35P4zLfgz0LXIf8Yfh/yzex/H34r+x/m/Hbo
1egsQOdt5JvRWQT/jnTgf6yGcIo9+5BthX6AvI097fAfVrz/+9R3bUL/d9Yc
+P3IVsYh/Mz/U8guynzmOehvfH8J34lOX77fhZ+bhzAos/01+Msy25zBX5DZ
tl7oCs48wJknOOMkaxbyLs4ZkZnvj/4qdA6ic4b/04jZZ/IFnYXIO4Njuxh+
H/xR+Qi/F/4w/GnWbPR3oP8I8dmGfGphew9H9mcy8g7oc8ir6PfAL4udC9m2
XH6j+zl7uvk+CP+FYgJ/KHK+tCfNHc8B2N7GfTMqtufN3HZX6iE8zh2r0J3A
nV2R46O7e9BbB32R/LyGznDuHCZ7cudlIGdGSZkf/j3Bv9XwE2uOhWIif+/i
3x7kd8fOh/xUbDemxt5++J/gP6mYV4yPRI7vKPashF4LbUE2vWJblWdhRvaN
4t4x/H8jd1zPRMbuozXnQniZUWL7l2B8ixeGBme+N8+dY90tLAlb+i/86//p
yGcpZ+fvQN6QOHcLuHt4Zr/6cc7QzL73gZ+f2uYN6KaJ87Utdfy2R46d4qW4
PYkfz7J+Re9r6HfCnHBG/O9FZw06TyFPctdXv8zYUN470N2YuEZUK2fLuDVB
R7LnMGdE5Hos3z3cOw46qeY6u4pzHqq5Xq+EfxB+C/wrhbHQGRkPwtG2yHuE
pQPwE6uuoR2Rc6m863xha0PqfeoJf3Pmq+gN58xrWD3sWw9dnzqG6idJYny2
I7sP/bXIuxP72hbZvmfYcxzZPOjTrGPwXxXGrnAhTF6aG//qOTfi53vwN8XG
n3A4PnZ+ZL/q856aY6UaUU6VmzWpsS2fV8OPZk8r+ndAX8D2ZvSbq64NYfAH
aKW0dRX6t8aO4W3QkNiGFcj3Jo6X+uXlmfvwPOxtYf9Jzt+LfHfVsVqO7uDY
fXsI9ObSl1uguxPnRv24u8Soamhl6nu7kLWkjuHWEhdLImNIeFwcOV6q2V3q
p4X7wE71JmEvdryPJO6LyyKfpfkhe1qRL0yNW/XkphJvO+CbU9+jPv9nYVxO
Ud4z186A3PV3LHKNCavXsU7g9/XQZuQ3xK5b1Zx66s7IcRPGFBvFSjnoje3H
N7FzrPgoTuPLXB+j7m8vcze6zIX8kn+zsPMK6PGq7dH8U38QroRx1Udr6b9m
V0eD58j64DoVbtW/lXfpz489X+S76lVYbS9noHKsXA/h/798T4P/Bzo3sj/y
ZYL6bINrqq3BOi3Il0bOn849Fzvm38a2WX1NcdRsk219OH8kqwudx1Tfic8W
ZkcUzn2ReUaqh16YuSZlw1/oz8HPRcHYU746yz46LDMWqnX3L/Ux1Z76jvqP
alJ4VmweqLkHCofqJeqxqpH7a64r1ZcwJx/nNZZ+Vs2rpjSXhTX1ANWealC4
7J8ZX411vxmaGl13wr/0hfeLc9umPqZ+q3m4tOzPHeVcVZ/RzFwSO1bCoLA2
nb1biGXf3PNRmFEPV951l+KrN4AweP7dlLrPqF/rjaFc3Yn8ktwxUV9N6573
el/pfaJcjENnYOw4D4Ju5N+WxLnQPFbv1CzbVDh/yql8V29R798Vud6Vm97y
3SKcthae2cLYkLJvXB47d+qr8mt5ZH3FK6n7faM3hnAlbGheNdSNRfV/zUXd
pRjHdb+r9FbRe0n2j8WXyYXn28zSD8mFo97CfUpz7Vzh3qf5tSIy9tb930eg
s9H/D/Apl5o=
          "]], Polygon3DBox[CompressedData["
1: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
o60x9r32P6rDtbM=
          "]], Polygon3DBox[CompressedData["
1:eJwtkUsvQ1EUhVcr7kUrwsAjIdGaqHjEUIxbUylt4pGgzAgxYsYP8AtMRBph
gsQ7IfFIiDSlqjQGlaJeEXMTxHdzDVbO3t9eZ++7z/VEJoLjTknVKB+VuaQY
YJUkZ0jeImmFeBvm46xHP6jOLe3A1kzpFF+IvLtQeoRdwd5gQ7By7rfgb0ab
1Az6e+Fb1gx82QJpmnz5v97E2Yi+kZ9+F7BDfDf068HXj+6IT2BJah14gihL
fAl7oTaAx1HMt9C7jT7n1GaZOwn3wwLoHtbJvX38G+xdha8SpamF8XmIa9EC
Pb/IS9kjjneUejxPitJvBk0RZ+jVjrcBXw2+DL4xfAlqSy57Z2s3a8cUtQo8
AWYnYEf0v4X1uu25Z8Trpv221hs72eOAfM4htXLfB9vj3EXPeOfhBmcJPWOc
i3ij3P0l78Obhh2b9ixr5jDsA3YNe4KFYBHYOyxp2v/P+o8jsE9YCpaDhWFd
6IE4AXulNojnDwhoUbY=
          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLlFEch/HfjDN5HyXauCksW2X9AxW0qRYmYRFE7UQIXdQ2haCdgbQt
dBNISiAEXcRKigiJCILo4mUjWtLF8ppZdrE+p8Cvz/P7vu85czxObfOZI6cz
EXFPOnIRyV8VRfSR+ZKIavOAfoFv4cOeLfFd/D7fi4WKiEHvHOLd5REP9Cd5
D3/IN5VGtJkf8a28nT/m2/gF/oTX8cu815qn5n5+lT/jg7yfP+cjvIaPZ3Xm
l+bzOGa+mXd28wvzLf6a38bR1DnzPv7ZOSvxB87p5rBgfof1/o7q9I6+HCuk
Sj55VopT+jL8Zi7C79hhzax+hq9JXr9BPvJJfY5/4SU4i8X4Qb/DujfmFfkl
73Vf8a2syrqM6/6kZ/Jb5mVCl0178MCMtNtrRr+g+ymLMpX20i3hskxLnyXb
3fMlnHCHx3Wd/AofcWdn+Rq/qK/1Xqu5i2/kJ3gOG3DVvntwGXfiIm7G3WUR
d3xvzllTZR6z55D5mDMWzEexEpvS3eJh9HHRiJZGA/qIaLPfXWshTvk1xA96
Vpz+n/xAumN+g+/P/7uGuM7TlbR4f4D7iWZ+jWTTGS3ozfz/jv8FbARpmQ==

       "]], Line3DBox[CompressedData["
1:eJwt0UdKBEEUgOGnKCq4MefQppkx5zyKW5euXM8BdKtX8RzmtPEGIpgdR1QQ
L+HX4OLjr3p0F3R1Utjd2imLiAL5mohDTWoj6ioj6mngtTqiUZtopoUXs6zn
Wq3baKeDL/NO7aKbHr7NejWhj36ezQZ0kCH2nFU0y1hnyTHMCD/mozrGOBNM
8mGe896U9TQzzPJrPqfzLLDIEiXz5fRc76zoKnmezNd0nY30Gyoi7t3DkfWD
Huujnuhp+rz1WfoNep7ehV6k96SX+qZXWtRrfde7KueWRxw4u2S/r5/22+78
1n5Tb/7/wR+hGi8Q
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{2286, 2983, 2984, 2602, 2846, 1471, 2946, 2892, 2893, 2603, 
       3173, 3273, 2393, 3083, 2985, 2986, 2605, 3339, 2847, 2394, 2604, 2452,
        2607, 2848, 2395, 2606, 3131, 3195, 2609, 2849, 2396, 2608, 3132, 
       3196, 2611, 2850, 2397, 2610, 3274, 2453, 3117, 3239, 2612, 2454, 3197,
        2398, 2613, 2455, 3198, 2399, 2614, 2456, 3199, 2400, 2615, 3133, 
       3200, 2401, 2616, 3134, 3201, 2402, 2617, 3135, 3202, 2403, 2618, 3275,
        2457, 2404, 2619}], 
      Line3DBox[{2287, 3084, 3102, 2458, 3085, 2851, 2852, 3367, 2620, 2987, 
       2459, 2622, 2018, 2853, 2621, 2460, 2624, 3340, 2854, 2855, 2623, 2461,
        2626, 2856, 2857, 2625, 3136, 3203, 2628, 2858, 2859, 2627, 1568, 
       2630, 2860, 2861, 2629, 3276, 2462, 3118, 3240, 2631, 2463, 3119, 3241,
        2632, 2464, 3204, 2405, 2633, 2465, 3205, 2406, 2634, 3137, 3206, 
       2407, 2635, 3138, 3207, 2408, 2636, 3277, 2466, 2409, 2637, 3278, 2467,
        2410, 2288}], 
      Line3DBox[{2289, 2968, 2468, 2843, 2862, 2022, 2638, 2988, 2469, 2640, 
       3120, 3242, 2639, 2470, 2642, 1483, 2641, 2471, 2644, 2411, 2643, 1586,
        2646, 2412, 2645, 3279, 2472, 2413, 2647, 3280, 2473, 3121, 3243, 
       2648, 2474, 3122, 3244, 2649, 2475, 3123, 3245, 2650, 2476, 3208, 2414,
        2651, 3139, 3209, 2415, 2652, 3281, 2477, 2416, 2653, 3282, 2478, 
       2417, 2654, 3283, 2479, 2418, 2290}], 
      Line3DBox[{957, 268, 1824, 477, 269, 1825, 479, 270, 1826, 481, 271, 
       483, 1827, 272, 485, 1828, 273, 487, 1830, 274, 1832, 489, 275, 1834, 
       491, 276, 1835, 493, 277, 1836, 495, 1837, 278, 2291, 3246, 279, 2292, 
       3247, 280, 2293, 3248, 281, 2294}], 
      Line3DBox[{2308, 2679, 2678, 3288, 2307, 2676, 2675, 3287, 2306, 2499, 
       2498, 3253, 2305, 2497, 2664, 3284, 3141, 2304, 3140, 3223, 2663, 2496,
        2303, 3252, 2495, 2662, 2494, 2302, 3251, 2493, 2661, 2492, 2301, 
       3286, 2491, 2660, 2490, 3250, 2300, 2489, 2659, 2488, 3249, 2299, 2487,
        2658, 1625, 2298, 2486, 2657, 2485, 2297, 1624, 2656, 2484, 2296, 
       3285, 2483, 2655, 2482, 2295, 2160, 2481, 3088, 2480, 3103, 3087, 
       3086}], Line3DBox[{2322, 2500, 2680, 1068, 3357, 2321, 1065, 2677, 
       1063, 3356, 2320, 1060, 2674, 3354, 1058, 2319, 1055, 2673, 3353, 1053,
        2318, 1050, 3226, 2672, 1048, 2317, 1045, 3225, 2671, 1043, 2316, 
       3291, 1040, 2670, 1038, 2315, 3290, 1035, 2669, 1005, 3352, 2314, 1030,
        2668, 1003, 2313, 1025, 2667, 3344, 826, 2312, 1020, 2666, 825, 2311, 
       1015, 3224, 2665, 824, 2310, 995, 1637, 995}], 
      Line3DBox[CompressedData["
1:eJwVzTk2g3EYhfE3hcLUOYdKWIGwCA6lBSgUdBSGmJXIQMxDYliJmGKIYQnh
YBMKw0/xnHuf+/6/83UOjw+OJSJiCC31EcXGiLamiJJcaYjokjU+4dYqz/kV
ylhzH7G94ptPerNqu9AruESWj7q/4YdPeZOxXet3uEGep+Qvpt1z/FZvb+a+
2+DdPPS0+zq/50n3B7nJe2TCfca9wNN6h3vVvs3f6yK25CN/wu7/5s2s9zv6
s+0F+/qHfc6+p1fkofy0zesHeq+eQVFfsB3JPp7Fsb5oK8l+nsOpvmQ7kQM8
jzN92fbln3/ZxTrC
       "]], Line3DBox[CompressedData["
1:eJwV0DVORVEAhOFDhxa4PDSBvdBgD61ZACRIgbu7J7AG3K1lFVCwAFwDFHyv
+DNzZuYk596S5tZoS1wIoRMlCSH8JIXwh1+MJ4ZwIztJDqGYrsu+sYEx3Z28
HEW6VdkX1jCq65TfIgvXskKbZfqJFYzYRFJCuOIzbS5pgc0i/cAStuTDdhd8
Bn9O820W6DvK3O+QD9mcOafzpzRi085n69+c5zFoc0LT5Mc0z+aen+VfMYcB
myZ6FHtvfAi5NtP8C2bQr2+kh2hAjn6SPmMKffoC9w74emTrx+kTJtCrr6P7
qEWWfow+osK9Hn2U30NN7L/oR+kDSn1Lm/d221Q776Iq9s02EXcr+S7dDk21
26ab+AfA0UFi
       "]], Line3DBox[CompressedData["
1:eJwV0DdSQ0EQhOHBBQJEjooEXQEBh8AEREBIRARXEN4EwuRAYYWV8HADTII3
F0DSMfhe0NV/98xu7XudY5NDE3URMUzZVMRGS0SmNWKTbzdHdPGcnE5HtPMX
+YNeadd8XPdH9ZR3fkf3ZvZN77Qvtzmbww12puzs6T7lLyribt5oNm12IP/I
v1TQHck9eMbsEPfpVugE9+pn9ce4onvAZ8l9+I5O8aOuzGtNESX+JF/wqvkc
PsfP/CrZ0c3jS9yPV+kGL+iu+YC8ltyNF3W3fFBep3u8pOvwppTvHeGjyb+k
Zf0W/wfU/jVU
       "]], Line3DBox[CompressedData["
1:eJwVzzdSglEYheHPggLUcQFqwdi4AsxxAyoFC6Cz0UVQglqovcswYRYDSdDG
bGsY18BDcea85713/pDOr2fXeiIiJyPJiL3eiERfRBW/4nEpyISM9kccpiJe
cM35MV51N82/cZNyxL3rD6m7c2IPOJ+yp6Vsf+ovaTg/s2fwrJziJc/blgs8
x83LOf7mmu5f4QVuUS7xD//AV3AG78s1bnG3esw+kBvc5u71fyLiTj/aNf3r
vIireBnvSAOXuLpesXe778EbXFP/2U+4hTf1sO9J+c+h7vu4Qb3FP/Md9xI4
vw==
       "]], Line3DBox[CompressedData["
1:eJwVz10ygnEYhvHHQcjHIjJYA52SjxzVEhymyVaomc5tg1gESiklo6nRlJos
wK+De+7rvp734P+mLq/zpZWIyMluMuJuM2J1K6KOv/CR3NsFed6I6NsNt1d8
xe1sRwy4Y3nh3twauuj2IBm+bg/1SJruLfsEny43nviuxXfwGXcubTzl3/ke
znIX0sW/fHv5PnyAa9LHHW6gD+1H+cYf3Ein7ScZ4i431n+JiB+d56syxTdu
Ez2ze3iOb/VMz7lPvMBlvW7v+/81XbH35B/giTtf
       "]], 
      Line3DBox[{2841, 2933, 2934, 2828, 2935, 3350, 3183, 2379, 2936, 2937, 
       2829, 3234, 3165, 2380, 2938, 2939, 2830, 3235, 3166, 2381, 2940, 2941,
        2831, 2591, 2382, 2942, 3328, 3184, 2832, 2592, 2383, 3116}], 
      Line3DBox[{2969, 992, 993, 822, 3289, 2309, 823, 1211}], 
      Line3DBox[{2978, 3043, 3081, 2529, 3044, 2530, 3345, 3181, 2342, 2907, 
       2531, 3101, 2532, 3363, 3046, 2343, 2908, 2533, 2775, 2534, 3314, 2344,
        2909, 2535, 2778, 2536, 2345, 2910, 3263, 2537, 2781, 2538, 2346, 
       2911, 3264, 2539, 2784, 2540, 2347, 3182, 3265, 2541, 2787, 2542, 3315,
        2348, 2543, 2790, 2544, 3316, 2349, 2545, 2793, 2546, 3317, 2350, 
       2547, 2796, 2548, 3318, 2351, 1719, 2799, 2549, 2352, 3266, 2550, 2802,
        2551, 2353, 3193}], 
      Line3DBox[{2980, 3049, 3082, 2556, 3050, 2557, 2912, 3320, 2354, 2913, 
       2558, 2804, 2559, 3321, 2355, 2914, 2560, 2805, 3228, 3155, 2356, 2915,
        2561, 2806, 2562, 2357, 2916, 3156, 3346, 2807, 2563, 2358, 2917, 
       3269, 2564, 2808, 2565, 2359, 3347, 2918, 2566, 2809, 2567, 3323, 2360,
        2568, 2810, 2569, 3324, 2361, 2570, 2811, 2571, 3369, 3115}], 
      Line3DBox[{2982, 3051, 3052, 2815, 2920, 2919, 3327, 2366, 2921, 2922, 
       2816, 3230, 3159, 2367, 2923, 2924, 2817, 3231, 3160, 2368, 2925, 2926,
        2818, 2579, 2369, 2927, 2928, 3348, 2819, 2580, 2370, 2929, 3322, 
       2930, 2820, 2581, 2371, 3349, 2931, 2932, 2821, 3109, 3194}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{942, 229, 2607, 427, 243, 2626, 448, 257, 2644, 466, 271, 
       484, 2657, 285, 505, 2666, 297, 528, 2684, 311, 2701, 555, 325, 2727, 
       582, 339, 2752, 608, 352, 2777, 633, 2778, 365, 658, 2806, 379, 683, 
       2818, 393, 708, 2831, 407, 2258}], Line3DBox[CompressedData["
1:eJwVzjEvQ3EUhvEjoTW0iTStQYIgJgsNi6WGtouNSROLAVPRlUTDrpKmQy1q
ECOjdNDdUh9BP0C3xux3h5Pned/zzz135eTioD4VEYemMhNxOhuRSUVMTNZc
ZyL+sKBfwul0xDLe61N8i+exiPNYwTWs4joeYRFr2PCNbb6Ac9mIM90NP0/u
4J7dIl7JT9jAbnLX2327VX6re8EmPviHHj+228CWrs4fsW13yTf1z3KTj5P3
/I7v6N/5QNeWP3gHd/U5977kV3mAb1jS5/VD+VP+wT6Grmz3K3/LIxzL/zBS
J1A=
       "]], 
      Line3DBox[{1350, 949, 1781, 1550, 3196, 1784, 820, 1797, 1568, 1800, 
       1587, 1813, 3279, 1588, 1382, 1607, 1828, 1608, 1831, 1627, 3249, 1843,
        1002, 1212, 1003, 1028, 1027, 1034, 2995, 832, 1089, 1088, 3359, 1869,
        839, 1884, 1665, 3215, 1887, 849, 1903, 3305, 1681, 1906, 857, 1921, 
       3310, 1697, 1924, 864, 3264, 1940, 1713, 1943, 871, 3269, 1958, 1728, 
       1961, 3322, 878, 1977, 1745, 2263, 2284}], Line3DBox[CompressedData["
1:eJwNzTFLgmEYRuGnIW1IECJyqkQJghoK1KGGnEwUgkaJoJZqUURtKxDBPxAE
UZtL0GZjLjWKQz+hqaGlsbVrOJz7OZ+8Zs9bx825iKijMh9xuRBxhb9ExHQx
Is2HepaTyYiZlrMbWoFXtE+tZF9oVd7QarzJJzz2vWB3vdvBBD1kUhHXXPbt
lm/QxyrWUNef+BHrfnvkztl5nNrf3h14/8ze0rbRtn/0O71r72i7GNi/+kgf
2kWthHft3v2qP/CetuS/9vnZ/aG/8IF7WS/zm/uL/wFhPyN1
       "]], 
      Line3DBox[{1355, 1554, 1787, 1474, 3198, 1356, 1573, 1803, 1479, 3204, 
       1373, 1593, 1818, 3245, 1486, 1386, 1613, 1835, 1493, 1397, 1631, 3252,
        1500, 1407, 2180, 3225, 1641, 2181, 2132, 2133, 2218, 3365, 2134, 
       1651, 1873, 1508, 3299, 1415, 1669, 1891, 1513, 3303, 1420, 1685, 1910,
        1518, 1426, 1701, 1928, 3262, 1523, 1433, 1717, 3317, 1947, 1528, 
       1441, 1732, 3369, 2280}], 
      Line3DBox[{1357, 1555, 1788, 1475, 3199, 1358, 1574, 1804, 1480, 3205, 
       1374, 1594, 1819, 1487, 3208, 1387, 1614, 1836, 1494, 1398, 3223, 1632,
        1501, 1408, 2182, 3226, 1642, 2183, 2135, 2136, 2219, 2137, 3227, 
       1652, 1874, 1509, 3300, 1416, 1670, 1892, 1514, 3304, 1421, 1686, 1911,
        1519, 3307, 1427, 1702, 1929, 1524, 1434, 1718, 3318, 1948, 1529, 
       1442, 2279}], 
      Line3DBox[{1359, 1556, 1789, 1557, 3200, 1360, 1575, 1805, 1576, 3206, 
       1375, 1595, 1820, 1596, 3209, 1388, 1615, 1837, 1616, 1838, 3284, 1633,
        1634, 1847, 2185, 3353, 1643, 2238, 1644, 2184, 1860, 2188, 3355, 
       1653, 1875, 1654, 3210, 1877, 1671, 1893, 1672, 3216, 1895, 1687, 1912,
        1688, 3220, 1914, 1703, 1930, 1704, 3222, 1932, 1719, 1949, 1720, 
       2264}], Line3DBox[{1361, 1558, 1790, 1559, 3201, 1362, 1577, 1806, 
       1578, 3207, 1376, 1597, 1821, 3281, 1598, 1389, 1617, 3246, 1618, 1399,
        1635, 3253, 1636, 1848, 2187, 3354, 1645, 2239, 1646, 2186, 1862, 
       3292, 2193, 1655, 1876, 1656, 3211, 1879, 1673, 1894, 1674, 3217, 1897,
        1689, 1913, 1690, 3221, 1916, 1705, 1931, 3312, 1706, 1934, 1721, 
       3266, 1950, 1722, 2265}], 
      Line3DBox[{1363, 1560, 1791, 1561, 3202, 1364, 1579, 1807, 3277, 1580, 
       1377, 1599, 1822, 3282, 1600, 1390, 1619, 3247, 1620, 1400, 1849, 3287,
        1850, 1851, 2191, 3356, 2192, 1861, 2190, 2189, 1864, 3293, 1657, 
       1878, 1658, 3212, 1881, 1675, 1896, 1676, 3218, 1898, 1691, 1915, 3308,
        1692, 1917, 1707, 1933, 3313, 1708, 1935, 2259, 2276}], 
      Line3DBox[{1365, 1562, 1792, 3275, 1563, 1366, 1581, 1808, 3278, 1582, 
       1378, 1601, 1823, 3283, 1602, 1391, 1621, 3248, 1622, 1401, 1852, 3288,
        1853, 1854, 2196, 3357, 2197, 1863, 2195, 2194, 1865, 1659, 3254, 
       1880, 1660, 3213, 1882, 2085, 2086, 2006, 2088, 3337, 2087, 2005, 1899,
        2007, 2244, 3338, 2243, 2242, 2253, 2254, 2226, 3366, 2225, 1435, 
       2260, 2275}], Line3DBox[CompressedData["
1:eJwV0T0ohHEcB/D/lbfiylteYnCTl4GBgQHFIGezKFJi1d1lNChlschgNFGU
USmuhKLLy2CTkrrlKCmUSIrPM3z6fX/P9563exKz6fFULISwwH5xCEUlIdyU
hVBJrjSEYXOIungIe/o/ru3lHOgHzL+KEPrNbd0PV3IJW/o+81vfa27qPrmU
Y6zrq1y3R+5mQ/dGTv7VZZ23ZHbZO1nTvXAhtznvSzdPh32Gdlb1BeL6M/uH
foqEPE0LK/pH186bp/ZXfZJmeZImlqPfcCw/6wZplO+d12Au6u7Iyk/RM5KR
02QcvyUV3c/x+uj/Yy56d47kQvTujMm7JJnQnXMot3r+vD5GrX2Umuhb6E8Y
kR90775XtbxDFW/2f6GjPbg=
       "]], Line3DBox[CompressedData["
1:eJwVzb8rxGEcwPGPE3fpbjFbvtj5H24xmCyUUo4buW6i5E+QDJjOcE7Jr0Ux
MOsocYOyOEUGBgqDG8jrhnef5/N+Pz1PUiiNzXdExDSOuyJuMxEN3KCejmh2
R1SzEftajsvihL/mt/gan+HS2OZb3LlW4Tu5FNb4gVzEIV+372Bd/+N/0a/V
uIp+0X4Hq3pL+0GiV7mV9p/mFI7w4q9v/QsV+7K+aU7iAI/6h/aODXtJXzRH
MejNXfNNe8WCc1E/M8tY8v89hrU774xrZXsDCZe3zzpfYU/v5Ya4Cfuz8xNS
6ONOvTeHvHbpbpMfsT+Yn3oPZuwF/AMYpjvh
       "]], Line3DBox[CompressedData["
1:eJwVzqlOQ1EUheHdQJk6CTQCnoC+w7WYBgEJCYEUHENwEFLeoKKCVDStAAQJ
kyBBEB6ANKmoQ7UCVBEMAQECvoo/a69/33PumV3fKW2nImIRt+mI9FjE43hE
T55kIy64wkREHnd8h2/xZ/wUN4lT/oFv8M3hHdwoavwHd2V3zAf3x91zR7LJ
r3E3+NULuYgfuYWq3Sp/jW89b/clW3rFbkVeou+ud/4NdX3XbkGe45Ub4MC8
ydd9u28+9JYnFO2W+D1zF3N6om+Y25jW5/Vl84s56w3PcgQzfML3zRm+Jz+5
zPC8f5TxD1lFMEg=
       "]], 
      Line3DBox[{2151, 1551, 1785, 3239, 1472, 1353, 1570, 1801, 3240, 1477, 
       1371, 1590, 1816, 3243, 1484, 1384, 1610, 1832, 1491, 1395, 1629, 3286,
        1846, 1498, 1405, 2175, 3290, 2176, 1858, 2126, 1503, 1410, 2127, 
       3297, 2128, 1870, 1506, 1413, 1666, 1888, 3255, 1511, 1418, 1682, 1907,
        3256, 1516, 1424, 1698, 1925, 3260, 1521, 1431, 1714, 3315, 1944, 
       1526, 1439, 1729, 3323, 1962, 1531, 1446, 2261, 2282}], 
      Line3DBox[{2154, 1553, 1786, 1473, 3197, 1354, 1572, 1802, 3241, 1478, 
       1372, 1592, 1817, 3244, 1485, 1385, 1612, 1834, 1492, 1396, 1630, 3251,
        1499, 1406, 2178, 3291, 2179, 1859, 2129, 1504, 1411, 3351, 2130, 
       2131, 1872, 1507, 3298, 1414, 1668, 1890, 1512, 1419, 1684, 1909, 3257,
        1517, 1425, 1700, 1927, 3261, 1522, 1432, 1716, 3316, 1946, 1527, 
       1440, 1731, 3324, 1964, 2270}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
UObeBoOqA3jgmPmDJg8vQNTBtkgOY23Eo7LtSiDzAnDmJYoVnsbDul4qj8UD
NcT95/vV3M152Jmxvvv6kUU4wIAu0jcoIMNvfvx/WeZB/++hRK3VRVg1MdAJ
tpFFilUcPOn8c9DGn/p7I5cA2YLuspXvj6Gf1w1qWcwWIeH4mL1dTiZURS1z
hVfOo3zuZ2SXFFrdb1d79+JNLWyNs2xaiX5EqjY7DX+bUiH4Eqx/yW2BRb7a
9kTJZKSsqXnFZpQCkfufysStdcPQAiNdMMdjxMv98YOgOgUyfv5saO/th1Mx
z23c3e6gs27KuGdxZHBWmpFMcB4GbV2fsXPpzii5zzi4apAEcl7v569VjYHz
ScnXf8us0KPbEnvRThLc7Iumb2ybhE/tTNrfW41RkfTR4fPKRHA7QG573z4N
H+7bWWoE6CLFtZ9sjxyXYGhHf/sP7lkwq/BSvKaogW56PSv7HkuA+LQj92xV
5gC5+M2yhqsgB7cyKd6aRRAPXf1Of2Ee6A1Fjp/kkUeLE4yt02Q8CIh/PLuB
4eAoKe+i85A0Om1q/6xOGA/N618u+h1cgJ0D3LgDwkfR/liVP2yqtDrpDPLI
1SsF/sln9yhJ06jkNtuLGCsqXDXbqx832ASzjtYZO+2LUWHBA/W+NQrcJxnt
V+LuhqY9lw8LvH6O2g3avondpwAf6fhONt8+eDH1nPyhNADpfsQijVbI8HPW
+ox/0CA4Oae5l/DdQiyLtkIydmRovfBw8PglWk4p+95n/+E6ctjGzL3WRoKG
zQEFFsIYCElnuh18dgXtZu3ukz1GgosxNSzyppPAOuIH+1T00aeSBpmkMCLY
Z3DnfdGdBkrJi+yXN7UQYVhSsGt2CZqXiLcemtN8y5lDknMcqujUxMm91xSX
oOrpvcOyJrNwKtn6lFj2aTRWJuiQSeOcdbWDt53G2fZM9XhG70k0PbRdTpzW
9xR+XvyZfaUNdiQ9YGx6343yXHrWxoNJYLaeH+C3Mg4+1PtlXmHpSLPbyuV3
1BJE3bSnZxiZATZGwrsTlcGIVE+ZPHeMACLZmuZatXNg73ud/ehuT3TYgp9x
jH8R3OM/zmux4qBs7w27lWZbtPB2XEwI4QHrlBt4/RcHQXuwP9FDJmgvXUe4
x/0FMLt6MCi6kZaXGXGR2R4XkEdGcczvFhyMV7box3ngwfaAO2Gfijp64++l
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
3jcKqkp5kmuOx9DD5zr9Bw7NgpnIkVh22zH4Y9OTPx74Xz6HybjPoRvuc/hQ
8EIznS8BdDIyqnn0x8GZpjH/YYUUmqku2f7YcgKGxZ+6Pn4/A3VbnOe6d+/5
xz6Yje+DB/B9sAH3wXPBffC24z54f/eX+4n7y93E/eXoHNOGuw60Qy0v89iR
h2Rg55p4KNi2igk9KTe8aNIKC58zc3oayLDiYFPt/eEHtsvVd6S1vxkefZ4V
lPlDhv3pD/qjSknYUSOZK4RiCozHFW5elioFu3AKzRMaX6TOmpPOKjkHkRGv
41xHRsDs/Nv8Q/THEbnYrfNV4iRMOia68wZPw1PFnc0q4wLI/NhE9BH3UQgU
WE1ub6E+PzFmcf1GduS1zs+NhvYvPzdz3QYJltpOkLFN2Vu3kwy047XG2gNE
TI/bevrOpXaoZJ2xl7pDhiPTfufeHB/HFIUk5Qt8WuHKlh3DPNT8s9n2olnR
eB9mrCVc7znXDIIUHnepVTLsUr1VNHujHXPC/dPUcf+0bNw/jdcijlY0kAK3
zs0M7ZmuhFJjssG9DGPEXVPauI/6fRkT6xzNqN8Xs04WE7ETQEqanSfa9kzB
kKV4sTcvNX666Grus2VGNJ/bti2zj8FTk5wmMdtZYHUKjz6u8QvbjfuqyeK+
apvi//JVu7Lk/KRpRx8kXZ0//1GRBBuiXV+2VA5jJZambM0DXUA3E1/rOU4C
2y+ygSayHdj4B6z/rmkHBDKMGUoakEFoZotzy8F6LIfvahSnZRvY/nmjQnlL
Bs5DxezeHOXYcj4N76vyFkj72uf/a5QMHx9nz3YWfMZScN8zZtz3rAr3PYtS
4dRjSq2DreE6oae0KdAtFCWpnvUOY9iVVHLnbz7X8W9lNH3rgEtokuz+UB79
r+rePJrKv28bliEiQwiljIlImVNyfslUKlIhkkqFlCEk0kRFolJKI0XGDJEy
ZPiUDMmUeWZj29gjDRqQZ1/373v93vW61vW+637W/aznvv891v7DcO7zMxyf
4zi4MT6L8d2r/8IrfqTOLGb/3RoWlq0LZv/dLCI3DwY1CqAyjHdjnBvjNrtq
C9XPUmAtn6lOQxUFWj/TNeRrvxI7MK6F8XyMn1Y8sdE2cwhqzlbax82Mw6ep
eu1k3yHiFMbrMf4G40bSvmcfJQ+A4T35PS6faSDFe2jx0tkWYiPGEcZ5MP5r
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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\[Theta]", TraditionalForm], 
    FormBox[
     TagBox["z", HoldForm], TraditionalForm], None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 5}, {0, 5}, {0., 1.065119282420127*^6}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5751248948974614`*^9, 3.57512705583206*^9, 
  3.575330370763636*^9, 3.5753304157222075`*^9, 3.5754774560004554`*^9, 
  3.5754784764638224`*^9, 
  3.7595002386557083`*^9},ExpressionUUID->"77078377-1f2f-4553-ae9e-\
34d979b14ff4"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.5747598545773015`*^9, 3.574759856457409*^9}, {
   3.5747599454655004`*^9, 3.5747600776960635`*^9}, {3.574760133739269*^9, 
   3.574760164668038*^9}, {3.5747678242361403`*^9, 3.5747678324826117`*^9}, {
   3.5747678800463324`*^9, 3.5747678812594013`*^9}, {3.57476805746248*^9, 
   3.5747681244693127`*^9}, {3.5747683820510454`*^9, 
   3.5747683970489035`*^9}, {3.574768434007017*^9, 3.574768515378671*^9}, {
   3.574768576186149*^9, 3.574768577490224*^9}, 3.574769183236871*^9, {
   3.5747692417142153`*^9, 3.5747692516867857`*^9}, 
   3.5748517744833517`*^9},ExpressionUUID->"ee4b93b2-cf2c-49e3-b69e-\
7ba2946fe151"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5747685334127026`*^9, 3.574768546011423*^9}, {
   3.574769033006278*^9, 3.574769053305439*^9}, {3.5747690860953145`*^9, 
   3.5747690861683187`*^9}, 3.5747691330239983`*^9, {3.5747691655058565`*^9, 
   3.5747691878041315`*^9}, {3.5747692954442883`*^9, 3.574769297129385*^9}, {
   3.5748517023932285`*^9, 3.574851708054552*^9}, {3.574851837447953*^9, 
   3.5748518626213927`*^9}, {3.5748521513699083`*^9, 
   3.5748521716410675`*^9}, {3.5748522280772953`*^9, 3.5748522518516555`*^9}, 
   3.574853077553883*^9, {3.5748536890828605`*^9, 3.5748536916910095`*^9}, {
   3.5751210045709476`*^9, 3.5751210225389752`*^9}, {3.575123078263556*^9, 
   3.5751230986557226`*^9}, {3.5751232006245546`*^9, 
   3.5751232089840326`*^9}, {3.575123663572034*^9, 3.5751236864393415`*^9}, 
   3.5751254477110806`*^9, 3.5751256350677967`*^9, 
   3.5753306122514486`*^9},ExpressionUUID->"86497b78-0a4e-48c5-afc5-\
cb87f8f69fc6"],

Cell[BoxData["\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\\
notes\\\\blogit\\\\huang93Fig3sv.svg\"\>"], "Output",
 CellChangeTimes->{
  3.574853694921194*^9, {3.5751210070180874`*^9, 3.575121025056119*^9}, 
   3.5751230903542476`*^9, 3.5751232139143147`*^9, 3.575125450530242*^9, {
   3.5751256236541443`*^9, 3.575125636065854*^9}, 
   3.5751271452931767`*^9},ExpressionUUID->"cd908b69-8cd3-4bcb-b96e-\
efd4b503049f"],

Cell[BoxData["\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\\
notes\\\\blogit\\\\huang93Fig5sv.svg\"\>"], "Output",
 CellChangeTimes->{
  3.574853694921194*^9, {3.5751210070180874`*^9, 3.575121025056119*^9}, 
   3.5751230903542476`*^9, 3.5751232139143147`*^9, 3.575125450530242*^9, {
   3.5751256236541443`*^9, 3.575125636065854*^9}, 
   3.575127147153283*^9},ExpressionUUID->"9a195a10-03f1-46f0-b78a-\
c98d31c21faa"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.574768592132061*^9, 3.5747686094060493`*^9}, 
   3.574769031797209*^9},ExpressionUUID->"570a3475-968c-4632-939c-\
823bc04df858"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "huang93Fig3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"huang93Fig3", " ", "=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "w", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"w", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "4"}], "}"}]}], 
     " ", ";", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Map", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"theta", ",", " ", "#", ",", " ", "1"}], "]"}], " ", 
           "&"}], ",", " ", "w"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"theta", ",", " ", "0.1", ",", " ", "100"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
        RowBox[{"{", " ", "\[Theta]", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"PlotRange", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "1.5"}], "}"}]}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"Map", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Text", "[", "\"\<s =\>\"", "]"}], " ", 
              RowBox[{"Text", "[", "#", "]"}]}], "&"}], ",", " ", "w"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", " ", "Right"}], "}"}]}], "]"}]}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.5751271330464764`*^9, {3.7595002165990353`*^9, 
   3.759500252948133*^9}},ExpressionUUID->"8b3e8648-ce95-41d6-a043-\
d04acf3125ba"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[
           1.], LineBox[CompressedData["
1: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
sJn2JkCCYT/5fxcoqMk=
            "]]},
          Annotation[#, "Charting`Private`Tag$77385#1"]& ], 
         TagBox[
          {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[
           1.], LineBox[CompressedData["
1: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
r081TtgSeO+3JfyWkkU+l+pT/wdfDFNk
            "]]},
          Annotation[#, "Charting`Private`Tag$77385#2"]& ], 
         TagBox[
          {RGBColor[0.560181, 0.691569, 0.194885], Thickness[Large], Opacity[
           1.], LineBox[CompressedData["
1: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
pA3wM3KlaRMvxr3+7u+TIM55dOVOhjbxf3vttUA=
            "]]},
          Annotation[#, "Charting`Private`Tag$77385#3"]& ], 
         TagBox[
          {RGBColor[0.922526, 0.385626, 0.209179], Thickness[Large], Opacity[
           1.], LineBox[CompressedData["
1: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
            "]]},
          Annotation[#, "Charting`Private`Tag$77385#4"]& ]}, {}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\[Theta]", TraditionalForm], None},
      AxesOrigin->{0.1, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->None,
      PlotRange->{{0.1, 100}, {-4.06432088897181*^6, 3.1103242781670643`*^6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{RowBox[{
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["1", TextForm]], "InlineText"], 
          Text[1]], " ", 
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"s =\"", TextForm]], "InlineText"], 
          Text["s ="]]}],RowBox[{
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["2", TextForm]], "InlineText"], 
          Text[2]], " ", 
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"s =\"", TextForm]], "InlineText"], 
          Text["s ="]]}],RowBox[{
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["3", TextForm]], "InlineText"], 
          Text[3]], " ", 
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"s =\"", TextForm]], "InlineText"], 
          Text["s ="]]}],RowBox[{
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["4", TextForm]], "InlineText"], 
          Text[4]], " ", 
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"s =\"", TextForm]], "InlineText"], 
          Text["s ="]]}]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1.01, 0.5}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\[Theta]", TraditionalForm], None},
   AxesOrigin->{0.1, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->None,
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
sJn2JkCCYT/5fxcoqMk=
           "]]}, "Charting`Private`Tag$77385#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
r081TtgSeO+3JfyWkkU+l+pT/wdfDFNk
           "]]}, "Charting`Private`Tag$77385#2"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
pA3wM3KlaRMvxr3+7u+TIM55dOVOhjbxf3vttUA=
           "]]}, "Charting`Private`Tag$77385#3"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
           "]]}, "Charting`Private`Tag$77385#4"]}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0.1, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {$CellContext`\[Theta], None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0.1, 100}, {-4.06432088897181*^6, 
        3.1103242781670643`*^6}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
       Text[1] Text["s ="], Text[2] Text["s ="], Text[3] Text["s ="], Text[4] 
        Text["s ="]}, LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> 
       "Column"]], {Right, Right}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.574851944138055*^9, 3.575123064028742*^9, {3.5751271284642143`*^9, 
   3.5751271379187546`*^9}, 3.5753304263528156`*^9, 3.575477468736184*^9, 
   3.5754784854033337`*^9, {3.759500227217*^9, 
   3.759500253948748*^9}},ExpressionUUID->"75c1c40b-2f65-4a64-9d48-\
fec93032b73a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "g", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"\[Theta]", " ", ">", " ", "0"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"\[Theta]_", ",", " ", "z_"}], "]"}], " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Series", "[", " ", 
     RowBox[{
      RowBox[{"fn", "[", 
       RowBox[{"\[Theta]", ",", " ", "4", ",", " ", "z"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}], 
    "/", 
    RowBox[{"Sqrt", "[", " ", "Pi", "]"}]}], " ", "//", " ", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"\[Theta]", ",", " ", "z"}], "]"}], " ", "//", " ", 
  "TraditionalForm"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.5751265850541325`*^9, 3.5751266189760733`*^9}, {
  3.5751266790925117`*^9, 3.5751267187877817`*^9}, {3.5751267576310034`*^9, 
  3.5751267693976765`*^9}, {3.57512681212012*^9, 3.5751268403947372`*^9}, {
  3.5751268840342336`*^9, 3.5751268885324907`*^9}, {3.575127206649686*^9, 
  3.5751272636489463`*^9}, {3.575127306888419*^9, 3.575127326612548*^9}, {
  3.575127360200469*^9, 
  3.575127362826619*^9}},ExpressionUUID->"5255564a-fe2c-4d90-a4f1-\
f863b1d6384c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"3", " ", "z"}], 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["z", "2"]}], "8"], "+", 
      FractionBox[
       SuperscriptBox["z", "3"], 
       RowBox[{"3", " ", 
        SqrtBox["6"]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["z", "4"]}], 
       RowBox[{"32", " ", 
        SqrtBox["2"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["z", "5"]}], 
       RowBox[{"25", " ", 
        SqrtBox["10"]}]]}], ")"}], " ", 
    SuperscriptBox["\[Theta]", 
     RowBox[{"5", "/", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"45", " ", "z"}], 
       RowBox[{"8", " ", 
        SqrtBox["2"]}]], "-", 
      FractionBox[
       RowBox[{"45", " ", 
        SuperscriptBox["z", "2"]}], "128"], "+", 
      FractionBox[
       RowBox[{"5", " ", 
        SuperscriptBox["z", "3"]}], 
       RowBox[{"24", " ", 
        SqrtBox["6"]}]], "-", 
      FractionBox[
       RowBox[{"45", " ", 
        SuperscriptBox["z", "4"]}], 
       RowBox[{"1024", " ", 
        SqrtBox["2"]}]], "+", 
      FractionBox[
       RowBox[{"9", " ", 
        SuperscriptBox["z", "5"]}], 
       RowBox[{"200", " ", 
        SqrtBox["10"]}]]}], ")"}], " ", 
    SuperscriptBox["\[Theta]", 
     RowBox[{"7", "/", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"315", " ", "z"}], 
       RowBox[{"128", " ", 
        SqrtBox["2"]}]], "-", 
      FractionBox[
       RowBox[{"315", " ", 
        SuperscriptBox["z", "2"]}], "4096"], "+", 
      FractionBox[
       RowBox[{"35", " ", 
        SuperscriptBox["z", "3"]}], 
       RowBox[{"1152", " ", 
        SqrtBox["6"]}]], "-", 
      FractionBox[
       RowBox[{"315", " ", 
        SuperscriptBox["z", "4"]}], 
       RowBox[{"65536", " ", 
        SqrtBox["2"]}]], "+", 
      FractionBox[
       RowBox[{"63", " ", 
        SuperscriptBox["z", "5"]}], 
       RowBox[{"16000", " ", 
        SqrtBox["10"]}]]}], ")"}], " ", 
    SuperscriptBox["\[Theta]", 
     RowBox[{"9", "/", "2"}]]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Theta]", "]"}], "5"],
    SeriesData[$CellContext`\[Theta], 0, {}, 5, 10, 2],
    Editable->False]}],
  SeriesData[$CellContext`\[Theta], 
   0, {(3 2^Rational[-1, 2]) $CellContext`z + 
    Rational[-3, 8] $CellContext`z^2 + (Rational[1, 3] 
      6^Rational[-1, 2]) $CellContext`z^3 + (Rational[-3, 32] 
      2^Rational[-1, 2]) $CellContext`z^4 + (Rational[3, 25] 
      10^Rational[-1, 2]) $CellContext`z^5, 
    0, (Rational[45, 8] 2^Rational[-1, 2]) $CellContext`z + 
    Rational[-45, 128] $CellContext`z^2 + (Rational[5, 24] 
      6^Rational[-1, 2]) $CellContext`z^3 + (Rational[-45, 1024] 
      2^Rational[-1, 2]) $CellContext`z^4 + (Rational[9, 200] 
      10^Rational[-1, 2]) $CellContext`z^5, 
    0, (Rational[315, 128] 2^Rational[-1, 2]) $CellContext`z + 
    Rational[-315, 4096] $CellContext`z^2 + (Rational[35, 1152] 
      6^Rational[-1, 2]) $CellContext`z^3 + (Rational[-315, 65536] 
      2^Rational[-1, 2]) $CellContext`z^4 + (Rational[63, 16000] 
      10^Rational[-1, 2]) $CellContext`z^5}, 5, 10, 2],
  Editable->False]], "Output",
 CellChangeTimes->{3.5751286488541756`*^9, 
  3.575477485302131*^9},ExpressionUUID->"70b4f5df-b885-4397-8cca-\
50385387c279"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", 
      RowBox[{"5", "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["z", "5"]}], 
        RowBox[{"25", " ", 
         SqrtBox["10"]}]], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["z", "4"]}], 
        RowBox[{"32", " ", 
         SqrtBox["2"]}]], "+", 
       FractionBox[
        SuperscriptBox["z", "3"], 
        RowBox[{"3", " ", 
         SqrtBox["6"]}]], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["z", "2"]}], "8"], "+", 
       FractionBox[
        RowBox[{"3", " ", "z"}], 
        SqrtBox["2"]]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[Theta]", 
      RowBox[{"7", "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"9", " ", 
         SuperscriptBox["z", "5"]}], 
        RowBox[{"200", " ", 
         SqrtBox["10"]}]], "-", 
       FractionBox[
        RowBox[{"45", " ", 
         SuperscriptBox["z", "4"]}], 
        RowBox[{"1024", " ", 
         SqrtBox["2"]}]], "+", 
       FractionBox[
        RowBox[{"5", " ", 
         SuperscriptBox["z", "3"]}], 
        RowBox[{"24", " ", 
         SqrtBox["6"]}]], "-", 
       FractionBox[
        RowBox[{"45", " ", 
         SuperscriptBox["z", "2"]}], "128"], "+", 
       FractionBox[
        RowBox[{"45", " ", "z"}], 
        RowBox[{"8", " ", 
         SqrtBox["2"]}]]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[Theta]", 
      RowBox[{"9", "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"63", " ", 
         SuperscriptBox["z", "5"]}], 
        RowBox[{"16000", " ", 
         SqrtBox["10"]}]], "-", 
       FractionBox[
        RowBox[{"315", " ", 
         SuperscriptBox["z", "4"]}], 
        RowBox[{"65536", " ", 
         SqrtBox["2"]}]], "+", 
       FractionBox[
        RowBox[{"35", " ", 
         SuperscriptBox["z", "3"]}], 
        RowBox[{"1152", " ", 
         SqrtBox["6"]}]], "-", 
       FractionBox[
        RowBox[{"315", " ", 
         SuperscriptBox["z", "2"]}], "4096"], "+", 
       FractionBox[
        RowBox[{"315", " ", "z"}], 
        RowBox[{"128", " ", 
         SqrtBox["2"]}]]}], ")"}]}], "+", 
    InterpretationBox[
     RowBox[{"O", "(", 
      SuperscriptBox["\[Theta]", "5"], ")"}],
     SeriesData[$CellContext`\[Theta], 0, {}, 5, 10, 2],
     Editable->False]}],
   SeriesData[$CellContext`\[Theta], 
    0, {(3 2^Rational[-1, 2]) $CellContext`z + 
     Rational[-3, 8] $CellContext`z^2 + (Rational[1, 3] 
       6^Rational[-1, 2]) $CellContext`z^3 + (Rational[-3, 32] 
       2^Rational[-1, 2]) $CellContext`z^4 + (Rational[3, 25] 
       10^Rational[-1, 2]) $CellContext`z^5, 
     0, (Rational[45, 8] 2^Rational[-1, 2]) $CellContext`z + 
     Rational[-45, 128] $CellContext`z^2 + (Rational[5, 24] 
       6^Rational[-1, 2]) $CellContext`z^3 + (Rational[-45, 1024] 
       2^Rational[-1, 2]) $CellContext`z^4 + (Rational[9, 200] 
       10^Rational[-1, 2]) $CellContext`z^5, 
     0, (Rational[315, 128] 2^Rational[-1, 2]) $CellContext`z + 
     Rational[-315, 4096] $CellContext`z^2 + (Rational[35, 1152] 
       6^Rational[-1, 2]) $CellContext`z^3 + (Rational[-315, 65536] 
       2^Rational[-1, 2]) $CellContext`z^4 + (Rational[63, 16000] 
       10^Rational[-1, 2]) $CellContext`z^5}, 5, 10, 2],
   Editable->False], TraditionalForm]], "Output",
 CellChangeTimes->{3.5751286488541756`*^9, 
  3.575477485572147*^9},ExpressionUUID->"be5c4d96-8083-4492-ba0d-\
aeda37a7c398"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"h", ",", " ", "h2"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"h", "[", 
     RowBox[{"theta_", ",", " ", "z_"}], "]"}], " ", "=", " ", 
    RowBox[{"Integrate", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"theta", " ", "x"}], " ", "+", " ", "1"}], ")"}], "^", 
           "2"}], " ", "-", " ", "1"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"3", "/", "2"}], ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"z", " ", 
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{"-", "x"}], ")"}]}]}], " ", "+", " ", "1"}], ")"}]}], ",",
       " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "[", 
   RowBox[{"theta_", ",", " ", "z_"}], "]"}], " ", "=", " ", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", " ", "+", " ", 
       RowBox[{"theta", " ", "x"}]}], ")"}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"theta", " ", "x"}], " ", "+", " ", "1"}], ")"}], "^", 
          "2"}], " ", "-", " ", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}]}], "/", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "z"}], ")"}], 
         RowBox[{"E", "^", 
          RowBox[{"(", "x", ")"}]}]}], " ", "+", " ", "1"}], ")"}]}]}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.5751286572826576`*^9, 3.575128794014478*^9}, 
   3.5751288578181276`*^9},ExpressionUUID->"b16c9945-bcb7-4711-b4f1-\
7db4e4268525"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.5751287143969245`*^9, 3.575128854261924*^9, 
  3.575128906791929*^9},ExpressionUUID->"63833cd5-fcd6-4c9b-ac08-\
235bfc246f58"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["number density calculations", "Subsection",
 CellChangeTimes->{{3.5751936565699124`*^9, 
  3.5751936624482484`*^9}},ExpressionUUID->"55a0b743-af86-4180-b82f-\
0fb433874609"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "nbinomial", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"$Assumptions", " ", "=", " ", 
     RowBox[{"m", " ", "\[Element]", " ", "Integers"}]}], "  ", ";"}], "*)"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nbinomial", "[", 
   RowBox[{"b_", ",", " ", "k_"}], "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", 
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "b"}], " ", "+", " ", "k"}], ",", " ", 
     RowBox[{"-", "b"}]}], "]"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "b"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"k", "-", "b"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "[", 
   RowBox[{"theta_", ",", " ", "z_", ",", " ", "n_"}], "]"}], " ", "=", " ", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"nbinomial", "[", 
      RowBox[{
       RowBox[{"-", "2"}], ",", " ", "s"}], "]"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z", " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "theta"}], ")"}]}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"s", "+", "1"}], ")"}]}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"s", "+", "1"}], ")"}], "^", "2"}], ")"}]}], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"s", "+", "1"}], ")"}], "/", "theta"}]}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"s", ",", " ", "0", ",", " ", "n"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"\[Theta]", " ", ">", " ", "0"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Series", "[", " ", 
      RowBox[{
       RowBox[{"n", "[", 
        RowBox[{"\[Theta]", ",", " ", "z", ",", " ", "2"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "3"}], "}"}]}], "]"}], 
     "/", " ", 
     RowBox[{"Sqrt", "[", " ", "Pi", "]"}]}], " ", "//", " ", 
    "FullSimplify"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"s", " ", "//", " ", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{
  3.5752356029286766`*^9},ExpressionUUID->"565fc1ba-10a6-4462-8e14-\
492c2773ceef"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "k"], " ", "b", " ", 
    RowBox[{"Binomial", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "b"}], "+", "k"}], ",", 
      RowBox[{"-", "b"}]}], "]"}]}], 
   RowBox[{
    RowBox[{"-", "b"}], "+", "k"}]]}]], "Output",
 CellChangeTimes->{3.575235605697835*^9, 3.575241275266116*^9, 
  3.575477490994457*^9, 
  3.5754784949628806`*^9},ExpressionUUID->"07db5987-dfb7-453e-991d-\
d4be2a5a2132"],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"s", "=", "0"}], "n"], 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "s"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox["1", "theta"]], " ", "z"}], ")"}], 
     RowBox[{"1", "+", "s"}]], " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"2", ",", 
      FractionBox[
       RowBox[{"1", "+", "s"}], "theta"]}], "]"}]}], 
   RowBox[{"1", "+", "s"}]]}]], "Output",
 CellChangeTimes->{3.575235605697835*^9, 3.575241275266116*^9, 
  3.575477490994457*^9, 
  3.5754784986200895`*^9},ExpressionUUID->"62a81214-3ea5-4e27-b01f-\
bc1b25fd1e77"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "36"], " ", 
     SqrtBox["\[Theta]"], " ", "z", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SqrtBox["6"], " ", "z"}], "-", "9"}], ")"}]}], "+", 
       RowBox[{"18", " ", 
        SqrtBox["2"]}]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["5", "576"], " ", 
     SuperscriptBox["\[Theta]", 
      RowBox[{"3", "/", "2"}]], " ", "z", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SqrtBox["6"], " ", "z"}], "-", "27"}], ")"}]}], "+", 
       RowBox[{"108", " ", 
        SqrtBox["2"]}]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{"35", " ", 
      SuperscriptBox["\[Theta]", 
       RowBox[{"5", "/", "2"}]], " ", "z", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"8", " ", 
            SqrtBox["6"], " ", "z"}], "-", "81"}], ")"}]}], "+", 
        RowBox[{"648", " ", 
         SqrtBox["2"]}]}], ")"}]}], "55296"], "+", 
    InterpretationBox[
     RowBox[{"O", "(", 
      SuperscriptBox["\[Theta]", 
       RowBox[{"7", "/", "2"}]], ")"}],
     SeriesData[$CellContext`\[Theta], 0, {}, 1, 7, 2],
     Editable->False]}],
   SeriesData[$CellContext`\[Theta], 
    0, {(Rational[1, 36] $CellContext`z) (
      18 2^Rational[
         1, 2] + $CellContext`z (-9 + (2 6^Rational[1, 2]) $CellContext`z)), 
     0, (Rational[5, 576] $CellContext`z) (
      108 2^Rational[
         1, 2] + $CellContext`z (-27 + (4 6^Rational[1, 2]) $CellContext`z)), 
     0, (Rational[35, 55296] $CellContext`z) (
      648 2^Rational[
         1, 2] + $CellContext`z (-81 + (8 6^Rational[1, 2]) $CellContext`z))},
     1, 7, 2],
   Editable->False], TraditionalForm]], "Output",
 CellChangeTimes->{3.575235605697835*^9, 3.575241275266116*^9, 
  3.575477490994457*^9, 
  3.575478499096117*^9},ExpressionUUID->"941e7014-d8fc-4145-9e3b-\
b92470c5b255"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["energy integrals", "Subsection",
 CellChangeTimes->{{3.5752401190389833`*^9, 
  3.575240121634132*^9}},ExpressionUUID->"ef3584d8-5163-48de-90e3-\
a4aa971b1f8a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"theta", ",", " ", "s", ",", " ", "u"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$Assumptions", " ", "=", " ", 
    RowBox[{
     RowBox[{"theta", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"s", " ", "\[Element]", " ", "Integers"}], " ", "&&", " ", 
     RowBox[{"m", " ", "\[Element]", " ", "Integers"}], " ", "&&", " ", 
     RowBox[{"s", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
     RowBox[{"m", " ", "\[GreaterEqual]", " ", "0"}]}]}], " ", ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"i", " ", "=", " ", 
    RowBox[{"Integrate", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{"m", " ", "+", " ", 
          RowBox[{"1", "/", "2"}]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"theta", " ", "x"}]}], ")"}], " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"theta", " ", 
          RowBox[{"x", "/", "2"}]}]}], "]"}], " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "x"}], 
         RowBox[{"(", 
          RowBox[{"1", " ", "+", " ", "s"}], ")"}]}], "]"}]}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"theta_", ",", " ", "s_"}], "]"}], " ", "=", " ", 
   RowBox[{"Integrate", "[", "  ", 
    RowBox[{
     RowBox[{"x", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"theta", " ", "x"}], " ", "+", " ", "1"}], ")"}], "^", 
          "2"}], "-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"3", "/", "2"}], ")"}]}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "x"}], 
        RowBox[{"(", 
         RowBox[{"1", " ", "+", " ", "s"}], ")"}]}], "]"}]}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"\[Theta]", ",", " ", "s"}], "]"}], " ", "//", " ", 
   "TraditionalForm"}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"TraditionalForm", "[", " ", 
  RowBox[{
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{"Integrate", "[", "  ", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]", " ", "x"}], " ", "+", " ", "1"}], ")"}], "^",
            "2"}], "-", "1"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"3", "/", "2"}], ")"}]}], " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "x"}], 
         RowBox[{"(", 
          RowBox[{"1", " ", "+", " ", "s"}], ")"}]}], "]"}]}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", " ", ",", " ", "0", ",", " ", "Infinity"}], "}"}]}], 
     "]"}], " ", "]"}], "==", " ", 
   RowBox[{"u", "[", 
    RowBox[{"\[Theta]", ",", " ", "s"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5752401808595195`*^9, 3.5752401840867043`*^9}, {
  3.5752402163855515`*^9, 3.5752402164785566`*^9}, {3.5752402832503757`*^9, 
  3.5752402836754007`*^9}, {3.5752403176803455`*^9, 3.575240331738149*^9}, {
  3.575240988149694*^9, 
  3.5752410120120587`*^9}},ExpressionUUID->"bef4e9d1-4983-4949-99a8-\
0165c75a845e"],

Cell[BoxData[
 FormBox[
  RowBox[{
   TagBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      RowBox[{"x", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]", " ", "x"}], "+", "1"}], ")"}], "2"], "-", 
          "1"}], ")"}], 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"exp", "(", 
        RowBox[{
         RowBox[{"-", "x"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}]}], ")"}]}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}],
    HoldForm], "\[LongEqual]", 
   FractionBox[
    RowBox[{"15", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["\[Theta]", "3"], " ", 
     TemplateBox[{RowBox[{"-", 
         FractionBox["3", "2"]}],RowBox[{"-", "4"}],FractionBox[
        RowBox[{"2", " ", 
          RowBox[{"(", 
            RowBox[{"s", "+", "1"}], ")"}]}], "\[Theta]"]},
      "HypergeometricU"]}], 
    RowBox[{"8", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"s", "+", "1"}], ")"}], "5"]}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5752403067517204`*^9, 3.575240340202634*^9, {3.575240982206354*^9, 
   3.575240990807846*^9}, 3.5754775051922693`*^9, 
   3.5754785068465605`*^9},ExpressionUUID->"b5c65800-80d9-489d-a713-\
5941b73e59b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{"\[Theta]", ",", " ", "s"}], "]"}]], "Input",ExpressionUUID->\
"1a152392-15fa-4b77-8a34-4596f3a652e7"],

Cell[BoxData[
 FractionBox[
  RowBox[{"15", " ", 
   SqrtBox["\[Pi]"], " ", 
   SuperscriptBox["\[Theta]", "3"], " ", 
   RowBox[{"HypergeometricU", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "2"]}], ",", 
     RowBox[{"-", "4"}], ",", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}]}], "\[Theta]"]}], "]"}]}], 
  RowBox[{"8", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "s"}], ")"}], "5"]}]]], "Output",
 CellChangeTimes->{
  3.5752403805919437`*^9},ExpressionUUID->"3b3ef232-a503-4f66-a7a4-\
214d90657b74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"theta", "^", "2"}], " ", 
      RowBox[{"nbinomial", "[", 
       RowBox[{
        RowBox[{"-", "2"}], ",", " ", "s"}], "]"}], " ", 
      RowBox[{"u", "[", 
       RowBox[{"theta", ",", " ", "s"}], "]"}]}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"theta", ",", " ", "0", ",", " ", "4"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2000"}], ",", " ", "2000"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0", ",", "10", ",", " ", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.575241113799881*^9, 3.5752412626073923`*^9}, {
  3.575241300196542*^9, 
  3.5752413547216606`*^9}},ExpressionUUID->"1cea96d5-0a10-46fd-be06-\
3289f9db6ee7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`s$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`s$$], 0, 10, 1}}, Typeset`size$$ = {
    360., {115., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`s$12440$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`s$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$12440$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[($CellContext`theta^2 $CellContext`nbinomial[-2, \
$CellContext`s$$]) $CellContext`u[$CellContext`theta, $CellContext`s$$], \
{$CellContext`theta, 0, 4}, PlotRange -> {-2000, 2000}], 
      "Specifications" :> {{$CellContext`s$$, 0, 10, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {160., 166.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5752412652525434`*^9, 3.575241287468814*^9}, 
   3.575241356761777*^9, 3.5754775151338377`*^9, 
   3.575478507308587*^9},ExpressionUUID->"c321d4c9-faa2-4062-919b-\
b3c7fe2f99cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"theta", "^", "5"}], " ", 
      RowBox[{"HypergeometricU", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], ",", 
        RowBox[{"-", "4"}], ",", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}]}], "theta"]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"theta", ",", " ", "0", ",", " ", "4"}], "}"}]}], 
    RowBox[{"(*", 
     RowBox[{",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2000"}], ",", " ", "2000"}], "}"}]}]}], "*)"}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0", ",", "10", ",", " ", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5752414730124264`*^9, 
  3.5752415237443285`*^9}},ExpressionUUID->"9d6c671a-69aa-41ab-9061-\
a7cdf5ea319f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`s$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`s$$], 0, 10, 1}}, Typeset`size$$ = {
    360., {106., 111.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`s$13565$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`s$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$13565$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`theta^5 
        HypergeometricU[-(3/2), -4, 
          2 ((1 + $CellContext`s$$)/$CellContext`theta)], {$CellContext`theta,
          0, 4}], "Specifications" :> {{$CellContext`s$$, 0, 10, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {151., 157.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5752414794617953`*^9, 3.5752415293716497`*^9}, 
   3.5754775196750975`*^9},ExpressionUUID->"527440e8-dbd9-4ea6-8d55-\
e676e35bfeee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "huang93Fig6", "]"}], "\[IndentingNewLine]", 
 RowBox[{"huang93Fig6", " ", "=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "s", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", " ", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"HypergeometricU", "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["3", "2"]}], ",", 
           RowBox[{"-", "4"}], ",", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "s"}], ")"}]}], "theta"]}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"theta", "^", "5"}], " ", 
          RowBox[{"HypergeometricU", "[", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["3", "2"]}], ",", 
            RowBox[{"-", "4"}], ",", 
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}]}], "theta"]}], "]"}]}]}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"theta", ",", " ", "0", ",", " ", "2"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{",", "\[IndentingNewLine]", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"TraditionalForm", "[", " ", 
              RowBox[{"HypergeometricU", "[", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["3", "2"]}], ",", 
                RowBox[{"-", "4"}], ",", 
                FractionBox[
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "s"}], ")"}]}], "\[Theta]"]}], "]"}], 
              "]"}], ",", " ", 
             RowBox[{
              RowBox[{"\[Theta]", "^", "5"}], " ", 
              RowBox[{"TraditionalForm", "[", 
               RowBox[{"HypergeometricU", "[", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["3", "2"]}], ",", 
                 RowBox[{"-", "4"}], ",", 
                 FractionBox[
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "s"}], ")"}]}], "\[Theta]"]}], "]"}], 
               "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Left", ",", " ", "Top"}], "}"}]}], "]"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.575241635398714*^9, 3.575241934059797*^9}, {
   3.575242107949743*^9, 3.5752421515802383`*^9}, {3.5752422010510683`*^9, 
   3.5752422353850317`*^9}, 3.5753305743632812`*^9, {3.7595004034883842`*^9, 
   3.759500422355921*^9}},ExpressionUUID->"4a0b5ea3-ccb1-4c77-ab77-\
444e5a4f66ea"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$78082#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJwVVnc0140bRRRRouwd0UAl401878cIGW+Dykq2kGiJKHtURNlF9oxsyg6R
PbM3WVlZL5J+/f56zvPcc55z7j333OfhM7a9YkZBRkamRU5G9v+qajbdVjFj
RooOmTlMvy9FmlKB3W6YTRHnWSryDrRky56JDo/MZdOC7iMEcZ2dkZ3gFHB7
JGiAP59qxzg59pLUmrpzothMYSk0oaQ6wUcS8ONK/MNjien3ZhGDgWdI26om
YUaCd/CEn+qosp88adazs9oo9C4YNRQtpQcvkq6b/lf6mu0BuitKOX/a65Cq
FdgLqyLtcYmlZkpd3oR0il82a5XHEZ8WGas0JqxJkRSGqUfinXBgf291uct9
EvWYe9w1wadQXZMeDnd6TCoaaW+q0nJFyIwyx6qfG8nukqmqfqgbaJuUmDO/
epMEK9ZqVrvdscZYy/98nz9p8KSPgj+bJ2bY155Hy7wmBUezVhzR84Kb/hDr
9ZBQkip9mkxZpDdcP2sdn4t5SyJzOffp2pAPSocsbNcLY0gFC40SizzPIGXh
rf2JJoF028Agx8foOS7TLYkGNieTDjcvivLGv4CVZP6fAPp0Uo+s2/uPE36Y
Vn9+ldo6i/Qyg/HoZcGXEB2J2N/FlEs6z5WQMGMRgMQ2/UbufQWkpzVvDnzW
CkRoQ5rv0tVPJJ2n4//6rwVi7K28quNaCUlcUthfJ/QV9kzW2Xo4VJDoFx40
HJF6jQLd5Iu7kitJs4mlNMvdr8FTxxJGQfOFFMN00fs5WzDy5JjVJu/Vk5ya
wqqvFQXjCPebTwmuTaRrXiMU/HohSB05LN5g3ko6LXtMbvFXCB6Yi8pbiLaT
6NbuuhRHhqJN/15mIWsnaSq9qNRHNgwfeORFrwp1kSpNd21rDoWh77fOyrBe
D8mhM9hhjicCJ9hEfUxkB0mafoMFHysicLuHhaFyfpgkqii45mn0BgZiN5Nu
m42SJnIL73LFv8X0aM4toWcTpHJrsqwZhUikdR/aJURMkt7wX1jIn4jEF1Gj
IX6GadLloD6rfwXfQV3oY/oQ5RxJWI0/lb32HTJ2KO49P7ZAot51e2rSIhql
LiL+eySXSDc/7WSXa8XAXSHugWbyMkmdib/tSGIMJPj4/Iw3VkjSd5WXXqzF
IJdtntNSd43EdCxQVDs0FjN0+4udNDdIFF55GmWTsTizuDn49scmaWmk57aA
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
       "]]},
     Annotation[#, "Charting`Private`Tag$78082#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {0., 174.00079185021332`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.575241816873094*^9, 3.5752418297438307`*^9}, 
   3.575241914398672*^9, {3.5752421092958198`*^9, 3.57524212275959*^9}, 
   3.5752421530373216`*^9, {3.57524220283317*^9, 3.575242236282083*^9}, 
   3.5753304431177745`*^9, 3.575477525856451*^9, 3.5754785129489093`*^9, {
   3.759500406852666*^9, 
   3.759500423814369*^9}},ExpressionUUID->"5d200e26-5d88-44df-a0e8-\
0da9049a745f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"\[Theta]", " ", ">", " ", "0"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"HypergeometricU", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], ",", 
      RowBox[{"-", "4"}], ",", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "s"}], ")"}]}], "\[Theta]"]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "3"}], "}"}]}], "]"}], " ", 
  "//", " ", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.5752422724121494`*^9, 
  3.5752423315565324`*^9}},ExpressionUUID->"51eb8177-8fae-41e9-9fe5-\
f728d5777f1c"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{"s", "+", "1"}]], " ", "s"}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{"s", "+", "1"}]]}]}], 
     SuperscriptBox["\[Theta]", 
      RowBox[{"3", "/", "2"}]]], "+", 
    FractionBox[
     RowBox[{"21", " ", 
      SqrtBox[
       RowBox[{"s", "+", "1"}]]}], 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", 
      SqrtBox["\[Theta]"]}]], "+", 
    FractionBox[
     RowBox[{"189", " ", 
      SqrtBox["\[Theta]"]}], 
     RowBox[{"32", " ", 
      SqrtBox["2"], " ", 
      SqrtBox[
       RowBox[{"s", "+", "1"}]]}]], "-", 
    FractionBox[
     RowBox[{"693", " ", 
      SuperscriptBox["\[Theta]", 
       RowBox[{"3", "/", "2"}]]}], 
     RowBox[{"256", " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox["2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"s", "+", "1"}], ")"}], 
         RowBox[{"3", "/", "2"}]]}], ")"}]}]], "+", 
    InterpretationBox[
     RowBox[{"O", "(", 
      SuperscriptBox["\[Theta]", 
       RowBox[{"7", "/", "2"}]], ")"}],
     SeriesData[$CellContext`\[Theta], 0, {}, -3, 7, 2],
     Editable->False]}],
   SeriesData[$CellContext`\[Theta], 
    0, {(2 2^Rational[1, 2]) (1 + $CellContext`s)^
       Rational[1, 2] + ((2 2^Rational[1, 2]) $CellContext`s) (
        1 + $CellContext`s)^Rational[1, 2], 
     0, (Rational[21, 2] 2^Rational[-1, 2]) (1 + $CellContext`s)^
      Rational[1, 2], 
     0, (Rational[189, 32] 2^Rational[-1, 2]) (1 + $CellContext`s)^
      Rational[-1, 2], 
     0, (Rational[-693, 256] 2^Rational[-1, 2]) (1 + $CellContext`s)^
      Rational[-3, 2]}, -3, 7, 2],
   Editable->False], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.575242289136106*^9, {3.5752423227000256`*^9, 
   3.5752423324125814`*^9}},ExpressionUUID->"65b11629-4f67-41bb-aaa9-\
5f906d314ec1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"theta", ",", " ", "s", ",", " ", "uu", ",", " ", "suu"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$Assumptions", " ", "=", " ", 
    RowBox[{
     RowBox[{"theta", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"s", " ", "\[Element]", " ", "Integers"}], " ", "&&", " ", 
     RowBox[{"n", " ", "\[Element]", " ", "Integers"}], " ", "&&", " ", 
     RowBox[{"s", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
     RowBox[{"n", " ", "\[GreaterEqual]", " ", "0"}]}]}], " ", ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"i", " ", "=", " ", 
    RowBox[{"Integrate", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{"m", " ", "+", " ", 
          RowBox[{"1", "/", "2"}]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"theta", " ", "x"}]}], ")"}], " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"theta", " ", 
          RowBox[{"x", "/", "2"}]}]}], "]"}], " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "x"}], 
         RowBox[{"(", 
          RowBox[{"1", " ", "+", " ", "s"}], ")"}]}], "]"}]}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"uu", "[", 
    RowBox[{"theta_", ",", " ", "z_", ",", "  ", "n_"}], "]"}], " ", "=", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"nbinomial", "[", 
       RowBox[{
        RowBox[{"-", "2"}], ",", " ", "s"}], "]"}], " ", 
      RowBox[{"theta", "^", "2"}], " ", 
      RowBox[{"z", "^", 
       RowBox[{"(", 
        RowBox[{"s", "+", "1"}], ")"}]}], 
      RowBox[{"Integrate", "[", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"theta", " ", "x"}], " ", "+", " ", "1"}], ")"}], "^", 
             "2"}], "-", "1"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"3", "/", "2"}], ")"}]}], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "x"}], 
           RowBox[{"(", 
            RowBox[{"1", " ", "+", " ", "s"}], ")"}]}], "]"}], 
         RowBox[{"(", 
          RowBox[{"x", "-", "1", " ", "-", " ", 
           RowBox[{"z", " ", 
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{"-", "x"}], ")"}]}]}]}], ")"}]}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}]}], "]"}]}],
      " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"s", ",", " ", "0", ",", " ", "n"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"uu", "[", 
     RowBox[{"\[Theta]", ",", " ", "z", ",", " ", "n"}], "]"}], " ", "//", 
    " ", "FullSimplify"}], " ", "//", " ", "TraditionalForm"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"\[Theta]", " ", ">", " ", "0"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"suu", "=", " ", 
   RowBox[{"Series", "[", " ", 
    RowBox[{
     RowBox[{"uu", "[", 
      RowBox[{"\[Theta]", ",", " ", "z", ",", " ", "3"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"z", ",", " ", "0", ",", " ", "3"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"suu", "//", " ", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.5752425343541317`*^9, 3.5752427523656015`*^9}, {
  3.5752433264944396`*^9, 3.575243372017043*^9}, {3.575244481318492*^9, 
  3.575244487837865*^9}},ExpressionUUID->"25c020a7-1110-4610-b437-\
4349657bf8b7"],

Cell[BoxData[
 FormBox[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"s", "=", "0"}], "n"], 
   RowBox[{
    SuperscriptBox["\[Theta]", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "s"], " ", 
    RowBox[{"(", 
     RowBox[{"s", "+", "1"}], ")"}], " ", 
    SuperscriptBox["z", 
     RowBox[{"s", "+", "1"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"105", " ", 
        SqrtBox["\[Pi]"], " ", 
        SuperscriptBox["\[Theta]", "3"], " ", 
        TemplateBox[{RowBox[{"-", 
            FractionBox["1", "2"]}],RowBox[{"-", "4"}],FractionBox[
           RowBox[{"2", " ", 
             RowBox[{"(", 
               RowBox[{"s", "+", "1"}], ")"}]}], "\[Theta]"]},
         "HypergeometricU"]}], 
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"s", "+", "1"}], ")"}], "5"]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SqrtBox["\[Pi]"], " ", 
        SuperscriptBox["\[Theta]", "2"], " ", 
        TemplateBox[{RowBox[{"-", 
            FractionBox["1", "2"]}],RowBox[{"-", "2"}],FractionBox[
           RowBox[{"2", " ", 
             RowBox[{"(", 
               RowBox[{"s", "+", "1"}], ")"}]}], "\[Theta]"]},
         "HypergeometricU"]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"s", "+", "1"}], ")"}], "3"]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SqrtBox["\[Pi]"], " ", 
        SuperscriptBox["\[Theta]", "2"], " ", "z", " ", 
        TemplateBox[{RowBox[{"-", 
            FractionBox["1", "2"]}],RowBox[{"-", "2"}],FractionBox[
           RowBox[{"2", " ", 
             RowBox[{"(", 
               RowBox[{"s", "+", "2"}], ")"}]}], "\[Theta]"]},
         "HypergeometricU"]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"s", "+", "2"}], ")"}], "3"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Theta]", "-", "2"}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"s", "+", "1"}], "\[Theta]"]], " ", 
        TemplateBox[{"1",FractionBox[
           RowBox[{"s", "+", "1"}], "\[Theta]"]},
         "BesselK"]}], 
       RowBox[{"\[Theta]", " ", 
        RowBox[{"(", 
         RowBox[{"s", "+", "1"}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Theta]", "-", "2"}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"s", "+", "1"}], "\[Theta]"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"3", " ", "\[Theta]"}]}], "+", 
          RowBox[{"2", " ", "s"}], "+", "2"}], ")"}], " ", 
        TemplateBox[{"2",FractionBox[
           RowBox[{"s", "+", "1"}], "\[Theta]"]},
         "BesselK"]}], 
       RowBox[{"\[Theta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"s", "+", "1"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", "z", " ", 
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"s", "+", "2"}], "\[Theta]"]], " ", 
        TemplateBox[{"1",FractionBox[
           RowBox[{"s", "+", "2"}], "\[Theta]"]},
         "BesselK"]}], 
       RowBox[{"s", "+", "2"}]], "+", 
      FractionBox[
       RowBox[{"z", " ", 
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"s", "+", "2"}], "\[Theta]"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"3", " ", "\[Theta]"}]}], "+", 
          RowBox[{"2", " ", "s"}], "+", "4"}], ")"}], " ", 
        TemplateBox[{"2",FractionBox[
           RowBox[{"s", "+", "2"}], "\[Theta]"]},
         "BesselK"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"s", "+", "2"}], ")"}], "2"]]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5752427182206483`*^9, 3.5752428544874425`*^9, 
  3.575243563123974*^9},ExpressionUUID->"f8679a98-e691-4796-ab9a-\
14234956523c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{
       RowBox[{
        FractionBox["9", "2"], " ", 
        SqrtBox[
         FractionBox["\[Pi]", "2"]], " ", "z"}], "-", 
       FractionBox[
        RowBox[{"9", " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["z", "2"]}], "16"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "z", "]"}], "3"],
        SeriesData[$CellContext`z, 0, {}, 1, 3, 1],
        Editable->False]}],
      SeriesData[$CellContext`z, 0, {
       Rational[9, 2] (Rational[1, 2] Pi)^Rational[1, 2], Rational[-9, 16] 
        Pi^Rational[1, 2]}, 1, 3, 1],
      Editable->False], ")"}], " ", 
    SuperscriptBox["\[Theta]", 
     RowBox[{"7", "/", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{
       RowBox[{
        FractionBox["225", "16"], " ", 
        SqrtBox[
         FractionBox["\[Pi]", "2"]], " ", "z"}], "-", 
       FractionBox[
        RowBox[{"225", " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["z", "2"]}], "256"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "z", "]"}], "3"],
        SeriesData[$CellContext`z, 0, {}, 1, 3, 1],
        Editable->False]}],
      SeriesData[$CellContext`z, 0, {
       Rational[225, 16] (Rational[1, 2] Pi)^Rational[1, 2], 
        Rational[-225, 256] Pi^Rational[1, 2]}, 1, 3, 1],
      Editable->False], ")"}], " ", 
    SuperscriptBox["\[Theta]", 
     RowBox[{"9", "/", "2"}]]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Theta]", "]"}], 
     RowBox[{"11", "/", "2"}]],
    SeriesData[$CellContext`\[Theta], 0, {}, 7, 11, 2],
    Editable->False]}],
  SeriesData[$CellContext`\[Theta], 0, {
    SeriesData[$CellContext`z, 0, {
     Rational[9, 2] (Rational[1, 2] Pi)^Rational[1, 2], Rational[-9, 16] 
      Pi^Rational[1, 2]}, 1, 3, 1], 0, 
    SeriesData[$CellContext`z, 0, {
     Rational[225, 16] (Rational[1, 2] Pi)^Rational[1, 2], 
      Rational[-225, 256] Pi^Rational[1, 2]}, 1, 3, 1]}, 7, 11, 2],
  Editable->False]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.57524358560526*^9, 3.5752436172770715`*^9}, {
  3.5752437369899187`*^9, 
  3.5752437427942505`*^9}},ExpressionUUID->"34ada8e6-c8a2-4d5e-b9f3-\
32de6ea392ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig3.pdf\>\"", ",", "p"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig4.pdf\>\"", ",", "q"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig5.pdf\>\"", ",", "r"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig2.pdf\>\"", ",", "t"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig6sv.eps\>\"", ",", "ph"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig3sv.eps\>\"", ",", "p"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig4sv.eps\>\"", ",", "q"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig5sv.eps\>\"", ",", "r"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig2sv.eps\>\"", ",", "t"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig6sv.pdf\>\"", ",", "ph"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig3sv.pdf\>\"", ",", "p"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig4sv.pdf\>\"", ",", "q"}], "]"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\huang93Fig2sv.pdf\>\"", ",", "t"}], "]"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\figures\\\\huang93Fig6sv.png\>\"", ",", "ph"}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\figures\\\\huang93Fig3sv.png\>\"", ",", "p"}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\figures\\\\huang93Fig4sv.png\>\"", ",", "q"}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\figures\\\\huang93Fig5sv.png\>\"", ",", "r"}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit\\\\figures\\\\huang93Fig2sv.png\>\"", ",", "t"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ClearAll", "[", "peeters`", "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"<<", "peeters`"}]}]], "Input",
 CellChangeTimes->{{3.5753305847548757`*^9, 3.5753305856389265`*^9}, {
   3.5753306206459284`*^9, 3.5753306473624563`*^9}, {3.5753320129675646`*^9, 
   3.5753320670036554`*^9}, {3.5753322882513103`*^9, 3.575332301270055*^9}, 
   3.575477544162498*^9, {3.5754782307837706`*^9, 3.5754782474887257`*^9}, {
   3.5754783426951714`*^9, 3.57547834389524*^9}, 3.575478521629406*^9, 
   3.575478918561109*^9},ExpressionUUID->"23f25f1c-07e8-46b0-8247-\
6829bffd7799"],

Cell[BoxData["\<\"peeters`\"\>"], "Output",
 CellChangeTimes->{3.575330650761651*^9, 3.5753320724589677`*^9, 
  3.5754782517669706`*^9, 3.5754782902131696`*^9, 3.5754783352307444`*^9, 
  3.5754785240905466`*^9},ExpressionUUID->"309f37a4-f6e5-49ba-91c6-\
388b36ee9e2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"peeters`setGitDir", "::", "usage"}]], "Input",
 CellChangeTimes->{{3.5754782581743374`*^9, 3.5754782706420503`*^9}, {
  3.5754783099572988`*^9, 
  3.5754783584480724`*^9}},ExpressionUUID->"441cb6a6-44a9-4049-802c-\
688fe01e0004"],

Cell[BoxData["\<\"Peeter's home laptop: set working dir relative to \
physicsplay/notes/ (like blogit)\"\>"], "Output",
 CellChangeTimes->{3.575478359092109*^9, 
  3.5754785292988443`*^9},ExpressionUUID->"41d0d759-6368-46b8-9727-\
043dab429a7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"peeters`exportForLatex", "[", " ", 
  RowBox[{"\"\<huang93Fig6sv\>\"", ",", "ph"}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"peeters`exportForLatex", "[", " ", 
  RowBox[{"\"\<huang93Fig3sv\>\"", ",", "p"}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"peeters`exportForLatex", "[", " ", 
  RowBox[{"\"\<huang93Fig4sv\>\"", ",", "q"}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"peeters`exportForLatex", "[", " ", 
  RowBox[{"\"\<huang93Fig5sv\>\"", ",", "r"}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"peeters`exportForLatex", "[", " ", 
  RowBox[{"\"\<huang93Fig2sv\>\"", ",", "t"}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.5754783742149744`*^9, 3.575478433993393*^9}, {
  3.575478618472945*^9, 3.5754786243902836`*^9}, {3.5754787147984543`*^9, 
  3.5754787653933487`*^9}},ExpressionUUID->"5ae2654f-5afc-4146-b2ed-\
734145ab2a46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\
\\blogit/huang93Fig6sv.eps\"\>", 
   ",", "\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit/huang93Fig6svpn.png\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.5754786253893404`*^9, 
  3.5754787702936287`*^9},ExpressionUUID->"f3496309-b7c5-4855-8667-\
1068ba459528"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\
\\blogit/huang93Fig3sv.eps\"\>", 
   ",", "\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit/huang93Fig3svpn.png\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.5754786253893404`*^9, 
  3.5754787721527348`*^9},ExpressionUUID->"73723f9d-3d21-49af-a780-\
d8a6fe78aa86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\
\\blogit/huang93Fig4sv.eps\"\>", 
   ",", "\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit/huang93Fig4svpn.png\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.5754786253893404`*^9, 
  3.575478774068845*^9},ExpressionUUID->"2e631a97-2b05-437d-be4b-\
83b687a96dba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\
\\blogit/huang93Fig5sv.eps\"\>", 
   ",", "\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit/huang93Fig5svpn.png\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.5754786253893404`*^9, 
  3.575478794691024*^9},ExpressionUUID->"4dc5d6f3-57c4-4743-87e1-\
6eeaf866430f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\
\\blogit/huang93Fig2sv.eps\"\>", 
   ",", "\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\\
blogit/huang93Fig2svpn.png\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.5754786253893404`*^9, 
  3.5754787969811554`*^9},ExpressionUUID->"94b984f4-152a-42b2-8632-\
f2af48fc9d07"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"(*", 
   RowBox[{"peeters`setGitDir", "[", 
    RowBox[{"\"\<\>", "blogit", "\"\<\>"}], "]"}], "*)"}], 
  "MessageName"]], "Input",
 CellChangeTimes->{{3.57547853848237*^9, 3.575478543613663*^9}, 
   3.5754786142257023`*^9},ExpressionUUID->"67e02af4-9bd4-43ab-830a-\
310f31707356"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5754784171684313`*^9, 
  3.575478431150231*^9}},ExpressionUUID->"26d51662-345a-43e0-9668-\
4360833b7534"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\blogit\
\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.575478569714156*^9, 
  3.575478605224187*^9}},ExpressionUUID->"2def1b24-5a54-43a0-be85-\
b0ece8bfbc6b"],

Cell[BoxData["\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\\
notes\\\\blogit\"\>"], "Output",
 CellChangeTimes->{3.5754785724173107`*^9, 
  3.575478605786219*^9},ExpressionUUID->"f3f1313f-17b7-44e8-aeec-\
4cddbbf32ed6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\notes\\\\blogit\
\\\\huang93Fig5pd.pdf\>\"", ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.5754789259925337`*^9, 
  3.575478927198603*^9}},ExpressionUUID->"ebb63e0b-0d27-4eb3-9ac2-\
f49f586593ea"],

Cell[BoxData["\<\"C:\\\\Users\\\\Peeter\\\\cygwin_home\\\\physicsplay\\\\\
notes\\\\blogit\\\\huang93Fig5pd.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.575478930862813*^9},ExpressionUUID->"013f90cd-efb6-4854-bf81-\
96a360b7d374"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrals for high density comparisions", "Subsection",
 CellChangeTimes->{{3.575479029317444*^9, 
  3.5754790399790535`*^9}},ExpressionUUID->"244d3b68-f4ff-4052-97da-\
363ec698cdf7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "pHighDensity", ",", " ", "uHighDensity", ",", " ", "y", ",", " ", 
   "\[Theta]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"pHighDensity", " ", "=", " ", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"u", "^", "2"}], " ", "-", " ", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"u", ",", " ", "1", ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]", " ", "y"}], " ", "+", " ", "1"}]}], "}"}]}], 
    "]"}], " ", "//", " ", "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"uHighDensity", " ", "=", " ", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"u", "^", "2"}], " ", "-", " ", "u"}], ")"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"u", "^", "2"}], " ", "-", " ", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}]}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"u", ",", " ", "1", ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]", " ", "y"}], " ", "+", " ", "1"}]}], "}"}]}], 
    "]"}], " ", "//", " ", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.5754796400783777`*^9, 
  3.575479746893487*^9}},ExpressionUUID->"61168ce0-8df0-4518-a158-\
8691d84195f4"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "8"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"y", " ", "\[Theta]"}]}], ")"}], " ", 
       SqrtBox[
        RowBox[{"y", " ", "\[Theta]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"y", " ", "\[Theta]"}]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", "y", " ", "\[Theta]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"y", " ", "\[Theta]"}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"3", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", 
         RowBox[{"y", " ", "\[Theta]"}], "+", 
         SqrtBox[
          RowBox[{"y", " ", "\[Theta]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"y", " ", "\[Theta]"}]}], ")"}]}]]}], "]"}]}]}], ")"}]}],
    ",", 
   RowBox[{
    RowBox[{"y", " ", "\[Theta]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.575479722959118*^9, 3.5754797355488377`*^9}, 
   3.5754798253939767`*^9},ExpressionUUID->"cc243753-4320-4b1e-9f00-\
9f6934a459c0"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "24"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{"y", " ", "\[Theta]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"y", " ", "\[Theta]"}]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"y", " ", "\[Theta]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "y", " ", "\[Theta]", " ", 
             RowBox[{"(", 
              RowBox[{"5", "+", 
               RowBox[{"3", " ", "y", " ", "\[Theta]"}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", 
         RowBox[{"y", " ", "\[Theta]"}], "+", 
         SqrtBox[
          RowBox[{"y", " ", "\[Theta]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"y", " ", "\[Theta]"}]}], ")"}]}]]}], "]"}]}]}], ")"}]}],
    ",", 
   RowBox[{
    RowBox[{"y", " ", "\[Theta]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.575479722959118*^9, 3.5754797355488377`*^9}, 
   3.5754799047255144`*^9},ExpressionUUID->"60d4b483-5cc7-4da2-b900-\
154d86f2859c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"y", " ", "\[Theta]"}], " ", ">", " ", "0"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pHighDensity", " ", "//", " ", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.57547983995181*^9, 
  3.575479867196368*^9}},ExpressionUUID->"96310207-0e2e-4d1a-9071-\
a62839c626f2"],

Cell[BoxData[
 FormBox[
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "8"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", " ", "y"}], "+", "1"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"\[Theta]", " ", "y", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]", " ", "y"}], "+", "2"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Theta]", " ", "y", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]", " ", "y"}], "+", "2"}], ")"}]}], "-", "3"}], 
         ")"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"log", "(", 
         RowBox[{
          RowBox[{"\[Theta]", " ", "y"}], "+", 
          SqrtBox[
           RowBox[{"\[Theta]", " ", "y", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]", " ", "y"}], "+", "2"}], ")"}]}]], "+", 
          "1"}], ")"}]}]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"\[Theta]", " ", "y"}], ">", "0"}]}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5754799052365437`*^9},ExpressionUUID->"5dc80da9-7fe9-4b00-bd9b-\
bad653774f4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"y", " ", "\[Theta]"}], " ", ">", " ", "0"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"uHighDensity", " ", "//", " ", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.575479943276719*^9, 
  3.5754799434507294`*^9}},ExpressionUUID->"40d5bb08-5708-4456-90d2-\
792c5b5fe2f5"],

Cell[BoxData[
 FormBox[
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "24"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{"\[Theta]", " ", "y", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]", " ", "y"}], "+", "2"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", " ", "y", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "\[Theta]", " ", "y", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", "\[Theta]", " ", "y"}], "+", "5"}], ")"}]}],
              "-", "1"}], ")"}]}], "+", "3"}], ")"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"log", "(", 
         RowBox[{
          RowBox[{"\[Theta]", " ", "y"}], "+", 
          SqrtBox[
           RowBox[{"\[Theta]", " ", "y", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]", " ", "y"}], "+", "2"}], ")"}]}]], "+", 
          "1"}], ")"}]}]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"\[Theta]", " ", "y"}], ">", "0"}]}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.575479945199829*^9},ExpressionUUID->"411c9227-c9ff-44ae-b0e4-\
5dae7b2548b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"peeters`exportForLatex", "[", 
  RowBox[{"\"\<huang93Fig2\>\"", ",", "huang93Fig2"}], "]"}]], "Input",
 CellChangeTimes->{{3.759500117319265*^9, 
  3.7595001173294067`*^9}},ExpressionUUID->"18d52479-198c-43fe-90c1-\
04e52946cab2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"huang93Fig2.eps\"\>", ",", "\<\"huang93Fig2pn.png\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.759500142346773*^9},ExpressionUUID->"3437ce44-02ca-43c9-9c49-\
c789c69300e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"peeters`exportForLatex", "[", 
  RowBox[{"\"\<huang93Fig3\>\"", ",", "huang93Fig3"}], "]"}]], "Input",
 CellChangeTimes->{{3.759500281940628*^9, 
  3.759500281950206*^9}},ExpressionUUID->"01b3a676-cd10-48c1-a7ee-\
eb314a93f839"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"huang93Fig3.eps\"\>", ",", "\<\"huang93Fig3pn.png\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.759500283994302*^9},ExpressionUUID->"e246068a-d00e-4125-84f9-\
cc1d8f3075f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"peeters`exportForLatex", "[", 
   RowBox[{"\"\<huang93Fig6\>\"", ",", "huang93Fig6"}], "]"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.7595004523225727`*^9, 
  3.759500452334107*^9}},ExpressionUUID->"959f6e77-4ebf-400b-a99c-\
4ef0cfee53a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"huang93Fig6.eps\"\>", ",", "\<\"huang93Fig6pn.png\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.759500453990288*^9},ExpressionUUID->"16e204bf-aa87-40c6-bb57-\
da0b9555609b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 765},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 519, 16, 115, "Input",ExpressionUUID->"9c907d45-e80f-43c5-aace-563c2a5b2dd8"],
Cell[CellGroupData[{
Cell[1101, 40, 186, 3, 67, "Section",ExpressionUUID->"50fd0a9e-9430-4cec-a120-9b47e0575427"],
Cell[CellGroupData[{
Cell[1312, 47, 158, 3, 54, "Subsection",ExpressionUUID->"7fb01a1a-6f90-4c2a-b17e-e11da3570a4f"],
Cell[CellGroupData[{
Cell[1495, 54, 1552, 42, 94, "Input",ExpressionUUID->"a94de182-dd78-4e0e-bb80-a58b5f3d250a"],
Cell[3050, 98, 567, 17, 51, "Output",ExpressionUUID->"c7cb2a51-1294-4be1-aaaa-f8ad9fd15989"],
Cell[3620, 117, 249, 6, 54, "Output",ExpressionUUID->"f9d83fd7-b9da-4d0f-acbf-640632ceab5e"],
Cell[3872, 125, 423, 13, 51, "Output",ExpressionUUID->"f5c2de2e-9c9c-4d7e-8e48-cc31b84797a3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4344, 144, 215, 4, 54, "Subsection",ExpressionUUID->"5069df9d-0c88-404e-a587-ebda0afbade3"],
Cell[CellGroupData[{
Cell[4584, 152, 1395, 41, 94, "Input",ExpressionUUID->"62682970-0d19-4555-a168-941c8e19a054"],
Cell[5982, 195, 441, 13, 71, "Output",ExpressionUUID->"c9d06b1e-e399-4a0a-aba7-28a3d84e401a"],
Cell[6426, 210, 199, 3, 34, "Output",ExpressionUUID->"29680134-26cf-41a2-93ee-cd686a941454"],
Cell[6628, 215, 200, 3, 34, "Output",ExpressionUUID->"618f541a-6c27-4a95-b436-f38d0093fbe9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6877, 224, 191, 3, 54, "Subsection",ExpressionUUID->"6c6e0dbf-b48d-4503-90cb-ea65314d49c8"],
Cell[CellGroupData[{
Cell[7093, 231, 1744, 44, 241, "Input",ExpressionUUID->"d9bfb6e3-34fb-4516-a729-27e21b5bca78"],
Cell[8840, 277, 419, 8, 34, "Output",ExpressionUUID->"3f12afa5-c01a-454a-b631-5b681a0d7c64"],
Cell[9262, 287, 1242, 38, 75, "Output",ExpressionUUID->"9ecc0774-7bc9-4e44-81fc-aed5666e8e5a"],
Cell[10507, 327, 6548, 197, 174, "Output",ExpressionUUID->"a98d07aa-f138-494f-8eec-7241c12f6e6b"],
Cell[17058, 526, 2331, 67, 68, "Output",ExpressionUUID->"130d7e96-28af-44ee-ac1b-470444cd2a4a"],
Cell[19392, 595, 1004, 29, 83, "Output",ExpressionUUID->"581d3002-c46c-49d0-8f34-3c03fb86e56e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20445, 630, 183, 3, 54, "Subsection",ExpressionUUID->"a2629c5d-c124-4fd9-bb47-c0b68801bd1d"],
Cell[CellGroupData[{
Cell[20653, 637, 2773, 80, 157, "Input",ExpressionUUID->"69029a0f-05d4-4cc2-bdbf-f59fe1b90824"],
Cell[23429, 719, 597, 20, 62, "Output",ExpressionUUID->"88aaff3a-d985-4463-a80c-a6d76bc9486e"],
Cell[24029, 741, 533, 18, 65, "Output",ExpressionUUID->"a0dd753b-eaa3-410a-8a11-f6b482497b2e"],
Cell[24565, 761, 746, 23, 62, "Output",ExpressionUUID->"79d26a70-d875-4bb7-bda7-d9271d2488e6"],
Cell[25314, 786, 682, 22, 66, "Output",ExpressionUUID->"2e2be755-7e3a-4ce4-bf62-8517c55c0c93"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26045, 814, 191, 3, 54, "Subsection",ExpressionUUID->"84778787-2764-4c72-9440-f1506763573c"],
Cell[26239, 819, 3494, 109, 178, "Input",ExpressionUUID->"4253a277-24d3-4213-8567-9278e9033f5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29770, 933, 161, 3, 54, "Subsection",ExpressionUUID->"5ce00282-6938-4bf6-a0c8-af6a9574aa59"],
Cell[29934, 938, 1473, 45, 94, "Input",ExpressionUUID->"3c2d3501-0839-4934-9add-5968cdeda9b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31444, 988, 221, 5, 54, "Subsection",ExpressionUUID->"bff91f1d-37ba-42ee-91b4-27db5901ee8c"],
Cell[31668, 995, 1868, 54, 115, "Input",ExpressionUUID->"5ae84ac8-bc72-4912-934c-2f35167f9f77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33573, 1054, 236, 4, 54, "Subsection",ExpressionUUID->"40f23624-d12c-4557-8b97-34ef6102c911"],
Cell[CellGroupData[{
Cell[33834, 1062, 5440, 140, 409, "Input",ExpressionUUID->"f66a8a57-6c17-4707-b255-f98291186445"],
Cell[39277, 1204, 838, 20, 69, "Output",ExpressionUUID->"b4507b71-5380-4373-ae3b-ed197905593a"],
Cell[40118, 1226, 2869, 81, 78, "Output",ExpressionUUID->"1f8b5570-ed5b-4d08-ae4a-46f0113df281"],
Cell[42990, 1309, 28220, 567, 194, "Output",ExpressionUUID->"41733006-c438-41ba-aecf-cda42ffb9ba7"]
}, Open  ]],
Cell[71225, 1879, 2664, 78, 77, "Input",ExpressionUUID->"9270645a-1d8e-4320-bf07-ce1a1a1ea597"],
Cell[73892, 1959, 179, 3, 30, "Input",ExpressionUUID->"db762742-c59e-4c87-b7d2-a109a8f0a9d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74108, 1967, 194, 3, 54, "Subsection",ExpressionUUID->"bdee956b-1f3f-41f3-b3a1-34943c70b994"],
Cell[CellGroupData[{
Cell[74327, 1974, 6472, 161, 1039, "Input",ExpressionUUID->"191b008c-d96b-451b-8c0d-b9415931c419"],
Cell[80802, 2137, 788, 23, 69, "Output",ExpressionUUID->"76d4743f-3bd3-4ca0-8801-b1d4d1fa68f8"],
Cell[81593, 2162, 816, 23, 69, "Output",ExpressionUUID->"e68c2f96-65bc-4fd3-a6a8-00e183084b0d"],
Cell[82412, 2187, 2114, 43, 369, "Output",ExpressionUUID->"7437c52e-0b6f-43a5-b480-6170df4d465a"],
Cell[84529, 2232, 2118, 43, 383, "Output",ExpressionUUID->"fb5f9cc6-81ac-4aa9-bd3d-9d2bfb1adb36"],
Cell[86650, 2277, 8692, 161, 227, "Output",ExpressionUUID->"9fa6d517-f7bd-4cf4-8c33-45df2e44534d"],
Cell[95345, 2440, 1973, 40, 383, "Output",ExpressionUUID->"25775ee4-d7c9-42a6-927b-620b928c62e7"],
Cell[97321, 2482, 192882, 3178, 289, "Output",ExpressionUUID->"77078377-1f2f-4553-ae9e-34d979b14ff4"]
}, Open  ]],
Cell[290218, 5663, 683, 10, 52, "Input",ExpressionUUID->"ee4b93b2-cf2c-49e3-b69e-7ba2946fe151"],
Cell[CellGroupData[{
Cell[290926, 5677, 953, 14, 30, "Input",ExpressionUUID->"86497b78-0a4e-48c5-afc5-cb87f8f69fc6"],
Cell[291882, 5693, 432, 7, 34, "Output",ExpressionUUID->"cd908b69-8cd3-4bcb-b96e-efd4b503049f"],
Cell[292317, 5702, 430, 7, 34, "Output",ExpressionUUID->"9a195a10-03f1-46f0-b78a-c98d31c21faa"]
}, Open  ]],
Cell[292762, 5712, 177, 3, 30, "Input",ExpressionUUID->"570a3475-968c-4632-939c-823bc04df858"],
Cell[CellGroupData[{
Cell[292964, 5719, 1960, 48, 241, "Input",ExpressionUUID->"8b3e8648-ce95-41d6-a043-d04acf3125ba"],
Cell[294927, 5769, 75712, 1401, 200, "Output",ExpressionUUID->"75c1c40b-2f65-4a64-9d48-fec93032b73a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370676, 7175, 1324, 31, 115, "Input",ExpressionUUID->"5255564a-fe2c-4d90-a4f1-f863b1d6384c"],
Cell[372003, 7208, 3506, 106, 57, "Output",ExpressionUUID->"70b4f5df-b885-4397-8cca-50385387c279"],
Cell[375512, 7316, 3637, 107, 57, "Output",ExpressionUUID->"be5c4d96-8083-4492-ba0d-aeda37a7c398"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379186, 7428, 2044, 64, 73, "Input",ExpressionUUID->"b16c9945-bcb7-4711-b4f1-7db4e4268525"],
Cell[381233, 7494, 183, 3, 34, "Output",ExpressionUUID->"63833cd5-fcd6-4c9b-ac08-235bfc246f58"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[381465, 7503, 179, 3, 54, "Subsection",ExpressionUUID->"55a0b743-af86-4180-b82f-0fb433874609"],
Cell[CellGroupData[{
Cell[381669, 7510, 2556, 76, 199, "Input",ExpressionUUID->"565fc1ba-10a6-4462-8e14-492c2773ceef"],
Cell[384228, 7588, 526, 17, 55, "Output",ExpressionUUID->"07db5987-dfb7-453e-991d-d4be2a5a2132"],
Cell[384757, 7607, 731, 23, 75, "Output",ExpressionUUID->"62a81214-3ea5-4e27-b01f-bc1b25fd1e77"],
Cell[385491, 7632, 2118, 63, 55, "Output",ExpressionUUID->"941e7014-d8fc-4145-9e3b-b92470c5b255"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[387658, 7701, 166, 3, 54, "Subsection",ExpressionUUID->"ef3584d8-5163-48de-90e3-a4aa971b1f8a"],
Cell[CellGroupData[{
Cell[387849, 7708, 3611, 101, 178, "Input",ExpressionUUID->"bef4e9d1-4983-4949-99a8-0165c75a845e"],
Cell[391463, 7811, 1388, 42, 64, "Output",ExpressionUUID->"b5c65800-80d9-489d-a713-5941b73e59b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392888, 7858, 146, 3, 30, "Input",ExpressionUUID->"1a152392-15fa-4b77-8a34-4596f3a652e7"],
Cell[393037, 7863, 604, 20, 65, "Output",ExpressionUUID->"3b3ef232-a503-4f66-a7a4-214d90657b74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393678, 7888, 996, 27, 136, "Input",ExpressionUUID->"1cea96d5-0a10-46fd-be06-3289f9db6ee7"],
Cell[394677, 7917, 1819, 37, 345, "Output",ExpressionUUID->"c321d4c9-faa2-4062-919b-b3c7fe2f99cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396533, 7959, 1092, 31, 176, "Input",ExpressionUUID->"9d6c671a-69aa-41ab-9061-a7cdf5ea319f"],
Cell[397628, 7992, 1739, 36, 327, "Output",ExpressionUUID->"527440e8-dbd9-4ea6-8d55-e676e35bfeee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399404, 8033, 3075, 76, 318, "Input",ExpressionUUID->"4a0b5ea3-ccb1-4c77-ab77-444e5a4f66ea"],
Cell[402482, 8111, 13297, 238, 237, "Output",ExpressionUUID->"5d200e26-5d88-44df-a0e8-0da9049a745f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415816, 8354, 756, 22, 69, "Input",ExpressionUUID->"51eb8177-8fae-41e9-9fe5-f728d5777f1c"],
Cell[416575, 8378, 1985, 62, 60, "Output",ExpressionUUID->"65b11629-4f67-41bb-aaa9-5f906d314ec1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418597, 8445, 4004, 110, 220, "Input",ExpressionUUID->"25c020a7-1110-4610-b437-4349657bf8b7"],
Cell[422604, 8557, 4116, 118, 78, "Output",ExpressionUUID->"f8679a98-e691-4796-ab9a-14234956523c"],
Cell[426723, 8677, 2387, 68, 60, "Output",ExpressionUUID->"34ada8e6-c8a2-4d5e-b9f3-32de6ea392ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429147, 8750, 4508, 103, 535, "Input",ExpressionUUID->"23f25f1c-07e8-46b0-8247-6829bffd7799"],
Cell[433658, 8855, 268, 4, 34, "Output",ExpressionUUID->"309f37a4-f6e5-49ba-91c6-388b36ee9e2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433963, 8864, 253, 5, 30, "Input",ExpressionUUID->"441cb6a6-44a9-4049-802c-688fe01e0004"],
Cell[434219, 8871, 245, 4, 34, "Output",ExpressionUUID->"41d0d759-6368-46b8-9727-043dab429a7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434501, 8880, 888, 18, 115, "Input",ExpressionUUID->"5ae2654f-5afc-4146-b2ed-734145ab2a46"],
Cell[435392, 8900, 401, 8, 34, "Output",ExpressionUUID->"f3496309-b7c5-4855-8667-1068ba459528"],
Cell[435796, 8910, 401, 8, 34, "Output",ExpressionUUID->"73723f9d-3d21-49af-a780-d8a6fe78aa86"],
Cell[436200, 8920, 399, 8, 34, "Output",ExpressionUUID->"2e631a97-2b05-437d-be4b-83b687a96dba"],
Cell[436602, 8930, 399, 8, 34, "Output",ExpressionUUID->"4dc5d6f3-57c4-4743-87e1-6eeaf866430f"],
Cell[437004, 8940, 401, 8, 34, "Output",ExpressionUUID->"94b984f4-152a-42b2-8632-f2af48fc9d07"]
}, Open  ]],
Cell[437420, 8951, 317, 8, 30, "Input",ExpressionUUID->"67e02af4-9bd4-43ab-830a-310f31707356"],
Cell[437740, 8961, 154, 3, 30, "Input",ExpressionUUID->"26d51662-345a-43e0-9668-4360833b7534"],
Cell[CellGroupData[{
Cell[437919, 8968, 273, 6, 30, "Input",ExpressionUUID->"2def1b24-5a54-43a0-be85-b0ece8bfbc6b"],
Cell[438195, 8976, 233, 4, 34, "Output",ExpressionUUID->"f3f1313f-17b7-44e8-aeec-4cddbbf32ed6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438465, 8985, 313, 7, 30, "Input",ExpressionUUID->"ebb63e0b-0d27-4eb3-9ac2-f49f586593ea"],
Cell[438781, 8994, 230, 4, 34, "Output",ExpressionUUID->"013f90cd-efb6-4854-bf81-96a360b7d374"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[439060, 9004, 189, 3, 54, "Subsection",ExpressionUUID->"244d3b68-f4ff-4052-97da-363ec698cdf7"],
Cell[CellGroupData[{
Cell[439274, 9011, 1423, 41, 73, "Input",ExpressionUUID->"61168ce0-8df0-4518-a158-8691d84195f4"],
Cell[440700, 9054, 1256, 37, 51, "Output",ExpressionUUID->"cc243753-4320-4b1e-9f00-9f6934a459c0"],
Cell[441959, 9093, 1300, 38, 50, "Output",ExpressionUUID->"60d4b483-5cc7-4da2-b900-154d86f2859c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443296, 9136, 375, 9, 52, "Input",ExpressionUUID->"96310207-0e2e-4d1a-9071-a62839c626f2"],
Cell[443674, 9147, 1262, 39, 50, "Output",ExpressionUUID->"5dc80da9-7fe9-4b00-bd9b-bad653774f4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444973, 9191, 378, 9, 52, "Input",ExpressionUUID->"40d5bb08-5708-4456-90d2-792c5b5fe2f5"],
Cell[445354, 9202, 1293, 39, 50, "Output",ExpressionUUID->"411c9227-c9ff-44ae-b0e4-5dae7b2548b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446684, 9246, 254, 5, 30, "Input",ExpressionUUID->"18d52479-198c-43fe-90c1-04e52946cab2"],
Cell[446941, 9253, 224, 6, 34, "Output",ExpressionUUID->"3437ce44-02ca-43c9-9c49-c789c69300e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447202, 9264, 252, 5, 30, "Input",ExpressionUUID->"01b3a676-cd10-48c1-a7ee-eb314a93f839"],
Cell[447457, 9271, 224, 6, 34, "Output",ExpressionUUID->"e246068a-d00e-4125-84f9-cc1d8f3075f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447718, 9282, 277, 7, 52, "Input",ExpressionUUID->"959f6e77-4ebf-400b-a99c-4ef0cfee53a6"],
Cell[447998, 9291, 224, 6, 34, "Output",ExpressionUUID->"16e204bf-aa87-40c6-bb57-da0b9555609b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

